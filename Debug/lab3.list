
lab3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002994  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000030  08002aa0  08002aa0  00012aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002ad0  08002ad0  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  08002ad0  08002ad0  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002ad0  08002ad0  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002ad0  08002ad0  00012ad0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002ad4  08002ad4  00012ad4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08002ad8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b8  20000014  08002aec  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000cc  08002aec  000200cc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002003d  2**0
                  CONTENTS, READONLY
 13 .debug_info   00008cda  00000000  00000000  00020080  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001cf3  00000000  00000000  00028d5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000aa0  00000000  00000000  0002aa50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000817  00000000  00000000  0002b4f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000174b4  00000000  00000000  0002bd07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000c3d4  00000000  00000000  000431bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000857f7  00000000  00000000  0004f58f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002a14  00000000  00000000  000d4d88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000042  00000000  00000000  000d779c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000014 	.word	0x20000014
 8000128:	00000000 	.word	0x00000000
 800012c:	08002a88 	.word	0x08002a88

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000018 	.word	0x20000018
 8000148:	08002a88 	.word	0x08002a88

0800014c <button_reading>:
static GPIO_PinState debounceButton3[NO_OF_BUTTON];
static uint8_t flagforButtonPressed1s[NO_OF_BUTTON];
static uint8_t counterforButtonPressed1s[NO_OF_BUTTON];


void button_reading(void){
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
	for(int i = 0; i < NO_OF_BUTTON; i++){
 8000152:	2300      	movs	r3, #0
 8000154:	607b      	str	r3, [r7, #4]
 8000156:	e054      	b.n	8000202 <button_reading+0xb6>
		debounceButton1[i] = debounceButton2[i];
 8000158:	4a2e      	ldr	r2, [pc, #184]	; (8000214 <button_reading+0xc8>)
 800015a:	687b      	ldr	r3, [r7, #4]
 800015c:	4413      	add	r3, r2
 800015e:	7819      	ldrb	r1, [r3, #0]
 8000160:	4a2d      	ldr	r2, [pc, #180]	; (8000218 <button_reading+0xcc>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	4413      	add	r3, r2
 8000166:	460a      	mov	r2, r1
 8000168:	701a      	strb	r2, [r3, #0]
		debounceButton2[i] = debounceButton3[i];
 800016a:	4a2c      	ldr	r2, [pc, #176]	; (800021c <button_reading+0xd0>)
 800016c:	687b      	ldr	r3, [r7, #4]
 800016e:	4413      	add	r3, r2
 8000170:	7819      	ldrb	r1, [r3, #0]
 8000172:	4a28      	ldr	r2, [pc, #160]	; (8000214 <button_reading+0xc8>)
 8000174:	687b      	ldr	r3, [r7, #4]
 8000176:	4413      	add	r3, r2
 8000178:	460a      	mov	r2, r1
 800017a:	701a      	strb	r2, [r3, #0]
		updateButtonState(i);
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	b2db      	uxtb	r3, r3
 8000180:	4618      	mov	r0, r3
 8000182:	f000 f853 	bl	800022c <updateButtonState>

		if(debounceButton3[i] == debounceButton1[i]){
 8000186:	4a25      	ldr	r2, [pc, #148]	; (800021c <button_reading+0xd0>)
 8000188:	687b      	ldr	r3, [r7, #4]
 800018a:	4413      	add	r3, r2
 800018c:	781a      	ldrb	r2, [r3, #0]
 800018e:	4922      	ldr	r1, [pc, #136]	; (8000218 <button_reading+0xcc>)
 8000190:	687b      	ldr	r3, [r7, #4]
 8000192:	440b      	add	r3, r1
 8000194:	781b      	ldrb	r3, [r3, #0]
 8000196:	429a      	cmp	r2, r3
 8000198:	d130      	bne.n	80001fc <button_reading+0xb0>
			buttonBuffer[i] = debounceButton1[i];
 800019a:	4a1f      	ldr	r2, [pc, #124]	; (8000218 <button_reading+0xcc>)
 800019c:	687b      	ldr	r3, [r7, #4]
 800019e:	4413      	add	r3, r2
 80001a0:	7819      	ldrb	r1, [r3, #0]
 80001a2:	4a1f      	ldr	r2, [pc, #124]	; (8000220 <button_reading+0xd4>)
 80001a4:	687b      	ldr	r3, [r7, #4]
 80001a6:	4413      	add	r3, r2
 80001a8:	460a      	mov	r2, r1
 80001aa:	701a      	strb	r2, [r3, #0]
			if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 80001ac:	4a1c      	ldr	r2, [pc, #112]	; (8000220 <button_reading+0xd4>)
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	4413      	add	r3, r2
 80001b2:	781b      	ldrb	r3, [r3, #0]
 80001b4:	2b00      	cmp	r3, #0
 80001b6:	d117      	bne.n	80001e8 <button_reading+0x9c>
				if(counterforButtonPressed1s[i] < DURATION_FOR_AUTO_INCREASING){
 80001b8:	4a1a      	ldr	r2, [pc, #104]	; (8000224 <button_reading+0xd8>)
 80001ba:	687b      	ldr	r3, [r7, #4]
 80001bc:	4413      	add	r3, r2
 80001be:	781b      	ldrb	r3, [r3, #0]
 80001c0:	2b63      	cmp	r3, #99	; 0x63
 80001c2:	d80b      	bhi.n	80001dc <button_reading+0x90>
					counterforButtonPressed1s[i]++;
 80001c4:	4a17      	ldr	r2, [pc, #92]	; (8000224 <button_reading+0xd8>)
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	4413      	add	r3, r2
 80001ca:	781b      	ldrb	r3, [r3, #0]
 80001cc:	3301      	adds	r3, #1
 80001ce:	b2d9      	uxtb	r1, r3
 80001d0:	4a14      	ldr	r2, [pc, #80]	; (8000224 <button_reading+0xd8>)
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	4413      	add	r3, r2
 80001d6:	460a      	mov	r2, r1
 80001d8:	701a      	strb	r2, [r3, #0]
 80001da:	e00f      	b.n	80001fc <button_reading+0xb0>
				}
				else{
					flagforButtonPressed1s[i] = 1;
 80001dc:	4a12      	ldr	r2, [pc, #72]	; (8000228 <button_reading+0xdc>)
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	4413      	add	r3, r2
 80001e2:	2201      	movs	r2, #1
 80001e4:	701a      	strb	r2, [r3, #0]
 80001e6:	e009      	b.n	80001fc <button_reading+0xb0>
				}
			}
			else{
				flagforButtonPressed1s[i] = 0;
 80001e8:	4a0f      	ldr	r2, [pc, #60]	; (8000228 <button_reading+0xdc>)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4413      	add	r3, r2
 80001ee:	2200      	movs	r2, #0
 80001f0:	701a      	strb	r2, [r3, #0]
				counterforButtonPressed1s[i] = 0;
 80001f2:	4a0c      	ldr	r2, [pc, #48]	; (8000224 <button_reading+0xd8>)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	4413      	add	r3, r2
 80001f8:	2200      	movs	r2, #0
 80001fa:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < NO_OF_BUTTON; i++){
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	3301      	adds	r3, #1
 8000200:	607b      	str	r3, [r7, #4]
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	2b02      	cmp	r3, #2
 8000206:	dda7      	ble.n	8000158 <button_reading+0xc>
			}
		}
	}
}
 8000208:	bf00      	nop
 800020a:	bf00      	nop
 800020c:	3708      	adds	r7, #8
 800020e:	46bd      	mov	sp, r7
 8000210:	bd80      	pop	{r7, pc}
 8000212:	bf00      	nop
 8000214:	20000038 	.word	0x20000038
 8000218:	20000034 	.word	0x20000034
 800021c:	2000003c 	.word	0x2000003c
 8000220:	20000030 	.word	0x20000030
 8000224:	20000044 	.word	0x20000044
 8000228:	20000040 	.word	0x20000040

0800022c <updateButtonState>:

void updateButtonState(uint8_t idx){
 800022c:	b590      	push	{r4, r7, lr}
 800022e:	b083      	sub	sp, #12
 8000230:	af00      	add	r7, sp, #0
 8000232:	4603      	mov	r3, r0
 8000234:	71fb      	strb	r3, [r7, #7]
	switch(idx){
 8000236:	79fb      	ldrb	r3, [r7, #7]
 8000238:	2b02      	cmp	r3, #2
 800023a:	d01c      	beq.n	8000276 <updateButtonState+0x4a>
 800023c:	2b02      	cmp	r3, #2
 800023e:	dc25      	bgt.n	800028c <updateButtonState+0x60>
 8000240:	2b00      	cmp	r3, #0
 8000242:	d002      	beq.n	800024a <updateButtonState+0x1e>
 8000244:	2b01      	cmp	r3, #1
 8000246:	d00b      	beq.n	8000260 <updateButtonState+0x34>
	case 2:{
		debounceButton3[idx] = HAL_GPIO_ReadPin(BUTTON2_GPIO_Port, BUTTON2_Pin);
		break;
	}
	default:{
		break;
 8000248:	e020      	b.n	800028c <updateButtonState+0x60>
		debounceButton3[idx] = HAL_GPIO_ReadPin(BUTTON0_GPIO_Port, BUTTON0_Pin);
 800024a:	79fc      	ldrb	r4, [r7, #7]
 800024c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000250:	4811      	ldr	r0, [pc, #68]	; (8000298 <updateButtonState+0x6c>)
 8000252:	f001 fbeb 	bl	8001a2c <HAL_GPIO_ReadPin>
 8000256:	4603      	mov	r3, r0
 8000258:	461a      	mov	r2, r3
 800025a:	4b10      	ldr	r3, [pc, #64]	; (800029c <updateButtonState+0x70>)
 800025c:	551a      	strb	r2, [r3, r4]
		break;
 800025e:	e016      	b.n	800028e <updateButtonState+0x62>
		debounceButton3[idx] = HAL_GPIO_ReadPin(BUTTON1_GPIO_Port, BUTTON1_Pin);
 8000260:	79fc      	ldrb	r4, [r7, #7]
 8000262:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000266:	480c      	ldr	r0, [pc, #48]	; (8000298 <updateButtonState+0x6c>)
 8000268:	f001 fbe0 	bl	8001a2c <HAL_GPIO_ReadPin>
 800026c:	4603      	mov	r3, r0
 800026e:	461a      	mov	r2, r3
 8000270:	4b0a      	ldr	r3, [pc, #40]	; (800029c <updateButtonState+0x70>)
 8000272:	551a      	strb	r2, [r3, r4]
		break;
 8000274:	e00b      	b.n	800028e <updateButtonState+0x62>
		debounceButton3[idx] = HAL_GPIO_ReadPin(BUTTON2_GPIO_Port, BUTTON2_Pin);
 8000276:	79fc      	ldrb	r4, [r7, #7]
 8000278:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800027c:	4806      	ldr	r0, [pc, #24]	; (8000298 <updateButtonState+0x6c>)
 800027e:	f001 fbd5 	bl	8001a2c <HAL_GPIO_ReadPin>
 8000282:	4603      	mov	r3, r0
 8000284:	461a      	mov	r2, r3
 8000286:	4b05      	ldr	r3, [pc, #20]	; (800029c <updateButtonState+0x70>)
 8000288:	551a      	strb	r2, [r3, r4]
		break;
 800028a:	e000      	b.n	800028e <updateButtonState+0x62>
		break;
 800028c:	bf00      	nop
	}
	}
}
 800028e:	bf00      	nop
 8000290:	370c      	adds	r7, #12
 8000292:	46bd      	mov	sp, r7
 8000294:	bd90      	pop	{r4, r7, pc}
 8000296:	bf00      	nop
 8000298:	40010c00 	.word	0x40010c00
 800029c:	2000003c 	.word	0x2000003c

080002a0 <is_button_press>:

unsigned char is_button_press(uint8_t idx){
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	4603      	mov	r3, r0
 80002a8:	71fb      	strb	r3, [r7, #7]
	if(idx > NO_OF_BUTTON) return 0;
 80002aa:	79fb      	ldrb	r3, [r7, #7]
 80002ac:	2b03      	cmp	r3, #3
 80002ae:	d901      	bls.n	80002b4 <is_button_press+0x14>
 80002b0:	2300      	movs	r3, #0
 80002b2:	e007      	b.n	80002c4 <is_button_press+0x24>
	return (buttonBuffer[idx] == BUTTON_IS_PRESSED);
 80002b4:	79fb      	ldrb	r3, [r7, #7]
 80002b6:	4a06      	ldr	r2, [pc, #24]	; (80002d0 <is_button_press+0x30>)
 80002b8:	5cd3      	ldrb	r3, [r2, r3]
 80002ba:	2b00      	cmp	r3, #0
 80002bc:	bf0c      	ite	eq
 80002be:	2301      	moveq	r3, #1
 80002c0:	2300      	movne	r3, #0
 80002c2:	b2db      	uxtb	r3, r3
}
 80002c4:	4618      	mov	r0, r3
 80002c6:	370c      	adds	r7, #12
 80002c8:	46bd      	mov	sp, r7
 80002ca:	bc80      	pop	{r7}
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop
 80002d0:	20000030 	.word	0x20000030

080002d4 <is_button_press1s>:

unsigned char is_button_press1s(uint8_t idx){
 80002d4:	b480      	push	{r7}
 80002d6:	b083      	sub	sp, #12
 80002d8:	af00      	add	r7, sp, #0
 80002da:	4603      	mov	r3, r0
 80002dc:	71fb      	strb	r3, [r7, #7]
	if(idx > NO_OF_BUTTON) return 0;
 80002de:	79fb      	ldrb	r3, [r7, #7]
 80002e0:	2b03      	cmp	r3, #3
 80002e2:	d901      	bls.n	80002e8 <is_button_press1s+0x14>
 80002e4:	2300      	movs	r3, #0
 80002e6:	e007      	b.n	80002f8 <is_button_press1s+0x24>
	return (flagforButtonPressed1s[idx] == 1);
 80002e8:	79fb      	ldrb	r3, [r7, #7]
 80002ea:	4a06      	ldr	r2, [pc, #24]	; (8000304 <is_button_press1s+0x30>)
 80002ec:	5cd3      	ldrb	r3, [r2, r3]
 80002ee:	2b01      	cmp	r3, #1
 80002f0:	bf0c      	ite	eq
 80002f2:	2301      	moveq	r3, #1
 80002f4:	2300      	movne	r3, #0
 80002f6:	b2db      	uxtb	r3, r3
}
 80002f8:	4618      	mov	r0, r3
 80002fa:	370c      	adds	r7, #12
 80002fc:	46bd      	mov	sp, r7
 80002fe:	bc80      	pop	{r7}
 8000300:	4770      	bx	lr
 8000302:	bf00      	nop
 8000304:	20000040 	.word	0x20000040

08000308 <setLed7Seg>:

void initLed7Seg(void){
	memset(led7seg_buffer, 0x00, sizeof(led7seg_buffer));
}

void setLed7Seg(uint8_t idx, uint8_t value){
 8000308:	b480      	push	{r7}
 800030a:	b083      	sub	sp, #12
 800030c:	af00      	add	r7, sp, #0
 800030e:	4603      	mov	r3, r0
 8000310:	460a      	mov	r2, r1
 8000312:	71fb      	strb	r3, [r7, #7]
 8000314:	4613      	mov	r3, r2
 8000316:	71bb      	strb	r3, [r7, #6]
	led7seg_buffer[idx] = value;
 8000318:	79fb      	ldrb	r3, [r7, #7]
 800031a:	4904      	ldr	r1, [pc, #16]	; (800032c <setLed7Seg+0x24>)
 800031c:	79ba      	ldrb	r2, [r7, #6]
 800031e:	54ca      	strb	r2, [r1, r3]
}
 8000320:	bf00      	nop
 8000322:	370c      	adds	r7, #12
 8000324:	46bd      	mov	sp, r7
 8000326:	bc80      	pop	{r7}
 8000328:	4770      	bx	lr
 800032a:	bf00      	nop
 800032c:	20000048 	.word	0x20000048

08000330 <Led7Seg_Scanning>:

void Led7Seg_Scanning(void){
 8000330:	b580      	push	{r7, lr}
 8000332:	af00      	add	r7, sp, #0
	switch(counter){
 8000334:	4b51      	ldr	r3, [pc, #324]	; (800047c <Led7Seg_Scanning+0x14c>)
 8000336:	781b      	ldrb	r3, [r3, #0]
 8000338:	2b03      	cmp	r3, #3
 800033a:	f200 808f 	bhi.w	800045c <Led7Seg_Scanning+0x12c>
 800033e:	a201      	add	r2, pc, #4	; (adr r2, 8000344 <Led7Seg_Scanning+0x14>)
 8000340:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000344:	08000355 	.word	0x08000355
 8000348:	08000397 	.word	0x08000397
 800034c:	080003d9 	.word	0x080003d9
 8000350:	0800041b 	.word	0x0800041b
	case 0:{
		HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, RESET);
 8000354:	2200      	movs	r2, #0
 8000356:	f44f 7100 	mov.w	r1, #512	; 0x200
 800035a:	4849      	ldr	r0, [pc, #292]	; (8000480 <Led7Seg_Scanning+0x150>)
 800035c:	f001 fb7d 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, SET);
 8000360:	2201      	movs	r2, #1
 8000362:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000366:	4846      	ldr	r0, [pc, #280]	; (8000480 <Led7Seg_Scanning+0x150>)
 8000368:	f001 fb77 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, SET);
 800036c:	2201      	movs	r2, #1
 800036e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000372:	4843      	ldr	r0, [pc, #268]	; (8000480 <Led7Seg_Scanning+0x150>)
 8000374:	f001 fb71 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, SET);
 8000378:	2201      	movs	r2, #1
 800037a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800037e:	4840      	ldr	r0, [pc, #256]	; (8000480 <Led7Seg_Scanning+0x150>)
 8000380:	f001 fb6b 	bl	8001a5a <HAL_GPIO_WritePin>

		setLed7Seg_process(led7seg_buffer[counter]);
 8000384:	4b3d      	ldr	r3, [pc, #244]	; (800047c <Led7Seg_Scanning+0x14c>)
 8000386:	781b      	ldrb	r3, [r3, #0]
 8000388:	461a      	mov	r2, r3
 800038a:	4b3e      	ldr	r3, [pc, #248]	; (8000484 <Led7Seg_Scanning+0x154>)
 800038c:	5c9b      	ldrb	r3, [r3, r2]
 800038e:	4618      	mov	r0, r3
 8000390:	f000 f87a 	bl	8000488 <setLed7Seg_process>
		break;
 8000394:	e063      	b.n	800045e <Led7Seg_Scanning+0x12e>
	}
	case 1:{
		HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, SET);
 8000396:	2201      	movs	r2, #1
 8000398:	f44f 7100 	mov.w	r1, #512	; 0x200
 800039c:	4838      	ldr	r0, [pc, #224]	; (8000480 <Led7Seg_Scanning+0x150>)
 800039e:	f001 fb5c 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, RESET);
 80003a2:	2200      	movs	r2, #0
 80003a4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80003a8:	4835      	ldr	r0, [pc, #212]	; (8000480 <Led7Seg_Scanning+0x150>)
 80003aa:	f001 fb56 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, SET);
 80003ae:	2201      	movs	r2, #1
 80003b0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80003b4:	4832      	ldr	r0, [pc, #200]	; (8000480 <Led7Seg_Scanning+0x150>)
 80003b6:	f001 fb50 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, SET);
 80003ba:	2201      	movs	r2, #1
 80003bc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80003c0:	482f      	ldr	r0, [pc, #188]	; (8000480 <Led7Seg_Scanning+0x150>)
 80003c2:	f001 fb4a 	bl	8001a5a <HAL_GPIO_WritePin>

		setLed7Seg_process(led7seg_buffer[counter]);
 80003c6:	4b2d      	ldr	r3, [pc, #180]	; (800047c <Led7Seg_Scanning+0x14c>)
 80003c8:	781b      	ldrb	r3, [r3, #0]
 80003ca:	461a      	mov	r2, r3
 80003cc:	4b2d      	ldr	r3, [pc, #180]	; (8000484 <Led7Seg_Scanning+0x154>)
 80003ce:	5c9b      	ldrb	r3, [r3, r2]
 80003d0:	4618      	mov	r0, r3
 80003d2:	f000 f859 	bl	8000488 <setLed7Seg_process>
		break;
 80003d6:	e042      	b.n	800045e <Led7Seg_Scanning+0x12e>
	}
	case 2:{
		HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, SET);
 80003d8:	2201      	movs	r2, #1
 80003da:	f44f 7100 	mov.w	r1, #512	; 0x200
 80003de:	4828      	ldr	r0, [pc, #160]	; (8000480 <Led7Seg_Scanning+0x150>)
 80003e0:	f001 fb3b 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, SET);
 80003e4:	2201      	movs	r2, #1
 80003e6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80003ea:	4825      	ldr	r0, [pc, #148]	; (8000480 <Led7Seg_Scanning+0x150>)
 80003ec:	f001 fb35 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, RESET);
 80003f0:	2200      	movs	r2, #0
 80003f2:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80003f6:	4822      	ldr	r0, [pc, #136]	; (8000480 <Led7Seg_Scanning+0x150>)
 80003f8:	f001 fb2f 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, SET);
 80003fc:	2201      	movs	r2, #1
 80003fe:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000402:	481f      	ldr	r0, [pc, #124]	; (8000480 <Led7Seg_Scanning+0x150>)
 8000404:	f001 fb29 	bl	8001a5a <HAL_GPIO_WritePin>

		setLed7Seg_process(led7seg_buffer[counter]);
 8000408:	4b1c      	ldr	r3, [pc, #112]	; (800047c <Led7Seg_Scanning+0x14c>)
 800040a:	781b      	ldrb	r3, [r3, #0]
 800040c:	461a      	mov	r2, r3
 800040e:	4b1d      	ldr	r3, [pc, #116]	; (8000484 <Led7Seg_Scanning+0x154>)
 8000410:	5c9b      	ldrb	r3, [r3, r2]
 8000412:	4618      	mov	r0, r3
 8000414:	f000 f838 	bl	8000488 <setLed7Seg_process>
		break;
 8000418:	e021      	b.n	800045e <Led7Seg_Scanning+0x12e>
	}
	case 3:{
		HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, SET);
 800041a:	2201      	movs	r2, #1
 800041c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000420:	4817      	ldr	r0, [pc, #92]	; (8000480 <Led7Seg_Scanning+0x150>)
 8000422:	f001 fb1a 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, SET);
 8000426:	2201      	movs	r2, #1
 8000428:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800042c:	4814      	ldr	r0, [pc, #80]	; (8000480 <Led7Seg_Scanning+0x150>)
 800042e:	f001 fb14 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, SET);
 8000432:	2201      	movs	r2, #1
 8000434:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000438:	4811      	ldr	r0, [pc, #68]	; (8000480 <Led7Seg_Scanning+0x150>)
 800043a:	f001 fb0e 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, RESET);
 800043e:	2200      	movs	r2, #0
 8000440:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000444:	480e      	ldr	r0, [pc, #56]	; (8000480 <Led7Seg_Scanning+0x150>)
 8000446:	f001 fb08 	bl	8001a5a <HAL_GPIO_WritePin>

		setLed7Seg_process(led7seg_buffer[counter]);
 800044a:	4b0c      	ldr	r3, [pc, #48]	; (800047c <Led7Seg_Scanning+0x14c>)
 800044c:	781b      	ldrb	r3, [r3, #0]
 800044e:	461a      	mov	r2, r3
 8000450:	4b0c      	ldr	r3, [pc, #48]	; (8000484 <Led7Seg_Scanning+0x154>)
 8000452:	5c9b      	ldrb	r3, [r3, r2]
 8000454:	4618      	mov	r0, r3
 8000456:	f000 f817 	bl	8000488 <setLed7Seg_process>
		break;
 800045a:	e000      	b.n	800045e <Led7Seg_Scanning+0x12e>
	}
	default:{
		break;
 800045c:	bf00      	nop
	}
	}
	counter = (counter + 1) % 4;
 800045e:	4b07      	ldr	r3, [pc, #28]	; (800047c <Led7Seg_Scanning+0x14c>)
 8000460:	781b      	ldrb	r3, [r3, #0]
 8000462:	3301      	adds	r3, #1
 8000464:	425a      	negs	r2, r3
 8000466:	f003 0303 	and.w	r3, r3, #3
 800046a:	f002 0203 	and.w	r2, r2, #3
 800046e:	bf58      	it	pl
 8000470:	4253      	negpl	r3, r2
 8000472:	b2da      	uxtb	r2, r3
 8000474:	4b01      	ldr	r3, [pc, #4]	; (800047c <Led7Seg_Scanning+0x14c>)
 8000476:	701a      	strb	r2, [r3, #0]
}
 8000478:	bf00      	nop
 800047a:	bd80      	pop	{r7, pc}
 800047c:	20000047 	.word	0x20000047
 8000480:	40010800 	.word	0x40010800
 8000484:	20000048 	.word	0x20000048

08000488 <setLed7Seg_process>:

void setLed7Seg_process(uint8_t value){
 8000488:	b580      	push	{r7, lr}
 800048a:	b082      	sub	sp, #8
 800048c:	af00      	add	r7, sp, #0
 800048e:	4603      	mov	r3, r0
 8000490:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(LED_7SEG1_GPIO_Port, LED_7SEG1_Pin, !((LED7SEG_CODES[value] >> 0) & 0x01));
 8000492:	79fb      	ldrb	r3, [r7, #7]
 8000494:	4a3b      	ldr	r2, [pc, #236]	; (8000584 <setLed7Seg_process+0xfc>)
 8000496:	5cd3      	ldrb	r3, [r2, r3]
 8000498:	f003 0301 	and.w	r3, r3, #1
 800049c:	2b00      	cmp	r3, #0
 800049e:	bf0c      	ite	eq
 80004a0:	2301      	moveq	r3, #1
 80004a2:	2300      	movne	r3, #0
 80004a4:	b2db      	uxtb	r3, r3
 80004a6:	461a      	mov	r2, r3
 80004a8:	2101      	movs	r1, #1
 80004aa:	4837      	ldr	r0, [pc, #220]	; (8000588 <setLed7Seg_process+0x100>)
 80004ac:	f001 fad5 	bl	8001a5a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_7SEG2_GPIO_Port, LED_7SEG2_Pin, !((LED7SEG_CODES[value] >> 1) & 0x01));
 80004b0:	79fb      	ldrb	r3, [r7, #7]
 80004b2:	4a34      	ldr	r2, [pc, #208]	; (8000584 <setLed7Seg_process+0xfc>)
 80004b4:	5cd3      	ldrb	r3, [r2, r3]
 80004b6:	085b      	lsrs	r3, r3, #1
 80004b8:	b2db      	uxtb	r3, r3
 80004ba:	f003 0301 	and.w	r3, r3, #1
 80004be:	2b00      	cmp	r3, #0
 80004c0:	bf0c      	ite	eq
 80004c2:	2301      	moveq	r3, #1
 80004c4:	2300      	movne	r3, #0
 80004c6:	b2db      	uxtb	r3, r3
 80004c8:	461a      	mov	r2, r3
 80004ca:	2102      	movs	r1, #2
 80004cc:	482e      	ldr	r0, [pc, #184]	; (8000588 <setLed7Seg_process+0x100>)
 80004ce:	f001 fac4 	bl	8001a5a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_7SEG3_GPIO_Port, LED_7SEG3_Pin, !((LED7SEG_CODES[value] >> 2) & 0x01));
 80004d2:	79fb      	ldrb	r3, [r7, #7]
 80004d4:	4a2b      	ldr	r2, [pc, #172]	; (8000584 <setLed7Seg_process+0xfc>)
 80004d6:	5cd3      	ldrb	r3, [r2, r3]
 80004d8:	089b      	lsrs	r3, r3, #2
 80004da:	b2db      	uxtb	r3, r3
 80004dc:	f003 0301 	and.w	r3, r3, #1
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	bf0c      	ite	eq
 80004e4:	2301      	moveq	r3, #1
 80004e6:	2300      	movne	r3, #0
 80004e8:	b2db      	uxtb	r3, r3
 80004ea:	461a      	mov	r2, r3
 80004ec:	2104      	movs	r1, #4
 80004ee:	4826      	ldr	r0, [pc, #152]	; (8000588 <setLed7Seg_process+0x100>)
 80004f0:	f001 fab3 	bl	8001a5a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_7SEG4_GPIO_Port, LED_7SEG4_Pin, !((LED7SEG_CODES[value] >> 3) & 0x01));
 80004f4:	79fb      	ldrb	r3, [r7, #7]
 80004f6:	4a23      	ldr	r2, [pc, #140]	; (8000584 <setLed7Seg_process+0xfc>)
 80004f8:	5cd3      	ldrb	r3, [r2, r3]
 80004fa:	08db      	lsrs	r3, r3, #3
 80004fc:	b2db      	uxtb	r3, r3
 80004fe:	f003 0301 	and.w	r3, r3, #1
 8000502:	2b00      	cmp	r3, #0
 8000504:	bf0c      	ite	eq
 8000506:	2301      	moveq	r3, #1
 8000508:	2300      	movne	r3, #0
 800050a:	b2db      	uxtb	r3, r3
 800050c:	461a      	mov	r2, r3
 800050e:	2108      	movs	r1, #8
 8000510:	481d      	ldr	r0, [pc, #116]	; (8000588 <setLed7Seg_process+0x100>)
 8000512:	f001 faa2 	bl	8001a5a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_7SEG5_GPIO_Port, LED_7SEG5_Pin, !((LED7SEG_CODES[value] >> 4) & 0x01));
 8000516:	79fb      	ldrb	r3, [r7, #7]
 8000518:	4a1a      	ldr	r2, [pc, #104]	; (8000584 <setLed7Seg_process+0xfc>)
 800051a:	5cd3      	ldrb	r3, [r2, r3]
 800051c:	091b      	lsrs	r3, r3, #4
 800051e:	b2db      	uxtb	r3, r3
 8000520:	f003 0301 	and.w	r3, r3, #1
 8000524:	2b00      	cmp	r3, #0
 8000526:	bf0c      	ite	eq
 8000528:	2301      	moveq	r3, #1
 800052a:	2300      	movne	r3, #0
 800052c:	b2db      	uxtb	r3, r3
 800052e:	461a      	mov	r2, r3
 8000530:	2110      	movs	r1, #16
 8000532:	4815      	ldr	r0, [pc, #84]	; (8000588 <setLed7Seg_process+0x100>)
 8000534:	f001 fa91 	bl	8001a5a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_7SEG6_GPIO_Port, LED_7SEG6_Pin, !((LED7SEG_CODES[value] >> 5) & 0x01));
 8000538:	79fb      	ldrb	r3, [r7, #7]
 800053a:	4a12      	ldr	r2, [pc, #72]	; (8000584 <setLed7Seg_process+0xfc>)
 800053c:	5cd3      	ldrb	r3, [r2, r3]
 800053e:	095b      	lsrs	r3, r3, #5
 8000540:	b2db      	uxtb	r3, r3
 8000542:	f003 0301 	and.w	r3, r3, #1
 8000546:	2b00      	cmp	r3, #0
 8000548:	bf0c      	ite	eq
 800054a:	2301      	moveq	r3, #1
 800054c:	2300      	movne	r3, #0
 800054e:	b2db      	uxtb	r3, r3
 8000550:	461a      	mov	r2, r3
 8000552:	2120      	movs	r1, #32
 8000554:	480c      	ldr	r0, [pc, #48]	; (8000588 <setLed7Seg_process+0x100>)
 8000556:	f001 fa80 	bl	8001a5a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_7SEG7_GPIO_Port, LED_7SEG7_Pin, !((LED7SEG_CODES[value] >> 6) & 0x01));
 800055a:	79fb      	ldrb	r3, [r7, #7]
 800055c:	4a09      	ldr	r2, [pc, #36]	; (8000584 <setLed7Seg_process+0xfc>)
 800055e:	5cd3      	ldrb	r3, [r2, r3]
 8000560:	099b      	lsrs	r3, r3, #6
 8000562:	b2db      	uxtb	r3, r3
 8000564:	f003 0301 	and.w	r3, r3, #1
 8000568:	2b00      	cmp	r3, #0
 800056a:	bf0c      	ite	eq
 800056c:	2301      	moveq	r3, #1
 800056e:	2300      	movne	r3, #0
 8000570:	b2db      	uxtb	r3, r3
 8000572:	461a      	mov	r2, r3
 8000574:	2140      	movs	r1, #64	; 0x40
 8000576:	4804      	ldr	r0, [pc, #16]	; (8000588 <setLed7Seg_process+0x100>)
 8000578:	f001 fa6f 	bl	8001a5a <HAL_GPIO_WritePin>
}
 800057c:	bf00      	nop
 800057e:	3708      	adds	r7, #8
 8000580:	46bd      	mov	sp, r7
 8000582:	bd80      	pop	{r7, pc}
 8000584:	08002aa0 	.word	0x08002aa0
 8000588:	40010c00 	.word	0x40010c00

0800058c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800058c:	b580      	push	{r7, lr}
 800058e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000590:	f000 ff3c 	bl	800140c <HAL_Init>


  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000594:	f000 f822 	bl	80005dc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000598:	f000 f8a8 	bl	80006ec <MX_GPIO_Init>
  MX_TIM2_Init();
 800059c:	f000 f85a 	bl	8000654 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 80005a0:	480c      	ldr	r0, [pc, #48]	; (80005d4 <main+0x48>)
 80005a2:	f001 feb9 	bl	8002318 <HAL_TIM_Base_Start_IT>
  init_traffic_process();
 80005a6:	f000 fb2f 	bl	8000c08 <init_traffic_process>
  setTimer3(100);
 80005aa:	2064      	movs	r0, #100	; 0x64
 80005ac:	f000 fa20 	bl	80009f0 <setTimer3>
  setTimer1(50);
 80005b0:	2032      	movs	r0, #50	; 0x32
 80005b2:	f000 f9e9 	bl	8000988 <setTimer1>
  setTimer2(10);
 80005b6:	200a      	movs	r0, #10
 80005b8:	f000 fa00 	bl	80009bc <setTimer2>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  if(timer2_flag){
 80005bc:	4b06      	ldr	r3, [pc, #24]	; (80005d8 <main+0x4c>)
 80005be:	781b      	ldrb	r3, [r3, #0]
 80005c0:	2b00      	cmp	r3, #0
 80005c2:	d0fb      	beq.n	80005bc <main+0x30>
		  traffic_process();
 80005c4:	f000 fd96 	bl	80010f4 <traffic_process>
		  Led7Seg_Scanning();
 80005c8:	f7ff feb2 	bl	8000330 <Led7Seg_Scanning>
		  setTimer2(10);
 80005cc:	200a      	movs	r0, #10
 80005ce:	f000 f9f5 	bl	80009bc <setTimer2>
	  if(timer2_flag){
 80005d2:	e7f3      	b.n	80005bc <main+0x30>
 80005d4:	2000004c 	.word	0x2000004c
 80005d8:	20000095 	.word	0x20000095

080005dc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80005dc:	b580      	push	{r7, lr}
 80005de:	b090      	sub	sp, #64	; 0x40
 80005e0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005e2:	f107 0318 	add.w	r3, r7, #24
 80005e6:	2228      	movs	r2, #40	; 0x28
 80005e8:	2100      	movs	r1, #0
 80005ea:	4618      	mov	r0, r3
 80005ec:	f002 fa20 	bl	8002a30 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80005f0:	1d3b      	adds	r3, r7, #4
 80005f2:	2200      	movs	r2, #0
 80005f4:	601a      	str	r2, [r3, #0]
 80005f6:	605a      	str	r2, [r3, #4]
 80005f8:	609a      	str	r2, [r3, #8]
 80005fa:	60da      	str	r2, [r3, #12]
 80005fc:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80005fe:	2302      	movs	r3, #2
 8000600:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000602:	2301      	movs	r3, #1
 8000604:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000606:	2310      	movs	r3, #16
 8000608:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800060a:	2300      	movs	r3, #0
 800060c:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800060e:	f107 0318 	add.w	r3, r7, #24
 8000612:	4618      	mov	r0, r3
 8000614:	f001 fa52 	bl	8001abc <HAL_RCC_OscConfig>
 8000618:	4603      	mov	r3, r0
 800061a:	2b00      	cmp	r3, #0
 800061c:	d001      	beq.n	8000622 <SystemClock_Config+0x46>
  {
    Error_Handler();
 800061e:	f000 f8c7 	bl	80007b0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000622:	230f      	movs	r3, #15
 8000624:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000626:	2300      	movs	r3, #0
 8000628:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800062a:	2300      	movs	r3, #0
 800062c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800062e:	2300      	movs	r3, #0
 8000630:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000632:	2300      	movs	r3, #0
 8000634:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000636:	1d3b      	adds	r3, r7, #4
 8000638:	2100      	movs	r1, #0
 800063a:	4618      	mov	r0, r3
 800063c:	f001 fcc0 	bl	8001fc0 <HAL_RCC_ClockConfig>
 8000640:	4603      	mov	r3, r0
 8000642:	2b00      	cmp	r3, #0
 8000644:	d001      	beq.n	800064a <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000646:	f000 f8b3 	bl	80007b0 <Error_Handler>
  }
}
 800064a:	bf00      	nop
 800064c:	3740      	adds	r7, #64	; 0x40
 800064e:	46bd      	mov	sp, r7
 8000650:	bd80      	pop	{r7, pc}
	...

08000654 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000654:	b580      	push	{r7, lr}
 8000656:	b086      	sub	sp, #24
 8000658:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800065a:	f107 0308 	add.w	r3, r7, #8
 800065e:	2200      	movs	r2, #0
 8000660:	601a      	str	r2, [r3, #0]
 8000662:	605a      	str	r2, [r3, #4]
 8000664:	609a      	str	r2, [r3, #8]
 8000666:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000668:	463b      	mov	r3, r7
 800066a:	2200      	movs	r2, #0
 800066c:	601a      	str	r2, [r3, #0]
 800066e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000670:	4b1d      	ldr	r3, [pc, #116]	; (80006e8 <MX_TIM2_Init+0x94>)
 8000672:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000676:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8000678:	4b1b      	ldr	r3, [pc, #108]	; (80006e8 <MX_TIM2_Init+0x94>)
 800067a:	f641 723f 	movw	r2, #7999	; 0x1f3f
 800067e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000680:	4b19      	ldr	r3, [pc, #100]	; (80006e8 <MX_TIM2_Init+0x94>)
 8000682:	2200      	movs	r2, #0
 8000684:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000686:	4b18      	ldr	r3, [pc, #96]	; (80006e8 <MX_TIM2_Init+0x94>)
 8000688:	2209      	movs	r2, #9
 800068a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800068c:	4b16      	ldr	r3, [pc, #88]	; (80006e8 <MX_TIM2_Init+0x94>)
 800068e:	2200      	movs	r2, #0
 8000690:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000692:	4b15      	ldr	r3, [pc, #84]	; (80006e8 <MX_TIM2_Init+0x94>)
 8000694:	2200      	movs	r2, #0
 8000696:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000698:	4813      	ldr	r0, [pc, #76]	; (80006e8 <MX_TIM2_Init+0x94>)
 800069a:	f001 fded 	bl	8002278 <HAL_TIM_Base_Init>
 800069e:	4603      	mov	r3, r0
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d001      	beq.n	80006a8 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80006a4:	f000 f884 	bl	80007b0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80006a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80006ac:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80006ae:	f107 0308 	add.w	r3, r7, #8
 80006b2:	4619      	mov	r1, r3
 80006b4:	480c      	ldr	r0, [pc, #48]	; (80006e8 <MX_TIM2_Init+0x94>)
 80006b6:	f001 ff6b 	bl	8002590 <HAL_TIM_ConfigClockSource>
 80006ba:	4603      	mov	r3, r0
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d001      	beq.n	80006c4 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80006c0:	f000 f876 	bl	80007b0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80006c4:	2300      	movs	r3, #0
 80006c6:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80006c8:	2300      	movs	r3, #0
 80006ca:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80006cc:	463b      	mov	r3, r7
 80006ce:	4619      	mov	r1, r3
 80006d0:	4805      	ldr	r0, [pc, #20]	; (80006e8 <MX_TIM2_Init+0x94>)
 80006d2:	f002 f943 	bl	800295c <HAL_TIMEx_MasterConfigSynchronization>
 80006d6:	4603      	mov	r3, r0
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d001      	beq.n	80006e0 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80006dc:	f000 f868 	bl	80007b0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80006e0:	bf00      	nop
 80006e2:	3718      	adds	r7, #24
 80006e4:	46bd      	mov	sp, r7
 80006e6:	bd80      	pop	{r7, pc}
 80006e8:	2000004c 	.word	0x2000004c

080006ec <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80006ec:	b580      	push	{r7, lr}
 80006ee:	b086      	sub	sp, #24
 80006f0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80006f2:	f107 0308 	add.w	r3, r7, #8
 80006f6:	2200      	movs	r2, #0
 80006f8:	601a      	str	r2, [r3, #0]
 80006fa:	605a      	str	r2, [r3, #4]
 80006fc:	609a      	str	r2, [r3, #8]
 80006fe:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000700:	4b28      	ldr	r3, [pc, #160]	; (80007a4 <MX_GPIO_Init+0xb8>)
 8000702:	699b      	ldr	r3, [r3, #24]
 8000704:	4a27      	ldr	r2, [pc, #156]	; (80007a4 <MX_GPIO_Init+0xb8>)
 8000706:	f043 0304 	orr.w	r3, r3, #4
 800070a:	6193      	str	r3, [r2, #24]
 800070c:	4b25      	ldr	r3, [pc, #148]	; (80007a4 <MX_GPIO_Init+0xb8>)
 800070e:	699b      	ldr	r3, [r3, #24]
 8000710:	f003 0304 	and.w	r3, r3, #4
 8000714:	607b      	str	r3, [r7, #4]
 8000716:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000718:	4b22      	ldr	r3, [pc, #136]	; (80007a4 <MX_GPIO_Init+0xb8>)
 800071a:	699b      	ldr	r3, [r3, #24]
 800071c:	4a21      	ldr	r2, [pc, #132]	; (80007a4 <MX_GPIO_Init+0xb8>)
 800071e:	f043 0308 	orr.w	r3, r3, #8
 8000722:	6193      	str	r3, [r2, #24]
 8000724:	4b1f      	ldr	r3, [pc, #124]	; (80007a4 <MX_GPIO_Init+0xb8>)
 8000726:	699b      	ldr	r3, [r3, #24]
 8000728:	f003 0308 	and.w	r3, r3, #8
 800072c:	603b      	str	r3, [r7, #0]
 800072e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED_GREEN1_Pin|LED_YELLOW1_Pin|LED_RED1_Pin|LED_GREEN2_Pin
 8000730:	2200      	movs	r2, #0
 8000732:	f641 617e 	movw	r1, #7806	; 0x1e7e
 8000736:	481c      	ldr	r0, [pc, #112]	; (80007a8 <MX_GPIO_Init+0xbc>)
 8000738:	f001 f98f 	bl	8001a5a <HAL_GPIO_WritePin>
                          |LED_YELLOW2_Pin|LED_RED2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_7SEG1_Pin|LED_7SEG2_Pin|LED_7SEG3_Pin|LED_7SEG4_Pin
 800073c:	2200      	movs	r2, #0
 800073e:	217f      	movs	r1, #127	; 0x7f
 8000740:	481a      	ldr	r0, [pc, #104]	; (80007ac <MX_GPIO_Init+0xc0>)
 8000742:	f001 f98a 	bl	8001a5a <HAL_GPIO_WritePin>
                          |LED_7SEG5_Pin|LED_7SEG6_Pin|LED_7SEG7_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : LED_GREEN1_Pin LED_YELLOW1_Pin LED_RED1_Pin LED_GREEN2_Pin
                           LED_YELLOW2_Pin LED_RED2_Pin EN0_Pin EN1_Pin
                           EN2_Pin EN3_Pin */
  GPIO_InitStruct.Pin = LED_GREEN1_Pin|LED_YELLOW1_Pin|LED_RED1_Pin|LED_GREEN2_Pin
 8000746:	f641 637e 	movw	r3, #7806	; 0x1e7e
 800074a:	60bb      	str	r3, [r7, #8]
                          |LED_YELLOW2_Pin|LED_RED2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800074c:	2301      	movs	r3, #1
 800074e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000750:	2300      	movs	r3, #0
 8000752:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000754:	2302      	movs	r3, #2
 8000756:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000758:	f107 0308 	add.w	r3, r7, #8
 800075c:	4619      	mov	r1, r3
 800075e:	4812      	ldr	r0, [pc, #72]	; (80007a8 <MX_GPIO_Init+0xbc>)
 8000760:	f000 ffe8 	bl	8001734 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_7SEG1_Pin LED_7SEG2_Pin LED_7SEG3_Pin LED_7SEG4_Pin
                           LED_7SEG5_Pin LED_7SEG6_Pin LED_7SEG7_Pin */
  GPIO_InitStruct.Pin = LED_7SEG1_Pin|LED_7SEG2_Pin|LED_7SEG3_Pin|LED_7SEG4_Pin
 8000764:	237f      	movs	r3, #127	; 0x7f
 8000766:	60bb      	str	r3, [r7, #8]
                          |LED_7SEG5_Pin|LED_7SEG6_Pin|LED_7SEG7_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000768:	2301      	movs	r3, #1
 800076a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800076c:	2300      	movs	r3, #0
 800076e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000770:	2302      	movs	r3, #2
 8000772:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000774:	f107 0308 	add.w	r3, r7, #8
 8000778:	4619      	mov	r1, r3
 800077a:	480c      	ldr	r0, [pc, #48]	; (80007ac <MX_GPIO_Init+0xc0>)
 800077c:	f000 ffda 	bl	8001734 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON2_Pin BUTTON0_Pin BUTTON1_Pin */
  GPIO_InitStruct.Pin = BUTTON2_Pin|BUTTON0_Pin|BUTTON1_Pin;
 8000780:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 8000784:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000786:	2300      	movs	r3, #0
 8000788:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800078a:	2300      	movs	r3, #0
 800078c:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800078e:	f107 0308 	add.w	r3, r7, #8
 8000792:	4619      	mov	r1, r3
 8000794:	4805      	ldr	r0, [pc, #20]	; (80007ac <MX_GPIO_Init+0xc0>)
 8000796:	f000 ffcd 	bl	8001734 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800079a:	bf00      	nop
 800079c:	3718      	adds	r7, #24
 800079e:	46bd      	mov	sp, r7
 80007a0:	bd80      	pop	{r7, pc}
 80007a2:	bf00      	nop
 80007a4:	40021000 	.word	0x40021000
 80007a8:	40010800 	.word	0x40010800
 80007ac:	40010c00 	.word	0x40010c00

080007b0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80007b0:	b480      	push	{r7}
 80007b2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80007b4:	b672      	cpsid	i
}
 80007b6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80007b8:	e7fe      	b.n	80007b8 <Error_Handler+0x8>
	...

080007bc <turnOnAllLed>:

#include "main.h"
#include "software_timer.h"
#include "led7seg_process.h"

extern void turnOnAllLed(void){
 80007bc:	b580      	push	{r7, lr}
 80007be:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, LED_RED1_Pin | LED_RED2_Pin | LED_GREEN1_Pin | LED_GREEN2_Pin |
 80007c0:	2201      	movs	r2, #1
 80007c2:	217e      	movs	r1, #126	; 0x7e
 80007c4:	4802      	ldr	r0, [pc, #8]	; (80007d0 <turnOnAllLed+0x14>)
 80007c6:	f001 f948 	bl	8001a5a <HAL_GPIO_WritePin>
			LED_YELLOW1_Pin | LED_YELLOW2_Pin, GPIO_PIN_SET);

}
 80007ca:	bf00      	nop
 80007cc:	bd80      	pop	{r7, pc}
 80007ce:	bf00      	nop
 80007d0:	40010800 	.word	0x40010800

080007d4 <turnOffAllLed>:
extern void turnOffAllLed(void){
 80007d4:	b580      	push	{r7, lr}
 80007d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, LED_RED1_Pin | LED_RED2_Pin | LED_GREEN1_Pin | LED_GREEN2_Pin |
 80007d8:	2200      	movs	r2, #0
 80007da:	217e      	movs	r1, #126	; 0x7e
 80007dc:	4802      	ldr	r0, [pc, #8]	; (80007e8 <turnOffAllLed+0x14>)
 80007de:	f001 f93c 	bl	8001a5a <HAL_GPIO_WritePin>
					LED_YELLOW1_Pin | LED_YELLOW2_Pin, GPIO_PIN_RESET);
}
 80007e2:	bf00      	nop
 80007e4:	bd80      	pop	{r7, pc}
 80007e6:	bf00      	nop
 80007e8:	40010800 	.word	0x40010800

080007ec <test7seg>:

void test7seg(void){
 80007ec:	b580      	push	{r7, lr}
 80007ee:	af00      	add	r7, sp, #0
	setLed7Seg(0, 0);
 80007f0:	2100      	movs	r1, #0
 80007f2:	2000      	movs	r0, #0
 80007f4:	f7ff fd88 	bl	8000308 <setLed7Seg>
	setLed7Seg(1, 0);
 80007f8:	2100      	movs	r1, #0
 80007fa:	2001      	movs	r0, #1
 80007fc:	f7ff fd84 	bl	8000308 <setLed7Seg>
	setLed7Seg(2, 0);
 8000800:	2100      	movs	r1, #0
 8000802:	2002      	movs	r0, #2
 8000804:	f7ff fd80 	bl	8000308 <setLed7Seg>
	setLed7Seg(3, 0);
 8000808:	2100      	movs	r1, #0
 800080a:	2003      	movs	r0, #3
 800080c:	f7ff fd7c 	bl	8000308 <setLed7Seg>
}
 8000810:	bf00      	nop
 8000812:	bd80      	pop	{r7, pc}

08000814 <testAllLed>:

void testAllLed(void){
 8000814:	b580      	push	{r7, lr}
 8000816:	af00      	add	r7, sp, #0
	turnOnAllLed();
 8000818:	f7ff ffd0 	bl	80007bc <turnOnAllLed>
	HAL_Delay(1000);
 800081c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000820:	f000 fe56 	bl	80014d0 <HAL_Delay>
	turnOffAllLed();
 8000824:	f7ff ffd6 	bl	80007d4 <turnOffAllLed>
}
 8000828:	bf00      	nop
 800082a:	bd80      	pop	{r7, pc}

0800082c <turnOnRed>:



void turnOnRed(uint8_t index){
 800082c:	b580      	push	{r7, lr}
 800082e:	b082      	sub	sp, #8
 8000830:	af00      	add	r7, sp, #0
 8000832:	4603      	mov	r3, r0
 8000834:	71fb      	strb	r3, [r7, #7]
	if(index == 1){
 8000836:	79fb      	ldrb	r3, [r7, #7]
 8000838:	2b01      	cmp	r3, #1
 800083a:	d10a      	bne.n	8000852 <turnOnRed+0x26>
		HAL_GPIO_WritePin(GPIOA, LED_RED1_Pin, GPIO_PIN_SET);
 800083c:	2201      	movs	r2, #1
 800083e:	2108      	movs	r1, #8
 8000840:	480c      	ldr	r0, [pc, #48]	; (8000874 <turnOnRed+0x48>)
 8000842:	f001 f90a 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, LED_GREEN1_Pin | LED_YELLOW1_Pin, GPIO_PIN_RESET);
 8000846:	2200      	movs	r2, #0
 8000848:	2106      	movs	r1, #6
 800084a:	480a      	ldr	r0, [pc, #40]	; (8000874 <turnOnRed+0x48>)
 800084c:	f001 f905 	bl	8001a5a <HAL_GPIO_WritePin>
	else if(index == 2){
		HAL_GPIO_WritePin(GPIOA, LED_RED2_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOA, LED_GREEN2_Pin | LED_YELLOW2_Pin, GPIO_PIN_RESET);
	}

}
 8000850:	e00c      	b.n	800086c <turnOnRed+0x40>
	else if(index == 2){
 8000852:	79fb      	ldrb	r3, [r7, #7]
 8000854:	2b02      	cmp	r3, #2
 8000856:	d109      	bne.n	800086c <turnOnRed+0x40>
		HAL_GPIO_WritePin(GPIOA, LED_RED2_Pin, GPIO_PIN_SET);
 8000858:	2201      	movs	r2, #1
 800085a:	2140      	movs	r1, #64	; 0x40
 800085c:	4805      	ldr	r0, [pc, #20]	; (8000874 <turnOnRed+0x48>)
 800085e:	f001 f8fc 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, LED_GREEN2_Pin | LED_YELLOW2_Pin, GPIO_PIN_RESET);
 8000862:	2200      	movs	r2, #0
 8000864:	2130      	movs	r1, #48	; 0x30
 8000866:	4803      	ldr	r0, [pc, #12]	; (8000874 <turnOnRed+0x48>)
 8000868:	f001 f8f7 	bl	8001a5a <HAL_GPIO_WritePin>
}
 800086c:	bf00      	nop
 800086e:	3708      	adds	r7, #8
 8000870:	46bd      	mov	sp, r7
 8000872:	bd80      	pop	{r7, pc}
 8000874:	40010800 	.word	0x40010800

08000878 <turnOnYellow>:

void turnOnYellow(uint8_t index){
 8000878:	b580      	push	{r7, lr}
 800087a:	b082      	sub	sp, #8
 800087c:	af00      	add	r7, sp, #0
 800087e:	4603      	mov	r3, r0
 8000880:	71fb      	strb	r3, [r7, #7]
	if(index == 1){
 8000882:	79fb      	ldrb	r3, [r7, #7]
 8000884:	2b01      	cmp	r3, #1
 8000886:	d10a      	bne.n	800089e <turnOnYellow+0x26>
		HAL_GPIO_WritePin(GPIOA, LED_YELLOW1_Pin, GPIO_PIN_SET);
 8000888:	2201      	movs	r2, #1
 800088a:	2104      	movs	r1, #4
 800088c:	480c      	ldr	r0, [pc, #48]	; (80008c0 <turnOnYellow+0x48>)
 800088e:	f001 f8e4 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, LED_GREEN1_Pin | LED_RED1_Pin, GPIO_PIN_RESET);
 8000892:	2200      	movs	r2, #0
 8000894:	210a      	movs	r1, #10
 8000896:	480a      	ldr	r0, [pc, #40]	; (80008c0 <turnOnYellow+0x48>)
 8000898:	f001 f8df 	bl	8001a5a <HAL_GPIO_WritePin>
	else if(index == 2){
		HAL_GPIO_WritePin(GPIOA, LED_YELLOW2_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOA, LED_GREEN2_Pin | LED_RED2_Pin, GPIO_PIN_RESET);
	}

}
 800089c:	e00c      	b.n	80008b8 <turnOnYellow+0x40>
	else if(index == 2){
 800089e:	79fb      	ldrb	r3, [r7, #7]
 80008a0:	2b02      	cmp	r3, #2
 80008a2:	d109      	bne.n	80008b8 <turnOnYellow+0x40>
		HAL_GPIO_WritePin(GPIOA, LED_YELLOW2_Pin, GPIO_PIN_SET);
 80008a4:	2201      	movs	r2, #1
 80008a6:	2120      	movs	r1, #32
 80008a8:	4805      	ldr	r0, [pc, #20]	; (80008c0 <turnOnYellow+0x48>)
 80008aa:	f001 f8d6 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, LED_GREEN2_Pin | LED_RED2_Pin, GPIO_PIN_RESET);
 80008ae:	2200      	movs	r2, #0
 80008b0:	2150      	movs	r1, #80	; 0x50
 80008b2:	4803      	ldr	r0, [pc, #12]	; (80008c0 <turnOnYellow+0x48>)
 80008b4:	f001 f8d1 	bl	8001a5a <HAL_GPIO_WritePin>
}
 80008b8:	bf00      	nop
 80008ba:	3708      	adds	r7, #8
 80008bc:	46bd      	mov	sp, r7
 80008be:	bd80      	pop	{r7, pc}
 80008c0:	40010800 	.word	0x40010800

080008c4 <turnOnGreen>:

void turnOnGreen(uint8_t index){
 80008c4:	b580      	push	{r7, lr}
 80008c6:	b082      	sub	sp, #8
 80008c8:	af00      	add	r7, sp, #0
 80008ca:	4603      	mov	r3, r0
 80008cc:	71fb      	strb	r3, [r7, #7]
	if(index == 1){
 80008ce:	79fb      	ldrb	r3, [r7, #7]
 80008d0:	2b01      	cmp	r3, #1
 80008d2:	d10a      	bne.n	80008ea <turnOnGreen+0x26>
		HAL_GPIO_WritePin(GPIOA, LED_GREEN1_Pin, GPIO_PIN_SET);
 80008d4:	2201      	movs	r2, #1
 80008d6:	2102      	movs	r1, #2
 80008d8:	480c      	ldr	r0, [pc, #48]	; (800090c <turnOnGreen+0x48>)
 80008da:	f001 f8be 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, LED_YELLOW1_Pin | LED_RED1_Pin, GPIO_PIN_RESET);
 80008de:	2200      	movs	r2, #0
 80008e0:	210c      	movs	r1, #12
 80008e2:	480a      	ldr	r0, [pc, #40]	; (800090c <turnOnGreen+0x48>)
 80008e4:	f001 f8b9 	bl	8001a5a <HAL_GPIO_WritePin>
	}
	else if(index == 2){
		HAL_GPIO_WritePin(GPIOA, LED_GREEN2_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOA, LED_YELLOW2_Pin | LED_RED2_Pin, GPIO_PIN_RESET);
	}
}
 80008e8:	e00c      	b.n	8000904 <turnOnGreen+0x40>
	else if(index == 2){
 80008ea:	79fb      	ldrb	r3, [r7, #7]
 80008ec:	2b02      	cmp	r3, #2
 80008ee:	d109      	bne.n	8000904 <turnOnGreen+0x40>
		HAL_GPIO_WritePin(GPIOA, LED_GREEN2_Pin, GPIO_PIN_SET);
 80008f0:	2201      	movs	r2, #1
 80008f2:	2110      	movs	r1, #16
 80008f4:	4805      	ldr	r0, [pc, #20]	; (800090c <turnOnGreen+0x48>)
 80008f6:	f001 f8b0 	bl	8001a5a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, LED_YELLOW2_Pin | LED_RED2_Pin, GPIO_PIN_RESET);
 80008fa:	2200      	movs	r2, #0
 80008fc:	2160      	movs	r1, #96	; 0x60
 80008fe:	4803      	ldr	r0, [pc, #12]	; (800090c <turnOnGreen+0x48>)
 8000900:	f001 f8ab 	bl	8001a5a <HAL_GPIO_WritePin>
}
 8000904:	bf00      	nop
 8000906:	3708      	adds	r7, #8
 8000908:	46bd      	mov	sp, r7
 800090a:	bd80      	pop	{r7, pc}
 800090c:	40010800 	.word	0x40010800

08000910 <blinkRed>:


void blinkRed(void){
 8000910:	b580      	push	{r7, lr}
 8000912:	af00      	add	r7, sp, #0
	if(timer1_flag){
 8000914:	4b06      	ldr	r3, [pc, #24]	; (8000930 <blinkRed+0x20>)
 8000916:	781b      	ldrb	r3, [r3, #0]
 8000918:	2b00      	cmp	r3, #0
 800091a:	d006      	beq.n	800092a <blinkRed+0x1a>
		HAL_GPIO_TogglePin(GPIOA, LED_RED1_Pin | LED_RED2_Pin);
 800091c:	2148      	movs	r1, #72	; 0x48
 800091e:	4805      	ldr	r0, [pc, #20]	; (8000934 <blinkRed+0x24>)
 8000920:	f001 f8b3 	bl	8001a8a <HAL_GPIO_TogglePin>
		setTimer1(50);
 8000924:	2032      	movs	r0, #50	; 0x32
 8000926:	f000 f82f 	bl	8000988 <setTimer1>
	}
}
 800092a:	bf00      	nop
 800092c:	bd80      	pop	{r7, pc}
 800092e:	bf00      	nop
 8000930:	20000094 	.word	0x20000094
 8000934:	40010800 	.word	0x40010800

08000938 <blinkYellow>:

void blinkYellow(void){
 8000938:	b580      	push	{r7, lr}
 800093a:	af00      	add	r7, sp, #0
	if(timer1_flag){
 800093c:	4b06      	ldr	r3, [pc, #24]	; (8000958 <blinkYellow+0x20>)
 800093e:	781b      	ldrb	r3, [r3, #0]
 8000940:	2b00      	cmp	r3, #0
 8000942:	d006      	beq.n	8000952 <blinkYellow+0x1a>
		HAL_GPIO_TogglePin(GPIOA, LED_YELLOW1_Pin | LED_YELLOW2_Pin);
 8000944:	2124      	movs	r1, #36	; 0x24
 8000946:	4805      	ldr	r0, [pc, #20]	; (800095c <blinkYellow+0x24>)
 8000948:	f001 f89f 	bl	8001a8a <HAL_GPIO_TogglePin>
		setTimer1(50);
 800094c:	2032      	movs	r0, #50	; 0x32
 800094e:	f000 f81b 	bl	8000988 <setTimer1>
	}
}
 8000952:	bf00      	nop
 8000954:	bd80      	pop	{r7, pc}
 8000956:	bf00      	nop
 8000958:	20000094 	.word	0x20000094
 800095c:	40010800 	.word	0x40010800

08000960 <blinkGreen>:

void blinkGreen(void){
 8000960:	b580      	push	{r7, lr}
 8000962:	af00      	add	r7, sp, #0
	if(timer1_flag){
 8000964:	4b06      	ldr	r3, [pc, #24]	; (8000980 <blinkGreen+0x20>)
 8000966:	781b      	ldrb	r3, [r3, #0]
 8000968:	2b00      	cmp	r3, #0
 800096a:	d006      	beq.n	800097a <blinkGreen+0x1a>
		HAL_GPIO_TogglePin(GPIOA, LED_GREEN2_Pin | LED_GREEN1_Pin);
 800096c:	2112      	movs	r1, #18
 800096e:	4805      	ldr	r0, [pc, #20]	; (8000984 <blinkGreen+0x24>)
 8000970:	f001 f88b 	bl	8001a8a <HAL_GPIO_TogglePin>
		setTimer1(50);
 8000974:	2032      	movs	r0, #50	; 0x32
 8000976:	f000 f807 	bl	8000988 <setTimer1>
	}
}
 800097a:	bf00      	nop
 800097c:	bd80      	pop	{r7, pc}
 800097e:	bf00      	nop
 8000980:	20000094 	.word	0x20000094
 8000984:	40010800 	.word	0x40010800

08000988 <setTimer1>:

int timer1_mul = 0;
int timer2_mul = 0;
int timer3_mul = 0;

void setTimer1(int duration){
 8000988:	b480      	push	{r7}
 800098a:	b083      	sub	sp, #12
 800098c:	af00      	add	r7, sp, #0
 800098e:	6078      	str	r0, [r7, #4]
	timer1_mul = duration / TIMER_CYCLE_1;
 8000990:	4a07      	ldr	r2, [pc, #28]	; (80009b0 <setTimer1+0x28>)
 8000992:	687b      	ldr	r3, [r7, #4]
 8000994:	6013      	str	r3, [r2, #0]
	timer1_counter = timer1_mul;
 8000996:	4b06      	ldr	r3, [pc, #24]	; (80009b0 <setTimer1+0x28>)
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	4a06      	ldr	r2, [pc, #24]	; (80009b4 <setTimer1+0x2c>)
 800099c:	6013      	str	r3, [r2, #0]
	timer1_flag = 0;
 800099e:	4b06      	ldr	r3, [pc, #24]	; (80009b8 <setTimer1+0x30>)
 80009a0:	2200      	movs	r2, #0
 80009a2:	701a      	strb	r2, [r3, #0]
}
 80009a4:	bf00      	nop
 80009a6:	370c      	adds	r7, #12
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bc80      	pop	{r7}
 80009ac:	4770      	bx	lr
 80009ae:	bf00      	nop
 80009b0:	200000a4 	.word	0x200000a4
 80009b4:	20000098 	.word	0x20000098
 80009b8:	20000094 	.word	0x20000094

080009bc <setTimer2>:

void setTimer2(int duration){
 80009bc:	b480      	push	{r7}
 80009be:	b083      	sub	sp, #12
 80009c0:	af00      	add	r7, sp, #0
 80009c2:	6078      	str	r0, [r7, #4]
	timer2_mul = duration / TIMER_CYCLE_2;
 80009c4:	4a07      	ldr	r2, [pc, #28]	; (80009e4 <setTimer2+0x28>)
 80009c6:	687b      	ldr	r3, [r7, #4]
 80009c8:	6013      	str	r3, [r2, #0]
	timer2_counter = timer2_mul;
 80009ca:	4b06      	ldr	r3, [pc, #24]	; (80009e4 <setTimer2+0x28>)
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	4a06      	ldr	r2, [pc, #24]	; (80009e8 <setTimer2+0x2c>)
 80009d0:	6013      	str	r3, [r2, #0]
	timer2_flag = 0;
 80009d2:	4b06      	ldr	r3, [pc, #24]	; (80009ec <setTimer2+0x30>)
 80009d4:	2200      	movs	r2, #0
 80009d6:	701a      	strb	r2, [r3, #0]
}
 80009d8:	bf00      	nop
 80009da:	370c      	adds	r7, #12
 80009dc:	46bd      	mov	sp, r7
 80009de:	bc80      	pop	{r7}
 80009e0:	4770      	bx	lr
 80009e2:	bf00      	nop
 80009e4:	200000a8 	.word	0x200000a8
 80009e8:	2000009c 	.word	0x2000009c
 80009ec:	20000095 	.word	0x20000095

080009f0 <setTimer3>:

void setTimer3(int duration){
 80009f0:	b480      	push	{r7}
 80009f2:	b083      	sub	sp, #12
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	6078      	str	r0, [r7, #4]
	timer3_mul = duration / TIMER_CYCLE_3;
 80009f8:	4a07      	ldr	r2, [pc, #28]	; (8000a18 <setTimer3+0x28>)
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	6013      	str	r3, [r2, #0]
	timer3_counter = timer3_mul;
 80009fe:	4b06      	ldr	r3, [pc, #24]	; (8000a18 <setTimer3+0x28>)
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	4a06      	ldr	r2, [pc, #24]	; (8000a1c <setTimer3+0x2c>)
 8000a04:	6013      	str	r3, [r2, #0]
	timer3_flag = 0;
 8000a06:	4b06      	ldr	r3, [pc, #24]	; (8000a20 <setTimer3+0x30>)
 8000a08:	2200      	movs	r2, #0
 8000a0a:	701a      	strb	r2, [r3, #0]
}
 8000a0c:	bf00      	nop
 8000a0e:	370c      	adds	r7, #12
 8000a10:	46bd      	mov	sp, r7
 8000a12:	bc80      	pop	{r7}
 8000a14:	4770      	bx	lr
 8000a16:	bf00      	nop
 8000a18:	200000ac 	.word	0x200000ac
 8000a1c:	200000a0 	.word	0x200000a0
 8000a20:	20000096 	.word	0x20000096

08000a24 <timer1Run>:


void timer1Run(void){
 8000a24:	b480      	push	{r7}
 8000a26:	af00      	add	r7, sp, #0
	 if(timer1_counter > 0){
 8000a28:	4b09      	ldr	r3, [pc, #36]	; (8000a50 <timer1Run+0x2c>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
 8000a2c:	2b00      	cmp	r3, #0
 8000a2e:	dd0b      	ble.n	8000a48 <timer1Run+0x24>
		 timer1_counter--;
 8000a30:	4b07      	ldr	r3, [pc, #28]	; (8000a50 <timer1Run+0x2c>)
 8000a32:	681b      	ldr	r3, [r3, #0]
 8000a34:	3b01      	subs	r3, #1
 8000a36:	4a06      	ldr	r2, [pc, #24]	; (8000a50 <timer1Run+0x2c>)
 8000a38:	6013      	str	r3, [r2, #0]
		 if(timer1_counter <= 0){
 8000a3a:	4b05      	ldr	r3, [pc, #20]	; (8000a50 <timer1Run+0x2c>)
 8000a3c:	681b      	ldr	r3, [r3, #0]
 8000a3e:	2b00      	cmp	r3, #0
 8000a40:	dc02      	bgt.n	8000a48 <timer1Run+0x24>
			timer1_flag = 1;
 8000a42:	4b04      	ldr	r3, [pc, #16]	; (8000a54 <timer1Run+0x30>)
 8000a44:	2201      	movs	r2, #1
 8000a46:	701a      	strb	r2, [r3, #0]
		 }
	 }
}
 8000a48:	bf00      	nop
 8000a4a:	46bd      	mov	sp, r7
 8000a4c:	bc80      	pop	{r7}
 8000a4e:	4770      	bx	lr
 8000a50:	20000098 	.word	0x20000098
 8000a54:	20000094 	.word	0x20000094

08000a58 <timer2Run>:

void timer2Run(void){
 8000a58:	b480      	push	{r7}
 8000a5a:	af00      	add	r7, sp, #0
	 if(timer2_counter > 0){
 8000a5c:	4b09      	ldr	r3, [pc, #36]	; (8000a84 <timer2Run+0x2c>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	2b00      	cmp	r3, #0
 8000a62:	dd0b      	ble.n	8000a7c <timer2Run+0x24>
		 timer2_counter--;
 8000a64:	4b07      	ldr	r3, [pc, #28]	; (8000a84 <timer2Run+0x2c>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	3b01      	subs	r3, #1
 8000a6a:	4a06      	ldr	r2, [pc, #24]	; (8000a84 <timer2Run+0x2c>)
 8000a6c:	6013      	str	r3, [r2, #0]
		 if(timer2_counter <= 0){
 8000a6e:	4b05      	ldr	r3, [pc, #20]	; (8000a84 <timer2Run+0x2c>)
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	dc02      	bgt.n	8000a7c <timer2Run+0x24>
			timer2_flag = 1;
 8000a76:	4b04      	ldr	r3, [pc, #16]	; (8000a88 <timer2Run+0x30>)
 8000a78:	2201      	movs	r2, #1
 8000a7a:	701a      	strb	r2, [r3, #0]
		 }
	 }
}
 8000a7c:	bf00      	nop
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bc80      	pop	{r7}
 8000a82:	4770      	bx	lr
 8000a84:	2000009c 	.word	0x2000009c
 8000a88:	20000095 	.word	0x20000095

08000a8c <timer3Run>:

void timer3Run(void){
 8000a8c:	b480      	push	{r7}
 8000a8e:	af00      	add	r7, sp, #0
	 if(timer3_counter > 0){
 8000a90:	4b09      	ldr	r3, [pc, #36]	; (8000ab8 <timer3Run+0x2c>)
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	dd0b      	ble.n	8000ab0 <timer3Run+0x24>
		 timer3_counter--;
 8000a98:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <timer3Run+0x2c>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	3b01      	subs	r3, #1
 8000a9e:	4a06      	ldr	r2, [pc, #24]	; (8000ab8 <timer3Run+0x2c>)
 8000aa0:	6013      	str	r3, [r2, #0]
		 if(timer3_counter <= 0){
 8000aa2:	4b05      	ldr	r3, [pc, #20]	; (8000ab8 <timer3Run+0x2c>)
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	2b00      	cmp	r3, #0
 8000aa8:	dc02      	bgt.n	8000ab0 <timer3Run+0x24>
			timer3_flag = 1;
 8000aaa:	4b04      	ldr	r3, [pc, #16]	; (8000abc <timer3Run+0x30>)
 8000aac:	2201      	movs	r2, #1
 8000aae:	701a      	strb	r2, [r3, #0]
		 }
	 }
}
 8000ab0:	bf00      	nop
 8000ab2:	46bd      	mov	sp, r7
 8000ab4:	bc80      	pop	{r7}
 8000ab6:	4770      	bx	lr
 8000ab8:	200000a0 	.word	0x200000a0
 8000abc:	20000096 	.word	0x20000096

08000ac0 <HAL_TIM_PeriodElapsedCallback>:



void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	b082      	sub	sp, #8
 8000ac4:	af00      	add	r7, sp, #0
 8000ac6:	6078      	str	r0, [r7, #4]
	if(htim->Instance == TIM2){
 8000ac8:	687b      	ldr	r3, [r7, #4]
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000ad0:	d107      	bne.n	8000ae2 <HAL_TIM_PeriodElapsedCallback+0x22>
		timer1Run();
 8000ad2:	f7ff ffa7 	bl	8000a24 <timer1Run>
		timer2Run();
 8000ad6:	f7ff ffbf 	bl	8000a58 <timer2Run>
		timer3Run();
 8000ada:	f7ff ffd7 	bl	8000a8c <timer3Run>
		button_reading();
 8000ade:	f7ff fb35 	bl	800014c <button_reading>
	}
}
 8000ae2:	bf00      	nop
 8000ae4:	3708      	adds	r7, #8
 8000ae6:	46bd      	mov	sp, r7
 8000ae8:	bd80      	pop	{r7, pc}
	...

08000aec <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000aec:	b480      	push	{r7}
 8000aee:	b085      	sub	sp, #20
 8000af0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000af2:	4b15      	ldr	r3, [pc, #84]	; (8000b48 <HAL_MspInit+0x5c>)
 8000af4:	699b      	ldr	r3, [r3, #24]
 8000af6:	4a14      	ldr	r2, [pc, #80]	; (8000b48 <HAL_MspInit+0x5c>)
 8000af8:	f043 0301 	orr.w	r3, r3, #1
 8000afc:	6193      	str	r3, [r2, #24]
 8000afe:	4b12      	ldr	r3, [pc, #72]	; (8000b48 <HAL_MspInit+0x5c>)
 8000b00:	699b      	ldr	r3, [r3, #24]
 8000b02:	f003 0301 	and.w	r3, r3, #1
 8000b06:	60bb      	str	r3, [r7, #8]
 8000b08:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b0a:	4b0f      	ldr	r3, [pc, #60]	; (8000b48 <HAL_MspInit+0x5c>)
 8000b0c:	69db      	ldr	r3, [r3, #28]
 8000b0e:	4a0e      	ldr	r2, [pc, #56]	; (8000b48 <HAL_MspInit+0x5c>)
 8000b10:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000b14:	61d3      	str	r3, [r2, #28]
 8000b16:	4b0c      	ldr	r3, [pc, #48]	; (8000b48 <HAL_MspInit+0x5c>)
 8000b18:	69db      	ldr	r3, [r3, #28]
 8000b1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b1e:	607b      	str	r3, [r7, #4]
 8000b20:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 8000b22:	4b0a      	ldr	r3, [pc, #40]	; (8000b4c <HAL_MspInit+0x60>)
 8000b24:	685b      	ldr	r3, [r3, #4]
 8000b26:	60fb      	str	r3, [r7, #12]
 8000b28:	68fb      	ldr	r3, [r7, #12]
 8000b2a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000b2e:	60fb      	str	r3, [r7, #12]
 8000b30:	68fb      	ldr	r3, [r7, #12]
 8000b32:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000b36:	60fb      	str	r3, [r7, #12]
 8000b38:	4a04      	ldr	r2, [pc, #16]	; (8000b4c <HAL_MspInit+0x60>)
 8000b3a:	68fb      	ldr	r3, [r7, #12]
 8000b3c:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000b3e:	bf00      	nop
 8000b40:	3714      	adds	r7, #20
 8000b42:	46bd      	mov	sp, r7
 8000b44:	bc80      	pop	{r7}
 8000b46:	4770      	bx	lr
 8000b48:	40021000 	.word	0x40021000
 8000b4c:	40010000 	.word	0x40010000

08000b50 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b084      	sub	sp, #16
 8000b54:	af00      	add	r7, sp, #0
 8000b56:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000b60:	d113      	bne.n	8000b8a <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000b62:	4b0c      	ldr	r3, [pc, #48]	; (8000b94 <HAL_TIM_Base_MspInit+0x44>)
 8000b64:	69db      	ldr	r3, [r3, #28]
 8000b66:	4a0b      	ldr	r2, [pc, #44]	; (8000b94 <HAL_TIM_Base_MspInit+0x44>)
 8000b68:	f043 0301 	orr.w	r3, r3, #1
 8000b6c:	61d3      	str	r3, [r2, #28]
 8000b6e:	4b09      	ldr	r3, [pc, #36]	; (8000b94 <HAL_TIM_Base_MspInit+0x44>)
 8000b70:	69db      	ldr	r3, [r3, #28]
 8000b72:	f003 0301 	and.w	r3, r3, #1
 8000b76:	60fb      	str	r3, [r7, #12]
 8000b78:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	2100      	movs	r1, #0
 8000b7e:	201c      	movs	r0, #28
 8000b80:	f000 fda1 	bl	80016c6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000b84:	201c      	movs	r0, #28
 8000b86:	f000 fdba 	bl	80016fe <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8000b8a:	bf00      	nop
 8000b8c:	3710      	adds	r7, #16
 8000b8e:	46bd      	mov	sp, r7
 8000b90:	bd80      	pop	{r7, pc}
 8000b92:	bf00      	nop
 8000b94:	40021000 	.word	0x40021000

08000b98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000b98:	b480      	push	{r7}
 8000b9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000b9c:	e7fe      	b.n	8000b9c <NMI_Handler+0x4>

08000b9e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000b9e:	b480      	push	{r7}
 8000ba0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000ba2:	e7fe      	b.n	8000ba2 <HardFault_Handler+0x4>

08000ba4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000ba4:	b480      	push	{r7}
 8000ba6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000ba8:	e7fe      	b.n	8000ba8 <MemManage_Handler+0x4>

08000baa <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000baa:	b480      	push	{r7}
 8000bac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000bae:	e7fe      	b.n	8000bae <BusFault_Handler+0x4>

08000bb0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000bb0:	b480      	push	{r7}
 8000bb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000bb4:	e7fe      	b.n	8000bb4 <UsageFault_Handler+0x4>

08000bb6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000bb6:	b480      	push	{r7}
 8000bb8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000bba:	bf00      	nop
 8000bbc:	46bd      	mov	sp, r7
 8000bbe:	bc80      	pop	{r7}
 8000bc0:	4770      	bx	lr

08000bc2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000bc2:	b480      	push	{r7}
 8000bc4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000bc6:	bf00      	nop
 8000bc8:	46bd      	mov	sp, r7
 8000bca:	bc80      	pop	{r7}
 8000bcc:	4770      	bx	lr

08000bce <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000bce:	b480      	push	{r7}
 8000bd0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000bd2:	bf00      	nop
 8000bd4:	46bd      	mov	sp, r7
 8000bd6:	bc80      	pop	{r7}
 8000bd8:	4770      	bx	lr

08000bda <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000bda:	b580      	push	{r7, lr}
 8000bdc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000bde:	f000 fc5b 	bl	8001498 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000be2:	bf00      	nop
 8000be4:	bd80      	pop	{r7, pc}
	...

08000be8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000be8:	b580      	push	{r7, lr}
 8000bea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000bec:	4802      	ldr	r0, [pc, #8]	; (8000bf8 <TIM2_IRQHandler+0x10>)
 8000bee:	f001 fbdf 	bl	80023b0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000bf2:	bf00      	nop
 8000bf4:	bd80      	pop	{r7, pc}
 8000bf6:	bf00      	nop
 8000bf8:	2000004c 	.word	0x2000004c

08000bfc <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000bfc:	b480      	push	{r7}
 8000bfe:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000c00:	bf00      	nop
 8000c02:	46bd      	mov	sp, r7
 8000c04:	bc80      	pop	{r7}
 8000c06:	4770      	bx	lr

08000c08 <init_traffic_process>:
enum traffic_state trafficState;

enum traffic_phase {INIT_PHASE, PHASE1, PHASE2, PHASE3, PHASE4};
enum traffic_phase trafficPhase;

void init_traffic_process(void){
 8000c08:	b580      	push	{r7, lr}
 8000c0a:	af00      	add	r7, sp, #0
	trafficState = INIT_STATE;
 8000c0c:	4b04      	ldr	r3, [pc, #16]	; (8000c20 <init_traffic_process+0x18>)
 8000c0e:	2200      	movs	r2, #0
 8000c10:	701a      	strb	r2, [r3, #0]
	trafficPhase = INIT_PHASE;
 8000c12:	4b04      	ldr	r3, [pc, #16]	; (8000c24 <init_traffic_process+0x1c>)
 8000c14:	2200      	movs	r2, #0
 8000c16:	701a      	strb	r2, [r3, #0]
	init_traffic_time();
 8000c18:	f000 f806 	bl	8000c28 <init_traffic_time>
}
 8000c1c:	bf00      	nop
 8000c1e:	bd80      	pop	{r7, pc}
 8000c20:	200000c3 	.word	0x200000c3
 8000c24:	200000c4 	.word	0x200000c4

08000c28 <init_traffic_time>:
	led_yellow2_counter = DEFAULT_YELLOW;
	led_green1_counter = DEFAULT_GREEN;
	led_green2_counter = DEFAULT_GREEN;
}

void init_traffic_time(void){
 8000c28:	b480      	push	{r7}
 8000c2a:	af00      	add	r7, sp, #0
	led_red1_counter = init_red;
 8000c2c:	4b0d      	ldr	r3, [pc, #52]	; (8000c64 <init_traffic_time+0x3c>)
 8000c2e:	881a      	ldrh	r2, [r3, #0]
 8000c30:	4b0d      	ldr	r3, [pc, #52]	; (8000c68 <init_traffic_time+0x40>)
 8000c32:	801a      	strh	r2, [r3, #0]
	led_red2_counter = init_red;
 8000c34:	4b0b      	ldr	r3, [pc, #44]	; (8000c64 <init_traffic_time+0x3c>)
 8000c36:	881a      	ldrh	r2, [r3, #0]
 8000c38:	4b0c      	ldr	r3, [pc, #48]	; (8000c6c <init_traffic_time+0x44>)
 8000c3a:	801a      	strh	r2, [r3, #0]
	led_yellow1_counter = init_yellow;
 8000c3c:	4b0c      	ldr	r3, [pc, #48]	; (8000c70 <init_traffic_time+0x48>)
 8000c3e:	881a      	ldrh	r2, [r3, #0]
 8000c40:	4b0c      	ldr	r3, [pc, #48]	; (8000c74 <init_traffic_time+0x4c>)
 8000c42:	801a      	strh	r2, [r3, #0]
	led_yellow2_counter = init_yellow;
 8000c44:	4b0a      	ldr	r3, [pc, #40]	; (8000c70 <init_traffic_time+0x48>)
 8000c46:	881a      	ldrh	r2, [r3, #0]
 8000c48:	4b0b      	ldr	r3, [pc, #44]	; (8000c78 <init_traffic_time+0x50>)
 8000c4a:	801a      	strh	r2, [r3, #0]
	led_green1_counter = init_green;
 8000c4c:	4b0b      	ldr	r3, [pc, #44]	; (8000c7c <init_traffic_time+0x54>)
 8000c4e:	881a      	ldrh	r2, [r3, #0]
 8000c50:	4b0b      	ldr	r3, [pc, #44]	; (8000c80 <init_traffic_time+0x58>)
 8000c52:	801a      	strh	r2, [r3, #0]
	led_green2_counter = init_green;
 8000c54:	4b09      	ldr	r3, [pc, #36]	; (8000c7c <init_traffic_time+0x54>)
 8000c56:	881a      	ldrh	r2, [r3, #0]
 8000c58:	4b0a      	ldr	r3, [pc, #40]	; (8000c84 <init_traffic_time+0x5c>)
 8000c5a:	801a      	strh	r2, [r3, #0]

}
 8000c5c:	bf00      	nop
 8000c5e:	46bd      	mov	sp, r7
 8000c60:	bc80      	pop	{r7}
 8000c62:	4770      	bx	lr
 8000c64:	20000004 	.word	0x20000004
 8000c68:	200000b0 	.word	0x200000b0
 8000c6c:	200000b2 	.word	0x200000b2
 8000c70:	20000006 	.word	0x20000006
 8000c74:	200000b4 	.word	0x200000b4
 8000c78:	200000b6 	.word	0x200000b6
 8000c7c:	20000008 	.word	0x20000008
 8000c80:	200000b8 	.word	0x200000b8
 8000c84:	200000ba 	.word	0x200000ba

08000c88 <auto_mode_process>:

void auto_mode_process(void){
 8000c88:	b580      	push	{r7, lr}
 8000c8a:	af00      	add	r7, sp, #0
	switch(trafficPhase){
 8000c8c:	4b8a      	ldr	r3, [pc, #552]	; (8000eb8 <auto_mode_process+0x230>)
 8000c8e:	781b      	ldrb	r3, [r3, #0]
 8000c90:	2b04      	cmp	r3, #4
 8000c92:	f200 817a 	bhi.w	8000f8a <auto_mode_process+0x302>
 8000c96:	a201      	add	r2, pc, #4	; (adr r2, 8000c9c <auto_mode_process+0x14>)
 8000c98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c9c:	08000cb1 	.word	0x08000cb1
 8000ca0:	08000cbd 	.word	0x08000cbd
 8000ca4:	08000d67 	.word	0x08000d67
 8000ca8:	08000e11 	.word	0x08000e11
 8000cac:	08000ed5 	.word	0x08000ed5
	case INIT_PHASE:{
		testAllLed();
 8000cb0:	f7ff fdb0 	bl	8000814 <testAllLed>

		trafficPhase = PHASE1;
 8000cb4:	4b80      	ldr	r3, [pc, #512]	; (8000eb8 <auto_mode_process+0x230>)
 8000cb6:	2201      	movs	r2, #1
 8000cb8:	701a      	strb	r2, [r3, #0]
		break;
 8000cba:	e166      	b.n	8000f8a <auto_mode_process+0x302>
	}
	case PHASE1:{
		led_red1_counter--;
 8000cbc:	4b7f      	ldr	r3, [pc, #508]	; (8000ebc <auto_mode_process+0x234>)
 8000cbe:	881b      	ldrh	r3, [r3, #0]
 8000cc0:	3b01      	subs	r3, #1
 8000cc2:	b29a      	uxth	r2, r3
 8000cc4:	4b7d      	ldr	r3, [pc, #500]	; (8000ebc <auto_mode_process+0x234>)
 8000cc6:	801a      	strh	r2, [r3, #0]
		led_green2_counter--;
 8000cc8:	4b7d      	ldr	r3, [pc, #500]	; (8000ec0 <auto_mode_process+0x238>)
 8000cca:	881b      	ldrh	r3, [r3, #0]
 8000ccc:	3b01      	subs	r3, #1
 8000cce:	b29a      	uxth	r2, r3
 8000cd0:	4b7b      	ldr	r3, [pc, #492]	; (8000ec0 <auto_mode_process+0x238>)
 8000cd2:	801a      	strh	r2, [r3, #0]

		turnOnGreen(2);
 8000cd4:	2002      	movs	r0, #2
 8000cd6:	f7ff fdf5 	bl	80008c4 <turnOnGreen>
		turnOnRed(1);
 8000cda:	2001      	movs	r0, #1
 8000cdc:	f7ff fda6 	bl	800082c <turnOnRed>

		setLed7Seg(0, led_red1_counter / 10);
 8000ce0:	4b76      	ldr	r3, [pc, #472]	; (8000ebc <auto_mode_process+0x234>)
 8000ce2:	881b      	ldrh	r3, [r3, #0]
 8000ce4:	4a77      	ldr	r2, [pc, #476]	; (8000ec4 <auto_mode_process+0x23c>)
 8000ce6:	fba2 2303 	umull	r2, r3, r2, r3
 8000cea:	08db      	lsrs	r3, r3, #3
 8000cec:	b29b      	uxth	r3, r3
 8000cee:	b2db      	uxtb	r3, r3
 8000cf0:	4619      	mov	r1, r3
 8000cf2:	2000      	movs	r0, #0
 8000cf4:	f7ff fb08 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, led_red1_counter % 10);
 8000cf8:	4b70      	ldr	r3, [pc, #448]	; (8000ebc <auto_mode_process+0x234>)
 8000cfa:	881a      	ldrh	r2, [r3, #0]
 8000cfc:	4b71      	ldr	r3, [pc, #452]	; (8000ec4 <auto_mode_process+0x23c>)
 8000cfe:	fba3 1302 	umull	r1, r3, r3, r2
 8000d02:	08d9      	lsrs	r1, r3, #3
 8000d04:	460b      	mov	r3, r1
 8000d06:	009b      	lsls	r3, r3, #2
 8000d08:	440b      	add	r3, r1
 8000d0a:	005b      	lsls	r3, r3, #1
 8000d0c:	1ad3      	subs	r3, r2, r3
 8000d0e:	b29b      	uxth	r3, r3
 8000d10:	b2db      	uxtb	r3, r3
 8000d12:	4619      	mov	r1, r3
 8000d14:	2001      	movs	r0, #1
 8000d16:	f7ff faf7 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, led_green2_counter / 10);
 8000d1a:	4b69      	ldr	r3, [pc, #420]	; (8000ec0 <auto_mode_process+0x238>)
 8000d1c:	881b      	ldrh	r3, [r3, #0]
 8000d1e:	4a69      	ldr	r2, [pc, #420]	; (8000ec4 <auto_mode_process+0x23c>)
 8000d20:	fba2 2303 	umull	r2, r3, r2, r3
 8000d24:	08db      	lsrs	r3, r3, #3
 8000d26:	b29b      	uxth	r3, r3
 8000d28:	b2db      	uxtb	r3, r3
 8000d2a:	4619      	mov	r1, r3
 8000d2c:	2002      	movs	r0, #2
 8000d2e:	f7ff faeb 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, led_green2_counter % 10);
 8000d32:	4b63      	ldr	r3, [pc, #396]	; (8000ec0 <auto_mode_process+0x238>)
 8000d34:	881a      	ldrh	r2, [r3, #0]
 8000d36:	4b63      	ldr	r3, [pc, #396]	; (8000ec4 <auto_mode_process+0x23c>)
 8000d38:	fba3 1302 	umull	r1, r3, r3, r2
 8000d3c:	08d9      	lsrs	r1, r3, #3
 8000d3e:	460b      	mov	r3, r1
 8000d40:	009b      	lsls	r3, r3, #2
 8000d42:	440b      	add	r3, r1
 8000d44:	005b      	lsls	r3, r3, #1
 8000d46:	1ad3      	subs	r3, r2, r3
 8000d48:	b29b      	uxth	r3, r3
 8000d4a:	b2db      	uxtb	r3, r3
 8000d4c:	4619      	mov	r1, r3
 8000d4e:	2003      	movs	r0, #3
 8000d50:	f7ff fada 	bl	8000308 <setLed7Seg>

		if(!led_green2_counter){
 8000d54:	4b5a      	ldr	r3, [pc, #360]	; (8000ec0 <auto_mode_process+0x238>)
 8000d56:	881b      	ldrh	r3, [r3, #0]
 8000d58:	2b00      	cmp	r3, #0
 8000d5a:	f040 810f 	bne.w	8000f7c <auto_mode_process+0x2f4>
			trafficPhase = PHASE2;
 8000d5e:	4b56      	ldr	r3, [pc, #344]	; (8000eb8 <auto_mode_process+0x230>)
 8000d60:	2202      	movs	r2, #2
 8000d62:	701a      	strb	r2, [r3, #0]
		}

		break;
 8000d64:	e10a      	b.n	8000f7c <auto_mode_process+0x2f4>
	}
	case PHASE2:{
		led_red1_counter--;
 8000d66:	4b55      	ldr	r3, [pc, #340]	; (8000ebc <auto_mode_process+0x234>)
 8000d68:	881b      	ldrh	r3, [r3, #0]
 8000d6a:	3b01      	subs	r3, #1
 8000d6c:	b29a      	uxth	r2, r3
 8000d6e:	4b53      	ldr	r3, [pc, #332]	; (8000ebc <auto_mode_process+0x234>)
 8000d70:	801a      	strh	r2, [r3, #0]
		led_yellow2_counter--;
 8000d72:	4b55      	ldr	r3, [pc, #340]	; (8000ec8 <auto_mode_process+0x240>)
 8000d74:	881b      	ldrh	r3, [r3, #0]
 8000d76:	3b01      	subs	r3, #1
 8000d78:	b29a      	uxth	r2, r3
 8000d7a:	4b53      	ldr	r3, [pc, #332]	; (8000ec8 <auto_mode_process+0x240>)
 8000d7c:	801a      	strh	r2, [r3, #0]

		turnOnYellow(2);
 8000d7e:	2002      	movs	r0, #2
 8000d80:	f7ff fd7a 	bl	8000878 <turnOnYellow>
		turnOnRed(1);
 8000d84:	2001      	movs	r0, #1
 8000d86:	f7ff fd51 	bl	800082c <turnOnRed>

		setLed7Seg(0, led_red1_counter / 10);
 8000d8a:	4b4c      	ldr	r3, [pc, #304]	; (8000ebc <auto_mode_process+0x234>)
 8000d8c:	881b      	ldrh	r3, [r3, #0]
 8000d8e:	4a4d      	ldr	r2, [pc, #308]	; (8000ec4 <auto_mode_process+0x23c>)
 8000d90:	fba2 2303 	umull	r2, r3, r2, r3
 8000d94:	08db      	lsrs	r3, r3, #3
 8000d96:	b29b      	uxth	r3, r3
 8000d98:	b2db      	uxtb	r3, r3
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	2000      	movs	r0, #0
 8000d9e:	f7ff fab3 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, led_red1_counter % 10);
 8000da2:	4b46      	ldr	r3, [pc, #280]	; (8000ebc <auto_mode_process+0x234>)
 8000da4:	881a      	ldrh	r2, [r3, #0]
 8000da6:	4b47      	ldr	r3, [pc, #284]	; (8000ec4 <auto_mode_process+0x23c>)
 8000da8:	fba3 1302 	umull	r1, r3, r3, r2
 8000dac:	08d9      	lsrs	r1, r3, #3
 8000dae:	460b      	mov	r3, r1
 8000db0:	009b      	lsls	r3, r3, #2
 8000db2:	440b      	add	r3, r1
 8000db4:	005b      	lsls	r3, r3, #1
 8000db6:	1ad3      	subs	r3, r2, r3
 8000db8:	b29b      	uxth	r3, r3
 8000dba:	b2db      	uxtb	r3, r3
 8000dbc:	4619      	mov	r1, r3
 8000dbe:	2001      	movs	r0, #1
 8000dc0:	f7ff faa2 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, led_yellow2_counter / 10);
 8000dc4:	4b40      	ldr	r3, [pc, #256]	; (8000ec8 <auto_mode_process+0x240>)
 8000dc6:	881b      	ldrh	r3, [r3, #0]
 8000dc8:	4a3e      	ldr	r2, [pc, #248]	; (8000ec4 <auto_mode_process+0x23c>)
 8000dca:	fba2 2303 	umull	r2, r3, r2, r3
 8000dce:	08db      	lsrs	r3, r3, #3
 8000dd0:	b29b      	uxth	r3, r3
 8000dd2:	b2db      	uxtb	r3, r3
 8000dd4:	4619      	mov	r1, r3
 8000dd6:	2002      	movs	r0, #2
 8000dd8:	f7ff fa96 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, led_yellow2_counter % 10);
 8000ddc:	4b3a      	ldr	r3, [pc, #232]	; (8000ec8 <auto_mode_process+0x240>)
 8000dde:	881a      	ldrh	r2, [r3, #0]
 8000de0:	4b38      	ldr	r3, [pc, #224]	; (8000ec4 <auto_mode_process+0x23c>)
 8000de2:	fba3 1302 	umull	r1, r3, r3, r2
 8000de6:	08d9      	lsrs	r1, r3, #3
 8000de8:	460b      	mov	r3, r1
 8000dea:	009b      	lsls	r3, r3, #2
 8000dec:	440b      	add	r3, r1
 8000dee:	005b      	lsls	r3, r3, #1
 8000df0:	1ad3      	subs	r3, r2, r3
 8000df2:	b29b      	uxth	r3, r3
 8000df4:	b2db      	uxtb	r3, r3
 8000df6:	4619      	mov	r1, r3
 8000df8:	2003      	movs	r0, #3
 8000dfa:	f7ff fa85 	bl	8000308 <setLed7Seg>

		if(!led_yellow2_counter){
 8000dfe:	4b32      	ldr	r3, [pc, #200]	; (8000ec8 <auto_mode_process+0x240>)
 8000e00:	881b      	ldrh	r3, [r3, #0]
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	f040 80bc 	bne.w	8000f80 <auto_mode_process+0x2f8>
			trafficPhase = PHASE3;
 8000e08:	4b2b      	ldr	r3, [pc, #172]	; (8000eb8 <auto_mode_process+0x230>)
 8000e0a:	2203      	movs	r2, #3
 8000e0c:	701a      	strb	r2, [r3, #0]
		}

		break;
 8000e0e:	e0b7      	b.n	8000f80 <auto_mode_process+0x2f8>
	}
	case PHASE3:{
		led_red2_counter--;
 8000e10:	4b2e      	ldr	r3, [pc, #184]	; (8000ecc <auto_mode_process+0x244>)
 8000e12:	881b      	ldrh	r3, [r3, #0]
 8000e14:	3b01      	subs	r3, #1
 8000e16:	b29a      	uxth	r2, r3
 8000e18:	4b2c      	ldr	r3, [pc, #176]	; (8000ecc <auto_mode_process+0x244>)
 8000e1a:	801a      	strh	r2, [r3, #0]
		led_green1_counter--;
 8000e1c:	4b2c      	ldr	r3, [pc, #176]	; (8000ed0 <auto_mode_process+0x248>)
 8000e1e:	881b      	ldrh	r3, [r3, #0]
 8000e20:	3b01      	subs	r3, #1
 8000e22:	b29a      	uxth	r2, r3
 8000e24:	4b2a      	ldr	r3, [pc, #168]	; (8000ed0 <auto_mode_process+0x248>)
 8000e26:	801a      	strh	r2, [r3, #0]

		turnOnRed(2);
 8000e28:	2002      	movs	r0, #2
 8000e2a:	f7ff fcff 	bl	800082c <turnOnRed>
		turnOnGreen(1);
 8000e2e:	2001      	movs	r0, #1
 8000e30:	f7ff fd48 	bl	80008c4 <turnOnGreen>

		setLed7Seg(0, led_green1_counter / 10);
 8000e34:	4b26      	ldr	r3, [pc, #152]	; (8000ed0 <auto_mode_process+0x248>)
 8000e36:	881b      	ldrh	r3, [r3, #0]
 8000e38:	4a22      	ldr	r2, [pc, #136]	; (8000ec4 <auto_mode_process+0x23c>)
 8000e3a:	fba2 2303 	umull	r2, r3, r2, r3
 8000e3e:	08db      	lsrs	r3, r3, #3
 8000e40:	b29b      	uxth	r3, r3
 8000e42:	b2db      	uxtb	r3, r3
 8000e44:	4619      	mov	r1, r3
 8000e46:	2000      	movs	r0, #0
 8000e48:	f7ff fa5e 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, led_green1_counter % 10);
 8000e4c:	4b20      	ldr	r3, [pc, #128]	; (8000ed0 <auto_mode_process+0x248>)
 8000e4e:	881a      	ldrh	r2, [r3, #0]
 8000e50:	4b1c      	ldr	r3, [pc, #112]	; (8000ec4 <auto_mode_process+0x23c>)
 8000e52:	fba3 1302 	umull	r1, r3, r3, r2
 8000e56:	08d9      	lsrs	r1, r3, #3
 8000e58:	460b      	mov	r3, r1
 8000e5a:	009b      	lsls	r3, r3, #2
 8000e5c:	440b      	add	r3, r1
 8000e5e:	005b      	lsls	r3, r3, #1
 8000e60:	1ad3      	subs	r3, r2, r3
 8000e62:	b29b      	uxth	r3, r3
 8000e64:	b2db      	uxtb	r3, r3
 8000e66:	4619      	mov	r1, r3
 8000e68:	2001      	movs	r0, #1
 8000e6a:	f7ff fa4d 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, led_red2_counter / 10);
 8000e6e:	4b17      	ldr	r3, [pc, #92]	; (8000ecc <auto_mode_process+0x244>)
 8000e70:	881b      	ldrh	r3, [r3, #0]
 8000e72:	4a14      	ldr	r2, [pc, #80]	; (8000ec4 <auto_mode_process+0x23c>)
 8000e74:	fba2 2303 	umull	r2, r3, r2, r3
 8000e78:	08db      	lsrs	r3, r3, #3
 8000e7a:	b29b      	uxth	r3, r3
 8000e7c:	b2db      	uxtb	r3, r3
 8000e7e:	4619      	mov	r1, r3
 8000e80:	2002      	movs	r0, #2
 8000e82:	f7ff fa41 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, led_red2_counter % 10);
 8000e86:	4b11      	ldr	r3, [pc, #68]	; (8000ecc <auto_mode_process+0x244>)
 8000e88:	881a      	ldrh	r2, [r3, #0]
 8000e8a:	4b0e      	ldr	r3, [pc, #56]	; (8000ec4 <auto_mode_process+0x23c>)
 8000e8c:	fba3 1302 	umull	r1, r3, r3, r2
 8000e90:	08d9      	lsrs	r1, r3, #3
 8000e92:	460b      	mov	r3, r1
 8000e94:	009b      	lsls	r3, r3, #2
 8000e96:	440b      	add	r3, r1
 8000e98:	005b      	lsls	r3, r3, #1
 8000e9a:	1ad3      	subs	r3, r2, r3
 8000e9c:	b29b      	uxth	r3, r3
 8000e9e:	b2db      	uxtb	r3, r3
 8000ea0:	4619      	mov	r1, r3
 8000ea2:	2003      	movs	r0, #3
 8000ea4:	f7ff fa30 	bl	8000308 <setLed7Seg>

		if(!led_green1_counter){
 8000ea8:	4b09      	ldr	r3, [pc, #36]	; (8000ed0 <auto_mode_process+0x248>)
 8000eaa:	881b      	ldrh	r3, [r3, #0]
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	d169      	bne.n	8000f84 <auto_mode_process+0x2fc>
			trafficPhase = PHASE4;
 8000eb0:	4b01      	ldr	r3, [pc, #4]	; (8000eb8 <auto_mode_process+0x230>)
 8000eb2:	2204      	movs	r2, #4
 8000eb4:	701a      	strb	r2, [r3, #0]
		}

		break;
 8000eb6:	e065      	b.n	8000f84 <auto_mode_process+0x2fc>
 8000eb8:	200000c4 	.word	0x200000c4
 8000ebc:	200000b0 	.word	0x200000b0
 8000ec0:	200000ba 	.word	0x200000ba
 8000ec4:	cccccccd 	.word	0xcccccccd
 8000ec8:	200000b6 	.word	0x200000b6
 8000ecc:	200000b2 	.word	0x200000b2
 8000ed0:	200000b8 	.word	0x200000b8
	}
	case PHASE4:{
		led_red2_counter--;
 8000ed4:	4b2e      	ldr	r3, [pc, #184]	; (8000f90 <auto_mode_process+0x308>)
 8000ed6:	881b      	ldrh	r3, [r3, #0]
 8000ed8:	3b01      	subs	r3, #1
 8000eda:	b29a      	uxth	r2, r3
 8000edc:	4b2c      	ldr	r3, [pc, #176]	; (8000f90 <auto_mode_process+0x308>)
 8000ede:	801a      	strh	r2, [r3, #0]
		led_yellow1_counter--;
 8000ee0:	4b2c      	ldr	r3, [pc, #176]	; (8000f94 <auto_mode_process+0x30c>)
 8000ee2:	881b      	ldrh	r3, [r3, #0]
 8000ee4:	3b01      	subs	r3, #1
 8000ee6:	b29a      	uxth	r2, r3
 8000ee8:	4b2a      	ldr	r3, [pc, #168]	; (8000f94 <auto_mode_process+0x30c>)
 8000eea:	801a      	strh	r2, [r3, #0]

		turnOnRed(2);
 8000eec:	2002      	movs	r0, #2
 8000eee:	f7ff fc9d 	bl	800082c <turnOnRed>
		turnOnYellow(1);
 8000ef2:	2001      	movs	r0, #1
 8000ef4:	f7ff fcc0 	bl	8000878 <turnOnYellow>

		setLed7Seg(0, led_yellow1_counter / 10);
 8000ef8:	4b26      	ldr	r3, [pc, #152]	; (8000f94 <auto_mode_process+0x30c>)
 8000efa:	881b      	ldrh	r3, [r3, #0]
 8000efc:	4a26      	ldr	r2, [pc, #152]	; (8000f98 <auto_mode_process+0x310>)
 8000efe:	fba2 2303 	umull	r2, r3, r2, r3
 8000f02:	08db      	lsrs	r3, r3, #3
 8000f04:	b29b      	uxth	r3, r3
 8000f06:	b2db      	uxtb	r3, r3
 8000f08:	4619      	mov	r1, r3
 8000f0a:	2000      	movs	r0, #0
 8000f0c:	f7ff f9fc 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, led_yellow1_counter % 10);
 8000f10:	4b20      	ldr	r3, [pc, #128]	; (8000f94 <auto_mode_process+0x30c>)
 8000f12:	881a      	ldrh	r2, [r3, #0]
 8000f14:	4b20      	ldr	r3, [pc, #128]	; (8000f98 <auto_mode_process+0x310>)
 8000f16:	fba3 1302 	umull	r1, r3, r3, r2
 8000f1a:	08d9      	lsrs	r1, r3, #3
 8000f1c:	460b      	mov	r3, r1
 8000f1e:	009b      	lsls	r3, r3, #2
 8000f20:	440b      	add	r3, r1
 8000f22:	005b      	lsls	r3, r3, #1
 8000f24:	1ad3      	subs	r3, r2, r3
 8000f26:	b29b      	uxth	r3, r3
 8000f28:	b2db      	uxtb	r3, r3
 8000f2a:	4619      	mov	r1, r3
 8000f2c:	2001      	movs	r0, #1
 8000f2e:	f7ff f9eb 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, led_red2_counter / 10);
 8000f32:	4b17      	ldr	r3, [pc, #92]	; (8000f90 <auto_mode_process+0x308>)
 8000f34:	881b      	ldrh	r3, [r3, #0]
 8000f36:	4a18      	ldr	r2, [pc, #96]	; (8000f98 <auto_mode_process+0x310>)
 8000f38:	fba2 2303 	umull	r2, r3, r2, r3
 8000f3c:	08db      	lsrs	r3, r3, #3
 8000f3e:	b29b      	uxth	r3, r3
 8000f40:	b2db      	uxtb	r3, r3
 8000f42:	4619      	mov	r1, r3
 8000f44:	2002      	movs	r0, #2
 8000f46:	f7ff f9df 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, led_red2_counter % 10);
 8000f4a:	4b11      	ldr	r3, [pc, #68]	; (8000f90 <auto_mode_process+0x308>)
 8000f4c:	881a      	ldrh	r2, [r3, #0]
 8000f4e:	4b12      	ldr	r3, [pc, #72]	; (8000f98 <auto_mode_process+0x310>)
 8000f50:	fba3 1302 	umull	r1, r3, r3, r2
 8000f54:	08d9      	lsrs	r1, r3, #3
 8000f56:	460b      	mov	r3, r1
 8000f58:	009b      	lsls	r3, r3, #2
 8000f5a:	440b      	add	r3, r1
 8000f5c:	005b      	lsls	r3, r3, #1
 8000f5e:	1ad3      	subs	r3, r2, r3
 8000f60:	b29b      	uxth	r3, r3
 8000f62:	b2db      	uxtb	r3, r3
 8000f64:	4619      	mov	r1, r3
 8000f66:	2003      	movs	r0, #3
 8000f68:	f7ff f9ce 	bl	8000308 <setLed7Seg>

		if(!led_yellow1_counter){
 8000f6c:	4b09      	ldr	r3, [pc, #36]	; (8000f94 <auto_mode_process+0x30c>)
 8000f6e:	881b      	ldrh	r3, [r3, #0]
 8000f70:	2b00      	cmp	r3, #0
 8000f72:	d109      	bne.n	8000f88 <auto_mode_process+0x300>
			trafficPhase = PHASE1;
 8000f74:	4b09      	ldr	r3, [pc, #36]	; (8000f9c <auto_mode_process+0x314>)
 8000f76:	2201      	movs	r2, #1
 8000f78:	701a      	strb	r2, [r3, #0]
		}


		break;
 8000f7a:	e005      	b.n	8000f88 <auto_mode_process+0x300>
		break;
 8000f7c:	bf00      	nop
 8000f7e:	e004      	b.n	8000f8a <auto_mode_process+0x302>
		break;
 8000f80:	bf00      	nop
 8000f82:	e002      	b.n	8000f8a <auto_mode_process+0x302>
		break;
 8000f84:	bf00      	nop
 8000f86:	e000      	b.n	8000f8a <auto_mode_process+0x302>
		break;
 8000f88:	bf00      	nop
	}
	}
}
 8000f8a:	bf00      	nop
 8000f8c:	bd80      	pop	{r7, pc}
 8000f8e:	bf00      	nop
 8000f90:	200000b2 	.word	0x200000b2
 8000f94:	200000b4 	.word	0x200000b4
 8000f98:	cccccccd 	.word	0xcccccccd
 8000f9c:	200000c4 	.word	0x200000c4

08000fa0 <check_error>:

unsigned char check_error(){
 8000fa0:	b480      	push	{r7}
 8000fa2:	af00      	add	r7, sp, #0
	return !(led_red1_counter == (led_yellow1_counter + led_green1_counter))
 8000fa4:	4b0e      	ldr	r3, [pc, #56]	; (8000fe0 <check_error+0x40>)
 8000fa6:	881b      	ldrh	r3, [r3, #0]
 8000fa8:	461a      	mov	r2, r3
 8000faa:	4b0e      	ldr	r3, [pc, #56]	; (8000fe4 <check_error+0x44>)
 8000fac:	881b      	ldrh	r3, [r3, #0]
 8000fae:	4619      	mov	r1, r3
 8000fb0:	4b0d      	ldr	r3, [pc, #52]	; (8000fe8 <check_error+0x48>)
 8000fb2:	881b      	ldrh	r3, [r3, #0]
 8000fb4:	440b      	add	r3, r1
			&& !(led_red2_counter == (led_yellow2_counter + led_green2_counter));
 8000fb6:	429a      	cmp	r2, r3
 8000fb8:	d00c      	beq.n	8000fd4 <check_error+0x34>
 8000fba:	4b0c      	ldr	r3, [pc, #48]	; (8000fec <check_error+0x4c>)
 8000fbc:	881b      	ldrh	r3, [r3, #0]
 8000fbe:	461a      	mov	r2, r3
 8000fc0:	4b0b      	ldr	r3, [pc, #44]	; (8000ff0 <check_error+0x50>)
 8000fc2:	881b      	ldrh	r3, [r3, #0]
 8000fc4:	4619      	mov	r1, r3
 8000fc6:	4b0b      	ldr	r3, [pc, #44]	; (8000ff4 <check_error+0x54>)
 8000fc8:	881b      	ldrh	r3, [r3, #0]
 8000fca:	440b      	add	r3, r1
 8000fcc:	429a      	cmp	r2, r3
 8000fce:	d001      	beq.n	8000fd4 <check_error+0x34>
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	e000      	b.n	8000fd6 <check_error+0x36>
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	b2db      	uxtb	r3, r3
}
 8000fd8:	4618      	mov	r0, r3
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bc80      	pop	{r7}
 8000fde:	4770      	bx	lr
 8000fe0:	200000b0 	.word	0x200000b0
 8000fe4:	200000b4 	.word	0x200000b4
 8000fe8:	200000b8 	.word	0x200000b8
 8000fec:	200000b2 	.word	0x200000b2
 8000ff0:	200000b6 	.word	0x200000b6
 8000ff4:	200000ba 	.word	0x200000ba

08000ff8 <increase_led_counter>:


void increase_led_counter(uint16_t* modifed_led){
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	b082      	sub	sp, #8
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	6078      	str	r0, [r7, #4]
	// push and release button 2 to increase the counter
	if(is_button_press(1)){
 8001000:	2001      	movs	r0, #1
 8001002:	f7ff f94d 	bl	80002a0 <is_button_press>
 8001006:	4603      	mov	r3, r0
 8001008:	2b00      	cmp	r3, #0
 800100a:	d002      	beq.n	8001012 <increase_led_counter+0x1a>
		tempState1 = 1;
 800100c:	4b33      	ldr	r3, [pc, #204]	; (80010dc <increase_led_counter+0xe4>)
 800100e:	2201      	movs	r2, #1
 8001010:	701a      	strb	r2, [r3, #0]
	}
	if(tempState1 && !is_button_press(1)){
 8001012:	4b32      	ldr	r3, [pc, #200]	; (80010dc <increase_led_counter+0xe4>)
 8001014:	781b      	ldrb	r3, [r3, #0]
 8001016:	2b00      	cmp	r3, #0
 8001018:	d018      	beq.n	800104c <increase_led_counter+0x54>
 800101a:	2001      	movs	r0, #1
 800101c:	f7ff f940 	bl	80002a0 <is_button_press>
 8001020:	4603      	mov	r3, r0
 8001022:	2b00      	cmp	r3, #0
 8001024:	d112      	bne.n	800104c <increase_led_counter+0x54>
		modify_led_counter = (modify_led_counter + 1) % 100;
 8001026:	4b2e      	ldr	r3, [pc, #184]	; (80010e0 <increase_led_counter+0xe8>)
 8001028:	881b      	ldrh	r3, [r3, #0]
 800102a:	3301      	adds	r3, #1
 800102c:	4a2d      	ldr	r2, [pc, #180]	; (80010e4 <increase_led_counter+0xec>)
 800102e:	fb82 1203 	smull	r1, r2, r2, r3
 8001032:	1151      	asrs	r1, r2, #5
 8001034:	17da      	asrs	r2, r3, #31
 8001036:	1a8a      	subs	r2, r1, r2
 8001038:	2164      	movs	r1, #100	; 0x64
 800103a:	fb01 f202 	mul.w	r2, r1, r2
 800103e:	1a9a      	subs	r2, r3, r2
 8001040:	b292      	uxth	r2, r2
 8001042:	4b27      	ldr	r3, [pc, #156]	; (80010e0 <increase_led_counter+0xe8>)
 8001044:	801a      	strh	r2, [r3, #0]
		tempState1 = 0;
 8001046:	4b25      	ldr	r3, [pc, #148]	; (80010dc <increase_led_counter+0xe4>)
 8001048:	2200      	movs	r2, #0
 800104a:	701a      	strb	r2, [r3, #0]
	}

	// press button 2 to increase the counter every 0.5s

	if(is_button_press1s(1)){
 800104c:	2001      	movs	r0, #1
 800104e:	f7ff f941 	bl	80002d4 <is_button_press1s>
 8001052:	4603      	mov	r3, r0
 8001054:	2b00      	cmp	r3, #0
 8001056:	d023      	beq.n	80010a0 <increase_led_counter+0xa8>
		increase_freq = (increase_freq + 1) % 5;
 8001058:	4b23      	ldr	r3, [pc, #140]	; (80010e8 <increase_led_counter+0xf0>)
 800105a:	781b      	ldrb	r3, [r3, #0]
 800105c:	1c5a      	adds	r2, r3, #1
 800105e:	4b23      	ldr	r3, [pc, #140]	; (80010ec <increase_led_counter+0xf4>)
 8001060:	fb83 1302 	smull	r1, r3, r3, r2
 8001064:	1059      	asrs	r1, r3, #1
 8001066:	17d3      	asrs	r3, r2, #31
 8001068:	1ac9      	subs	r1, r1, r3
 800106a:	460b      	mov	r3, r1
 800106c:	009b      	lsls	r3, r3, #2
 800106e:	440b      	add	r3, r1
 8001070:	1ad1      	subs	r1, r2, r3
 8001072:	b2ca      	uxtb	r2, r1
 8001074:	4b1c      	ldr	r3, [pc, #112]	; (80010e8 <increase_led_counter+0xf0>)
 8001076:	701a      	strb	r2, [r3, #0]
		if(!increase_freq){
 8001078:	4b1b      	ldr	r3, [pc, #108]	; (80010e8 <increase_led_counter+0xf0>)
 800107a:	781b      	ldrb	r3, [r3, #0]
 800107c:	2b00      	cmp	r3, #0
 800107e:	d10f      	bne.n	80010a0 <increase_led_counter+0xa8>
			modify_led_counter = (modify_led_counter + 1) % 100;
 8001080:	4b17      	ldr	r3, [pc, #92]	; (80010e0 <increase_led_counter+0xe8>)
 8001082:	881b      	ldrh	r3, [r3, #0]
 8001084:	3301      	adds	r3, #1
 8001086:	4a17      	ldr	r2, [pc, #92]	; (80010e4 <increase_led_counter+0xec>)
 8001088:	fb82 1203 	smull	r1, r2, r2, r3
 800108c:	1151      	asrs	r1, r2, #5
 800108e:	17da      	asrs	r2, r3, #31
 8001090:	1a8a      	subs	r2, r1, r2
 8001092:	2164      	movs	r1, #100	; 0x64
 8001094:	fb01 f202 	mul.w	r2, r1, r2
 8001098:	1a9a      	subs	r2, r3, r2
 800109a:	b292      	uxth	r2, r2
 800109c:	4b10      	ldr	r3, [pc, #64]	; (80010e0 <increase_led_counter+0xe8>)
 800109e:	801a      	strh	r2, [r3, #0]
		}
	}

	// press button 3 to set
	if(is_button_press(2)){
 80010a0:	2002      	movs	r0, #2
 80010a2:	f7ff f8fd 	bl	80002a0 <is_button_press>
 80010a6:	4603      	mov	r3, r0
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d002      	beq.n	80010b2 <increase_led_counter+0xba>
		tempState2 = 1;
 80010ac:	4b10      	ldr	r3, [pc, #64]	; (80010f0 <increase_led_counter+0xf8>)
 80010ae:	2201      	movs	r2, #1
 80010b0:	701a      	strb	r2, [r3, #0]
	}
	if(tempState2 && !is_button_press(2)){
 80010b2:	4b0f      	ldr	r3, [pc, #60]	; (80010f0 <increase_led_counter+0xf8>)
 80010b4:	781b      	ldrb	r3, [r3, #0]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d00c      	beq.n	80010d4 <increase_led_counter+0xdc>
 80010ba:	2002      	movs	r0, #2
 80010bc:	f7ff f8f0 	bl	80002a0 <is_button_press>
 80010c0:	4603      	mov	r3, r0
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d106      	bne.n	80010d4 <increase_led_counter+0xdc>
		*modifed_led = modify_led_counter;
 80010c6:	4b06      	ldr	r3, [pc, #24]	; (80010e0 <increase_led_counter+0xe8>)
 80010c8:	881a      	ldrh	r2, [r3, #0]
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	801a      	strh	r2, [r3, #0]
		tempState2 = 0;
 80010ce:	4b08      	ldr	r3, [pc, #32]	; (80010f0 <increase_led_counter+0xf8>)
 80010d0:	2200      	movs	r2, #0
 80010d2:	701a      	strb	r2, [r3, #0]
	}

}
 80010d4:	bf00      	nop
 80010d6:	3708      	adds	r7, #8
 80010d8:	46bd      	mov	sp, r7
 80010da:	bd80      	pop	{r7, pc}
 80010dc:	200000bd 	.word	0x200000bd
 80010e0:	200000c0 	.word	0x200000c0
 80010e4:	51eb851f 	.word	0x51eb851f
 80010e8:	200000c2 	.word	0x200000c2
 80010ec:	66666667 	.word	0x66666667
 80010f0:	200000be 	.word	0x200000be

080010f4 <traffic_process>:

void traffic_process(void){
 80010f4:	b580      	push	{r7, lr}
 80010f6:	af00      	add	r7, sp, #0

	switch(trafficState){
 80010f8:	4ba9      	ldr	r3, [pc, #676]	; (80013a0 <traffic_process+0x2ac>)
 80010fa:	781b      	ldrb	r3, [r3, #0]
 80010fc:	2b05      	cmp	r3, #5
 80010fe:	f200 814c 	bhi.w	800139a <traffic_process+0x2a6>
 8001102:	a201      	add	r2, pc, #4	; (adr r2, 8001108 <traffic_process+0x14>)
 8001104:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001108:	08001161 	.word	0x08001161
 800110c:	08001121 	.word	0x08001121
 8001110:	0800117f 	.word	0x0800117f
 8001114:	080011cf 	.word	0x080011cf
 8001118:	080012f7 	.word	0x080012f7
 800111c:	08001265 	.word	0x08001265
	case ERROR_STATE:{
		// display if error come
		turnOnAllLed();
 8001120:	f7ff fb4c 	bl	80007bc <turnOnAllLed>
		test7seg();
 8001124:	f7ff fb62 	bl	80007ec <test7seg>

		if(is_button_press(0)){
 8001128:	2000      	movs	r0, #0
 800112a:	f7ff f8b9 	bl	80002a0 <is_button_press>
 800112e:	4603      	mov	r3, r0
 8001130:	2b00      	cmp	r3, #0
 8001132:	d002      	beq.n	800113a <traffic_process+0x46>
			tempState = 1;
 8001134:	4b9b      	ldr	r3, [pc, #620]	; (80013a4 <traffic_process+0x2b0>)
 8001136:	2201      	movs	r2, #1
 8001138:	701a      	strb	r2, [r3, #0]
		}
		if(tempState && !is_button_press(0)){
 800113a:	4b9a      	ldr	r3, [pc, #616]	; (80013a4 <traffic_process+0x2b0>)
 800113c:	781b      	ldrb	r3, [r3, #0]
 800113e:	2b00      	cmp	r3, #0
 8001140:	f000 8122 	beq.w	8001388 <traffic_process+0x294>
 8001144:	2000      	movs	r0, #0
 8001146:	f7ff f8ab 	bl	80002a0 <is_button_press>
 800114a:	4603      	mov	r3, r0
 800114c:	2b00      	cmp	r3, #0
 800114e:	f040 811b 	bne.w	8001388 <traffic_process+0x294>
			tempState = 0;
 8001152:	4b94      	ldr	r3, [pc, #592]	; (80013a4 <traffic_process+0x2b0>)
 8001154:	2200      	movs	r2, #0
 8001156:	701a      	strb	r2, [r3, #0]

			trafficState = INIT_STATE;
 8001158:	4b91      	ldr	r3, [pc, #580]	; (80013a0 <traffic_process+0x2ac>)
 800115a:	2200      	movs	r2, #0
 800115c:	701a      	strb	r2, [r3, #0]
		}

		break;
 800115e:	e113      	b.n	8001388 <traffic_process+0x294>
	}
	case INIT_STATE:{
		init_traffic_time();
 8001160:	f7ff fd62 	bl	8000c28 <init_traffic_time>

		if(check_error())
 8001164:	f7ff ff1c 	bl	8000fa0 <check_error>
 8001168:	4603      	mov	r3, r0
 800116a:	2b00      	cmp	r3, #0
 800116c:	d003      	beq.n	8001176 <traffic_process+0x82>
			trafficState = ERROR_STATE;
 800116e:	4b8c      	ldr	r3, [pc, #560]	; (80013a0 <traffic_process+0x2ac>)
 8001170:	2201      	movs	r2, #1
 8001172:	701a      	strb	r2, [r3, #0]
		else
			trafficState = AUTO_MODE;
		break;
 8001174:	e111      	b.n	800139a <traffic_process+0x2a6>
			trafficState = AUTO_MODE;
 8001176:	4b8a      	ldr	r3, [pc, #552]	; (80013a0 <traffic_process+0x2ac>)
 8001178:	2202      	movs	r2, #2
 800117a:	701a      	strb	r2, [r3, #0]
		break;
 800117c:	e10d      	b.n	800139a <traffic_process+0x2a6>
	}
	case AUTO_MODE:{
		if(timer3_flag){
 800117e:	4b8a      	ldr	r3, [pc, #552]	; (80013a8 <traffic_process+0x2b4>)
 8001180:	781b      	ldrb	r3, [r3, #0]
 8001182:	2b00      	cmp	r3, #0
 8001184:	d004      	beq.n	8001190 <traffic_process+0x9c>
			auto_mode_process();
 8001186:	f7ff fd7f 	bl	8000c88 <auto_mode_process>
			setTimer3(100);
 800118a:	2064      	movs	r0, #100	; 0x64
 800118c:	f7ff fc30 	bl	80009f0 <setTimer3>
		}

		if(is_button_press(0)){
 8001190:	2000      	movs	r0, #0
 8001192:	f7ff f885 	bl	80002a0 <is_button_press>
 8001196:	4603      	mov	r3, r0
 8001198:	2b00      	cmp	r3, #0
 800119a:	d002      	beq.n	80011a2 <traffic_process+0xae>
			tempState = 1;
 800119c:	4b81      	ldr	r3, [pc, #516]	; (80013a4 <traffic_process+0x2b0>)
 800119e:	2201      	movs	r2, #1
 80011a0:	701a      	strb	r2, [r3, #0]
		}
		if(tempState && !is_button_press(0)){
 80011a2:	4b80      	ldr	r3, [pc, #512]	; (80013a4 <traffic_process+0x2b0>)
 80011a4:	781b      	ldrb	r3, [r3, #0]
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	f000 80f0 	beq.w	800138c <traffic_process+0x298>
 80011ac:	2000      	movs	r0, #0
 80011ae:	f7ff f877 	bl	80002a0 <is_button_press>
 80011b2:	4603      	mov	r3, r0
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	f040 80e9 	bne.w	800138c <traffic_process+0x298>
			tempState = 0;
 80011ba:	4b7a      	ldr	r3, [pc, #488]	; (80013a4 <traffic_process+0x2b0>)
 80011bc:	2200      	movs	r2, #0
 80011be:	701a      	strb	r2, [r3, #0]
			modify_led_counter = 0;
 80011c0:	4b7a      	ldr	r3, [pc, #488]	; (80013ac <traffic_process+0x2b8>)
 80011c2:	2200      	movs	r2, #0
 80011c4:	801a      	strh	r2, [r3, #0]
			trafficState = SETTING_RED_MODE;
 80011c6:	4b76      	ldr	r3, [pc, #472]	; (80013a0 <traffic_process+0x2ac>)
 80011c8:	2203      	movs	r2, #3
 80011ca:	701a      	strb	r2, [r3, #0]
		}

		break;
 80011cc:	e0de      	b.n	800138c <traffic_process+0x298>
	}
	case SETTING_RED_MODE:{
		turnOffAllLed();
 80011ce:	f7ff fb01 	bl	80007d4 <turnOffAllLed>
		blinkRed();
 80011d2:	f7ff fb9d 	bl	8000910 <blinkRed>

		setLed7Seg(0, modify_led_counter / 10);
 80011d6:	4b75      	ldr	r3, [pc, #468]	; (80013ac <traffic_process+0x2b8>)
 80011d8:	881b      	ldrh	r3, [r3, #0]
 80011da:	4a75      	ldr	r2, [pc, #468]	; (80013b0 <traffic_process+0x2bc>)
 80011dc:	fba2 2303 	umull	r2, r3, r2, r3
 80011e0:	08db      	lsrs	r3, r3, #3
 80011e2:	b29b      	uxth	r3, r3
 80011e4:	b2db      	uxtb	r3, r3
 80011e6:	4619      	mov	r1, r3
 80011e8:	2000      	movs	r0, #0
 80011ea:	f7ff f88d 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, modify_led_counter % 10);
 80011ee:	4b6f      	ldr	r3, [pc, #444]	; (80013ac <traffic_process+0x2b8>)
 80011f0:	881a      	ldrh	r2, [r3, #0]
 80011f2:	4b6f      	ldr	r3, [pc, #444]	; (80013b0 <traffic_process+0x2bc>)
 80011f4:	fba3 1302 	umull	r1, r3, r3, r2
 80011f8:	08d9      	lsrs	r1, r3, #3
 80011fa:	460b      	mov	r3, r1
 80011fc:	009b      	lsls	r3, r3, #2
 80011fe:	440b      	add	r3, r1
 8001200:	005b      	lsls	r3, r3, #1
 8001202:	1ad3      	subs	r3, r2, r3
 8001204:	b29b      	uxth	r3, r3
 8001206:	b2db      	uxtb	r3, r3
 8001208:	4619      	mov	r1, r3
 800120a:	2001      	movs	r0, #1
 800120c:	f7ff f87c 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, 0);
 8001210:	2100      	movs	r1, #0
 8001212:	2002      	movs	r0, #2
 8001214:	f7ff f878 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, 1);
 8001218:	2101      	movs	r1, #1
 800121a:	2003      	movs	r0, #3
 800121c:	f7ff f874 	bl	8000308 <setLed7Seg>

		increase_led_counter(&init_red);
 8001220:	4864      	ldr	r0, [pc, #400]	; (80013b4 <traffic_process+0x2c0>)
 8001222:	f7ff fee9 	bl	8000ff8 <increase_led_counter>

		if(is_button_press(0)){
 8001226:	2000      	movs	r0, #0
 8001228:	f7ff f83a 	bl	80002a0 <is_button_press>
 800122c:	4603      	mov	r3, r0
 800122e:	2b00      	cmp	r3, #0
 8001230:	d002      	beq.n	8001238 <traffic_process+0x144>
			tempState = 1;
 8001232:	4b5c      	ldr	r3, [pc, #368]	; (80013a4 <traffic_process+0x2b0>)
 8001234:	2201      	movs	r2, #1
 8001236:	701a      	strb	r2, [r3, #0]
		}
		if(tempState && !is_button_press(0)){
 8001238:	4b5a      	ldr	r3, [pc, #360]	; (80013a4 <traffic_process+0x2b0>)
 800123a:	781b      	ldrb	r3, [r3, #0]
 800123c:	2b00      	cmp	r3, #0
 800123e:	f000 80a7 	beq.w	8001390 <traffic_process+0x29c>
 8001242:	2000      	movs	r0, #0
 8001244:	f7ff f82c 	bl	80002a0 <is_button_press>
 8001248:	4603      	mov	r3, r0
 800124a:	2b00      	cmp	r3, #0
 800124c:	f040 80a0 	bne.w	8001390 <traffic_process+0x29c>
			tempState = 0;
 8001250:	4b54      	ldr	r3, [pc, #336]	; (80013a4 <traffic_process+0x2b0>)
 8001252:	2200      	movs	r2, #0
 8001254:	701a      	strb	r2, [r3, #0]
			modify_led_counter = 0;
 8001256:	4b55      	ldr	r3, [pc, #340]	; (80013ac <traffic_process+0x2b8>)
 8001258:	2200      	movs	r2, #0
 800125a:	801a      	strh	r2, [r3, #0]
			trafficState = SETTING_GREEN_MODE;
 800125c:	4b50      	ldr	r3, [pc, #320]	; (80013a0 <traffic_process+0x2ac>)
 800125e:	2205      	movs	r2, #5
 8001260:	701a      	strb	r2, [r3, #0]
		}

		break;
 8001262:	e095      	b.n	8001390 <traffic_process+0x29c>
	}
	case SETTING_GREEN_MODE:{
		turnOffAllLed();
 8001264:	f7ff fab6 	bl	80007d4 <turnOffAllLed>
		blinkGreen();
 8001268:	f7ff fb7a 	bl	8000960 <blinkGreen>


		setLed7Seg(0, modify_led_counter / 10);
 800126c:	4b4f      	ldr	r3, [pc, #316]	; (80013ac <traffic_process+0x2b8>)
 800126e:	881b      	ldrh	r3, [r3, #0]
 8001270:	4a4f      	ldr	r2, [pc, #316]	; (80013b0 <traffic_process+0x2bc>)
 8001272:	fba2 2303 	umull	r2, r3, r2, r3
 8001276:	08db      	lsrs	r3, r3, #3
 8001278:	b29b      	uxth	r3, r3
 800127a:	b2db      	uxtb	r3, r3
 800127c:	4619      	mov	r1, r3
 800127e:	2000      	movs	r0, #0
 8001280:	f7ff f842 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, modify_led_counter % 10);
 8001284:	4b49      	ldr	r3, [pc, #292]	; (80013ac <traffic_process+0x2b8>)
 8001286:	881a      	ldrh	r2, [r3, #0]
 8001288:	4b49      	ldr	r3, [pc, #292]	; (80013b0 <traffic_process+0x2bc>)
 800128a:	fba3 1302 	umull	r1, r3, r3, r2
 800128e:	08d9      	lsrs	r1, r3, #3
 8001290:	460b      	mov	r3, r1
 8001292:	009b      	lsls	r3, r3, #2
 8001294:	440b      	add	r3, r1
 8001296:	005b      	lsls	r3, r3, #1
 8001298:	1ad3      	subs	r3, r2, r3
 800129a:	b29b      	uxth	r3, r3
 800129c:	b2db      	uxtb	r3, r3
 800129e:	4619      	mov	r1, r3
 80012a0:	2001      	movs	r0, #1
 80012a2:	f7ff f831 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, 0);
 80012a6:	2100      	movs	r1, #0
 80012a8:	2002      	movs	r0, #2
 80012aa:	f7ff f82d 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, 2);
 80012ae:	2102      	movs	r1, #2
 80012b0:	2003      	movs	r0, #3
 80012b2:	f7ff f829 	bl	8000308 <setLed7Seg>

		increase_led_counter(&init_green);
 80012b6:	4840      	ldr	r0, [pc, #256]	; (80013b8 <traffic_process+0x2c4>)
 80012b8:	f7ff fe9e 	bl	8000ff8 <increase_led_counter>

		if(is_button_press(0)){
 80012bc:	2000      	movs	r0, #0
 80012be:	f7fe ffef 	bl	80002a0 <is_button_press>
 80012c2:	4603      	mov	r3, r0
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	d002      	beq.n	80012ce <traffic_process+0x1da>
			tempState = 1;
 80012c8:	4b36      	ldr	r3, [pc, #216]	; (80013a4 <traffic_process+0x2b0>)
 80012ca:	2201      	movs	r2, #1
 80012cc:	701a      	strb	r2, [r3, #0]
		}
		if(tempState && !is_button_press(0)){
 80012ce:	4b35      	ldr	r3, [pc, #212]	; (80013a4 <traffic_process+0x2b0>)
 80012d0:	781b      	ldrb	r3, [r3, #0]
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d05e      	beq.n	8001394 <traffic_process+0x2a0>
 80012d6:	2000      	movs	r0, #0
 80012d8:	f7fe ffe2 	bl	80002a0 <is_button_press>
 80012dc:	4603      	mov	r3, r0
 80012de:	2b00      	cmp	r3, #0
 80012e0:	d158      	bne.n	8001394 <traffic_process+0x2a0>
			tempState = 0;
 80012e2:	4b30      	ldr	r3, [pc, #192]	; (80013a4 <traffic_process+0x2b0>)
 80012e4:	2200      	movs	r2, #0
 80012e6:	701a      	strb	r2, [r3, #0]
			modify_led_counter = 0;
 80012e8:	4b30      	ldr	r3, [pc, #192]	; (80013ac <traffic_process+0x2b8>)
 80012ea:	2200      	movs	r2, #0
 80012ec:	801a      	strh	r2, [r3, #0]
			trafficState = SETTING_YELLOW_MODE;
 80012ee:	4b2c      	ldr	r3, [pc, #176]	; (80013a0 <traffic_process+0x2ac>)
 80012f0:	2204      	movs	r2, #4
 80012f2:	701a      	strb	r2, [r3, #0]
		}
		break;
 80012f4:	e04e      	b.n	8001394 <traffic_process+0x2a0>
	}
	case SETTING_YELLOW_MODE:{
		turnOffAllLed();
 80012f6:	f7ff fa6d 	bl	80007d4 <turnOffAllLed>
		blinkYellow();
 80012fa:	f7ff fb1d 	bl	8000938 <blinkYellow>

		setLed7Seg(0, modify_led_counter / 10);
 80012fe:	4b2b      	ldr	r3, [pc, #172]	; (80013ac <traffic_process+0x2b8>)
 8001300:	881b      	ldrh	r3, [r3, #0]
 8001302:	4a2b      	ldr	r2, [pc, #172]	; (80013b0 <traffic_process+0x2bc>)
 8001304:	fba2 2303 	umull	r2, r3, r2, r3
 8001308:	08db      	lsrs	r3, r3, #3
 800130a:	b29b      	uxth	r3, r3
 800130c:	b2db      	uxtb	r3, r3
 800130e:	4619      	mov	r1, r3
 8001310:	2000      	movs	r0, #0
 8001312:	f7fe fff9 	bl	8000308 <setLed7Seg>
		setLed7Seg(1, modify_led_counter % 10);
 8001316:	4b25      	ldr	r3, [pc, #148]	; (80013ac <traffic_process+0x2b8>)
 8001318:	881a      	ldrh	r2, [r3, #0]
 800131a:	4b25      	ldr	r3, [pc, #148]	; (80013b0 <traffic_process+0x2bc>)
 800131c:	fba3 1302 	umull	r1, r3, r3, r2
 8001320:	08d9      	lsrs	r1, r3, #3
 8001322:	460b      	mov	r3, r1
 8001324:	009b      	lsls	r3, r3, #2
 8001326:	440b      	add	r3, r1
 8001328:	005b      	lsls	r3, r3, #1
 800132a:	1ad3      	subs	r3, r2, r3
 800132c:	b29b      	uxth	r3, r3
 800132e:	b2db      	uxtb	r3, r3
 8001330:	4619      	mov	r1, r3
 8001332:	2001      	movs	r0, #1
 8001334:	f7fe ffe8 	bl	8000308 <setLed7Seg>

		setLed7Seg(2, 0);
 8001338:	2100      	movs	r1, #0
 800133a:	2002      	movs	r0, #2
 800133c:	f7fe ffe4 	bl	8000308 <setLed7Seg>
		setLed7Seg(3, 3);
 8001340:	2103      	movs	r1, #3
 8001342:	2003      	movs	r0, #3
 8001344:	f7fe ffe0 	bl	8000308 <setLed7Seg>

		increase_led_counter(&init_yellow);
 8001348:	481c      	ldr	r0, [pc, #112]	; (80013bc <traffic_process+0x2c8>)
 800134a:	f7ff fe55 	bl	8000ff8 <increase_led_counter>

		if(is_button_press(0)){
 800134e:	2000      	movs	r0, #0
 8001350:	f7fe ffa6 	bl	80002a0 <is_button_press>
 8001354:	4603      	mov	r3, r0
 8001356:	2b00      	cmp	r3, #0
 8001358:	d002      	beq.n	8001360 <traffic_process+0x26c>
			tempState = 1;
 800135a:	4b12      	ldr	r3, [pc, #72]	; (80013a4 <traffic_process+0x2b0>)
 800135c:	2201      	movs	r2, #1
 800135e:	701a      	strb	r2, [r3, #0]
		}
		if(tempState && !is_button_press(0)){
 8001360:	4b10      	ldr	r3, [pc, #64]	; (80013a4 <traffic_process+0x2b0>)
 8001362:	781b      	ldrb	r3, [r3, #0]
 8001364:	2b00      	cmp	r3, #0
 8001366:	d017      	beq.n	8001398 <traffic_process+0x2a4>
 8001368:	2000      	movs	r0, #0
 800136a:	f7fe ff99 	bl	80002a0 <is_button_press>
 800136e:	4603      	mov	r3, r0
 8001370:	2b00      	cmp	r3, #0
 8001372:	d111      	bne.n	8001398 <traffic_process+0x2a4>
			tempState = 0;
 8001374:	4b0b      	ldr	r3, [pc, #44]	; (80013a4 <traffic_process+0x2b0>)
 8001376:	2200      	movs	r2, #0
 8001378:	701a      	strb	r2, [r3, #0]
			modify_led_counter = 0;
 800137a:	4b0c      	ldr	r3, [pc, #48]	; (80013ac <traffic_process+0x2b8>)
 800137c:	2200      	movs	r2, #0
 800137e:	801a      	strh	r2, [r3, #0]
			trafficState = INIT_STATE;
 8001380:	4b07      	ldr	r3, [pc, #28]	; (80013a0 <traffic_process+0x2ac>)
 8001382:	2200      	movs	r2, #0
 8001384:	701a      	strb	r2, [r3, #0]
		}

		break;
 8001386:	e007      	b.n	8001398 <traffic_process+0x2a4>
		break;
 8001388:	bf00      	nop
 800138a:	e006      	b.n	800139a <traffic_process+0x2a6>
		break;
 800138c:	bf00      	nop
 800138e:	e004      	b.n	800139a <traffic_process+0x2a6>
		break;
 8001390:	bf00      	nop
 8001392:	e002      	b.n	800139a <traffic_process+0x2a6>
		break;
 8001394:	bf00      	nop
 8001396:	e000      	b.n	800139a <traffic_process+0x2a6>
		break;
 8001398:	bf00      	nop
	}
	}
}
 800139a:	bf00      	nop
 800139c:	bd80      	pop	{r7, pc}
 800139e:	bf00      	nop
 80013a0:	200000c3 	.word	0x200000c3
 80013a4:	200000bc 	.word	0x200000bc
 80013a8:	20000096 	.word	0x20000096
 80013ac:	200000c0 	.word	0x200000c0
 80013b0:	cccccccd 	.word	0xcccccccd
 80013b4:	20000004 	.word	0x20000004
 80013b8:	20000008 	.word	0x20000008
 80013bc:	20000006 	.word	0x20000006

080013c0 <Reset_Handler>:
 80013c0:	f7ff fc1c 	bl	8000bfc <SystemInit>
 80013c4:	480b      	ldr	r0, [pc, #44]	; (80013f4 <LoopFillZerobss+0xe>)
 80013c6:	490c      	ldr	r1, [pc, #48]	; (80013f8 <LoopFillZerobss+0x12>)
 80013c8:	4a0c      	ldr	r2, [pc, #48]	; (80013fc <LoopFillZerobss+0x16>)
 80013ca:	2300      	movs	r3, #0
 80013cc:	e002      	b.n	80013d4 <LoopCopyDataInit>

080013ce <CopyDataInit>:
 80013ce:	58d4      	ldr	r4, [r2, r3]
 80013d0:	50c4      	str	r4, [r0, r3]
 80013d2:	3304      	adds	r3, #4

080013d4 <LoopCopyDataInit>:
 80013d4:	18c4      	adds	r4, r0, r3
 80013d6:	428c      	cmp	r4, r1
 80013d8:	d3f9      	bcc.n	80013ce <CopyDataInit>
 80013da:	4a09      	ldr	r2, [pc, #36]	; (8001400 <LoopFillZerobss+0x1a>)
 80013dc:	4c09      	ldr	r4, [pc, #36]	; (8001404 <LoopFillZerobss+0x1e>)
 80013de:	2300      	movs	r3, #0
 80013e0:	e001      	b.n	80013e6 <LoopFillZerobss>

080013e2 <FillZerobss>:
 80013e2:	6013      	str	r3, [r2, #0]
 80013e4:	3204      	adds	r2, #4

080013e6 <LoopFillZerobss>:
 80013e6:	42a2      	cmp	r2, r4
 80013e8:	d3fb      	bcc.n	80013e2 <FillZerobss>
 80013ea:	f001 fb29 	bl	8002a40 <__libc_init_array>
 80013ee:	f7ff f8cd 	bl	800058c <main>
 80013f2:	4770      	bx	lr
 80013f4:	20000000 	.word	0x20000000
 80013f8:	20000014 	.word	0x20000014
 80013fc:	08002ad8 	.word	0x08002ad8
 8001400:	20000014 	.word	0x20000014
 8001404:	200000cc 	.word	0x200000cc

08001408 <ADC1_2_IRQHandler>:
 8001408:	e7fe      	b.n	8001408 <ADC1_2_IRQHandler>
	...

0800140c <HAL_Init>:
 800140c:	b580      	push	{r7, lr}
 800140e:	af00      	add	r7, sp, #0
 8001410:	4b08      	ldr	r3, [pc, #32]	; (8001434 <HAL_Init+0x28>)
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4a07      	ldr	r2, [pc, #28]	; (8001434 <HAL_Init+0x28>)
 8001416:	f043 0310 	orr.w	r3, r3, #16
 800141a:	6013      	str	r3, [r2, #0]
 800141c:	2003      	movs	r0, #3
 800141e:	f000 f947 	bl	80016b0 <HAL_NVIC_SetPriorityGrouping>
 8001422:	200f      	movs	r0, #15
 8001424:	f000 f808 	bl	8001438 <HAL_InitTick>
 8001428:	f7ff fb60 	bl	8000aec <HAL_MspInit>
 800142c:	2300      	movs	r3, #0
 800142e:	4618      	mov	r0, r3
 8001430:	bd80      	pop	{r7, pc}
 8001432:	bf00      	nop
 8001434:	40022000 	.word	0x40022000

08001438 <HAL_InitTick>:
 8001438:	b580      	push	{r7, lr}
 800143a:	b082      	sub	sp, #8
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	4b12      	ldr	r3, [pc, #72]	; (800148c <HAL_InitTick+0x54>)
 8001442:	681a      	ldr	r2, [r3, #0]
 8001444:	4b12      	ldr	r3, [pc, #72]	; (8001490 <HAL_InitTick+0x58>)
 8001446:	781b      	ldrb	r3, [r3, #0]
 8001448:	4619      	mov	r1, r3
 800144a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800144e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001452:	fbb2 f3f3 	udiv	r3, r2, r3
 8001456:	4618      	mov	r0, r3
 8001458:	f000 f95f 	bl	800171a <HAL_SYSTICK_Config>
 800145c:	4603      	mov	r3, r0
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <HAL_InitTick+0x2e>
 8001462:	2301      	movs	r3, #1
 8001464:	e00e      	b.n	8001484 <HAL_InitTick+0x4c>
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	2b0f      	cmp	r3, #15
 800146a:	d80a      	bhi.n	8001482 <HAL_InitTick+0x4a>
 800146c:	2200      	movs	r2, #0
 800146e:	6879      	ldr	r1, [r7, #4]
 8001470:	f04f 30ff 	mov.w	r0, #4294967295
 8001474:	f000 f927 	bl	80016c6 <HAL_NVIC_SetPriority>
 8001478:	4a06      	ldr	r2, [pc, #24]	; (8001494 <HAL_InitTick+0x5c>)
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	6013      	str	r3, [r2, #0]
 800147e:	2300      	movs	r3, #0
 8001480:	e000      	b.n	8001484 <HAL_InitTick+0x4c>
 8001482:	2301      	movs	r3, #1
 8001484:	4618      	mov	r0, r3
 8001486:	3708      	adds	r7, #8
 8001488:	46bd      	mov	sp, r7
 800148a:	bd80      	pop	{r7, pc}
 800148c:	20000000 	.word	0x20000000
 8001490:	20000010 	.word	0x20000010
 8001494:	2000000c 	.word	0x2000000c

08001498 <HAL_IncTick>:
 8001498:	b480      	push	{r7}
 800149a:	af00      	add	r7, sp, #0
 800149c:	4b05      	ldr	r3, [pc, #20]	; (80014b4 <HAL_IncTick+0x1c>)
 800149e:	781b      	ldrb	r3, [r3, #0]
 80014a0:	461a      	mov	r2, r3
 80014a2:	4b05      	ldr	r3, [pc, #20]	; (80014b8 <HAL_IncTick+0x20>)
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	4413      	add	r3, r2
 80014a8:	4a03      	ldr	r2, [pc, #12]	; (80014b8 <HAL_IncTick+0x20>)
 80014aa:	6013      	str	r3, [r2, #0]
 80014ac:	bf00      	nop
 80014ae:	46bd      	mov	sp, r7
 80014b0:	bc80      	pop	{r7}
 80014b2:	4770      	bx	lr
 80014b4:	20000010 	.word	0x20000010
 80014b8:	200000c8 	.word	0x200000c8

080014bc <HAL_GetTick>:
 80014bc:	b480      	push	{r7}
 80014be:	af00      	add	r7, sp, #0
 80014c0:	4b02      	ldr	r3, [pc, #8]	; (80014cc <HAL_GetTick+0x10>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	4618      	mov	r0, r3
 80014c6:	46bd      	mov	sp, r7
 80014c8:	bc80      	pop	{r7}
 80014ca:	4770      	bx	lr
 80014cc:	200000c8 	.word	0x200000c8

080014d0 <HAL_Delay>:
 80014d0:	b580      	push	{r7, lr}
 80014d2:	b084      	sub	sp, #16
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	6078      	str	r0, [r7, #4]
 80014d8:	f7ff fff0 	bl	80014bc <HAL_GetTick>
 80014dc:	60b8      	str	r0, [r7, #8]
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	60fb      	str	r3, [r7, #12]
 80014e2:	68fb      	ldr	r3, [r7, #12]
 80014e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80014e8:	d005      	beq.n	80014f6 <HAL_Delay+0x26>
 80014ea:	4b0a      	ldr	r3, [pc, #40]	; (8001514 <HAL_Delay+0x44>)
 80014ec:	781b      	ldrb	r3, [r3, #0]
 80014ee:	461a      	mov	r2, r3
 80014f0:	68fb      	ldr	r3, [r7, #12]
 80014f2:	4413      	add	r3, r2
 80014f4:	60fb      	str	r3, [r7, #12]
 80014f6:	bf00      	nop
 80014f8:	f7ff ffe0 	bl	80014bc <HAL_GetTick>
 80014fc:	4602      	mov	r2, r0
 80014fe:	68bb      	ldr	r3, [r7, #8]
 8001500:	1ad3      	subs	r3, r2, r3
 8001502:	68fa      	ldr	r2, [r7, #12]
 8001504:	429a      	cmp	r2, r3
 8001506:	d8f7      	bhi.n	80014f8 <HAL_Delay+0x28>
 8001508:	bf00      	nop
 800150a:	bf00      	nop
 800150c:	3710      	adds	r7, #16
 800150e:	46bd      	mov	sp, r7
 8001510:	bd80      	pop	{r7, pc}
 8001512:	bf00      	nop
 8001514:	20000010 	.word	0x20000010

08001518 <__NVIC_SetPriorityGrouping>:
 8001518:	b480      	push	{r7}
 800151a:	b085      	sub	sp, #20
 800151c:	af00      	add	r7, sp, #0
 800151e:	6078      	str	r0, [r7, #4]
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	f003 0307 	and.w	r3, r3, #7
 8001526:	60fb      	str	r3, [r7, #12]
 8001528:	4b0c      	ldr	r3, [pc, #48]	; (800155c <__NVIC_SetPriorityGrouping+0x44>)
 800152a:	68db      	ldr	r3, [r3, #12]
 800152c:	60bb      	str	r3, [r7, #8]
 800152e:	68ba      	ldr	r2, [r7, #8]
 8001530:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001534:	4013      	ands	r3, r2
 8001536:	60bb      	str	r3, [r7, #8]
 8001538:	68fb      	ldr	r3, [r7, #12]
 800153a:	021a      	lsls	r2, r3, #8
 800153c:	68bb      	ldr	r3, [r7, #8]
 800153e:	4313      	orrs	r3, r2
 8001540:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001544:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001548:	60bb      	str	r3, [r7, #8]
 800154a:	4a04      	ldr	r2, [pc, #16]	; (800155c <__NVIC_SetPriorityGrouping+0x44>)
 800154c:	68bb      	ldr	r3, [r7, #8]
 800154e:	60d3      	str	r3, [r2, #12]
 8001550:	bf00      	nop
 8001552:	3714      	adds	r7, #20
 8001554:	46bd      	mov	sp, r7
 8001556:	bc80      	pop	{r7}
 8001558:	4770      	bx	lr
 800155a:	bf00      	nop
 800155c:	e000ed00 	.word	0xe000ed00

08001560 <__NVIC_GetPriorityGrouping>:
 8001560:	b480      	push	{r7}
 8001562:	af00      	add	r7, sp, #0
 8001564:	4b04      	ldr	r3, [pc, #16]	; (8001578 <__NVIC_GetPriorityGrouping+0x18>)
 8001566:	68db      	ldr	r3, [r3, #12]
 8001568:	0a1b      	lsrs	r3, r3, #8
 800156a:	f003 0307 	and.w	r3, r3, #7
 800156e:	4618      	mov	r0, r3
 8001570:	46bd      	mov	sp, r7
 8001572:	bc80      	pop	{r7}
 8001574:	4770      	bx	lr
 8001576:	bf00      	nop
 8001578:	e000ed00 	.word	0xe000ed00

0800157c <__NVIC_EnableIRQ>:
 800157c:	b480      	push	{r7}
 800157e:	b083      	sub	sp, #12
 8001580:	af00      	add	r7, sp, #0
 8001582:	4603      	mov	r3, r0
 8001584:	71fb      	strb	r3, [r7, #7]
 8001586:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800158a:	2b00      	cmp	r3, #0
 800158c:	db0b      	blt.n	80015a6 <__NVIC_EnableIRQ+0x2a>
 800158e:	79fb      	ldrb	r3, [r7, #7]
 8001590:	f003 021f 	and.w	r2, r3, #31
 8001594:	4906      	ldr	r1, [pc, #24]	; (80015b0 <__NVIC_EnableIRQ+0x34>)
 8001596:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800159a:	095b      	lsrs	r3, r3, #5
 800159c:	2001      	movs	r0, #1
 800159e:	fa00 f202 	lsl.w	r2, r0, r2
 80015a2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015a6:	bf00      	nop
 80015a8:	370c      	adds	r7, #12
 80015aa:	46bd      	mov	sp, r7
 80015ac:	bc80      	pop	{r7}
 80015ae:	4770      	bx	lr
 80015b0:	e000e100 	.word	0xe000e100

080015b4 <__NVIC_SetPriority>:
 80015b4:	b480      	push	{r7}
 80015b6:	b083      	sub	sp, #12
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	4603      	mov	r3, r0
 80015bc:	6039      	str	r1, [r7, #0]
 80015be:	71fb      	strb	r3, [r7, #7]
 80015c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	db0a      	blt.n	80015de <__NVIC_SetPriority+0x2a>
 80015c8:	683b      	ldr	r3, [r7, #0]
 80015ca:	b2da      	uxtb	r2, r3
 80015cc:	490c      	ldr	r1, [pc, #48]	; (8001600 <__NVIC_SetPriority+0x4c>)
 80015ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015d2:	0112      	lsls	r2, r2, #4
 80015d4:	b2d2      	uxtb	r2, r2
 80015d6:	440b      	add	r3, r1
 80015d8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80015dc:	e00a      	b.n	80015f4 <__NVIC_SetPriority+0x40>
 80015de:	683b      	ldr	r3, [r7, #0]
 80015e0:	b2da      	uxtb	r2, r3
 80015e2:	4908      	ldr	r1, [pc, #32]	; (8001604 <__NVIC_SetPriority+0x50>)
 80015e4:	79fb      	ldrb	r3, [r7, #7]
 80015e6:	f003 030f 	and.w	r3, r3, #15
 80015ea:	3b04      	subs	r3, #4
 80015ec:	0112      	lsls	r2, r2, #4
 80015ee:	b2d2      	uxtb	r2, r2
 80015f0:	440b      	add	r3, r1
 80015f2:	761a      	strb	r2, [r3, #24]
 80015f4:	bf00      	nop
 80015f6:	370c      	adds	r7, #12
 80015f8:	46bd      	mov	sp, r7
 80015fa:	bc80      	pop	{r7}
 80015fc:	4770      	bx	lr
 80015fe:	bf00      	nop
 8001600:	e000e100 	.word	0xe000e100
 8001604:	e000ed00 	.word	0xe000ed00

08001608 <NVIC_EncodePriority>:
 8001608:	b480      	push	{r7}
 800160a:	b089      	sub	sp, #36	; 0x24
 800160c:	af00      	add	r7, sp, #0
 800160e:	60f8      	str	r0, [r7, #12]
 8001610:	60b9      	str	r1, [r7, #8]
 8001612:	607a      	str	r2, [r7, #4]
 8001614:	68fb      	ldr	r3, [r7, #12]
 8001616:	f003 0307 	and.w	r3, r3, #7
 800161a:	61fb      	str	r3, [r7, #28]
 800161c:	69fb      	ldr	r3, [r7, #28]
 800161e:	f1c3 0307 	rsb	r3, r3, #7
 8001622:	2b04      	cmp	r3, #4
 8001624:	bf28      	it	cs
 8001626:	2304      	movcs	r3, #4
 8001628:	61bb      	str	r3, [r7, #24]
 800162a:	69fb      	ldr	r3, [r7, #28]
 800162c:	3304      	adds	r3, #4
 800162e:	2b06      	cmp	r3, #6
 8001630:	d902      	bls.n	8001638 <NVIC_EncodePriority+0x30>
 8001632:	69fb      	ldr	r3, [r7, #28]
 8001634:	3b03      	subs	r3, #3
 8001636:	e000      	b.n	800163a <NVIC_EncodePriority+0x32>
 8001638:	2300      	movs	r3, #0
 800163a:	617b      	str	r3, [r7, #20]
 800163c:	f04f 32ff 	mov.w	r2, #4294967295
 8001640:	69bb      	ldr	r3, [r7, #24]
 8001642:	fa02 f303 	lsl.w	r3, r2, r3
 8001646:	43da      	mvns	r2, r3
 8001648:	68bb      	ldr	r3, [r7, #8]
 800164a:	401a      	ands	r2, r3
 800164c:	697b      	ldr	r3, [r7, #20]
 800164e:	409a      	lsls	r2, r3
 8001650:	f04f 31ff 	mov.w	r1, #4294967295
 8001654:	697b      	ldr	r3, [r7, #20]
 8001656:	fa01 f303 	lsl.w	r3, r1, r3
 800165a:	43d9      	mvns	r1, r3
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	400b      	ands	r3, r1
 8001660:	4313      	orrs	r3, r2
 8001662:	4618      	mov	r0, r3
 8001664:	3724      	adds	r7, #36	; 0x24
 8001666:	46bd      	mov	sp, r7
 8001668:	bc80      	pop	{r7}
 800166a:	4770      	bx	lr

0800166c <SysTick_Config>:
 800166c:	b580      	push	{r7, lr}
 800166e:	b082      	sub	sp, #8
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	3b01      	subs	r3, #1
 8001678:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800167c:	d301      	bcc.n	8001682 <SysTick_Config+0x16>
 800167e:	2301      	movs	r3, #1
 8001680:	e00f      	b.n	80016a2 <SysTick_Config+0x36>
 8001682:	4a0a      	ldr	r2, [pc, #40]	; (80016ac <SysTick_Config+0x40>)
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	3b01      	subs	r3, #1
 8001688:	6053      	str	r3, [r2, #4]
 800168a:	210f      	movs	r1, #15
 800168c:	f04f 30ff 	mov.w	r0, #4294967295
 8001690:	f7ff ff90 	bl	80015b4 <__NVIC_SetPriority>
 8001694:	4b05      	ldr	r3, [pc, #20]	; (80016ac <SysTick_Config+0x40>)
 8001696:	2200      	movs	r2, #0
 8001698:	609a      	str	r2, [r3, #8]
 800169a:	4b04      	ldr	r3, [pc, #16]	; (80016ac <SysTick_Config+0x40>)
 800169c:	2207      	movs	r2, #7
 800169e:	601a      	str	r2, [r3, #0]
 80016a0:	2300      	movs	r3, #0
 80016a2:	4618      	mov	r0, r3
 80016a4:	3708      	adds	r7, #8
 80016a6:	46bd      	mov	sp, r7
 80016a8:	bd80      	pop	{r7, pc}
 80016aa:	bf00      	nop
 80016ac:	e000e010 	.word	0xe000e010

080016b0 <HAL_NVIC_SetPriorityGrouping>:
 80016b0:	b580      	push	{r7, lr}
 80016b2:	b082      	sub	sp, #8
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
 80016b8:	6878      	ldr	r0, [r7, #4]
 80016ba:	f7ff ff2d 	bl	8001518 <__NVIC_SetPriorityGrouping>
 80016be:	bf00      	nop
 80016c0:	3708      	adds	r7, #8
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bd80      	pop	{r7, pc}

080016c6 <HAL_NVIC_SetPriority>:
 80016c6:	b580      	push	{r7, lr}
 80016c8:	b086      	sub	sp, #24
 80016ca:	af00      	add	r7, sp, #0
 80016cc:	4603      	mov	r3, r0
 80016ce:	60b9      	str	r1, [r7, #8]
 80016d0:	607a      	str	r2, [r7, #4]
 80016d2:	73fb      	strb	r3, [r7, #15]
 80016d4:	2300      	movs	r3, #0
 80016d6:	617b      	str	r3, [r7, #20]
 80016d8:	f7ff ff42 	bl	8001560 <__NVIC_GetPriorityGrouping>
 80016dc:	6178      	str	r0, [r7, #20]
 80016de:	687a      	ldr	r2, [r7, #4]
 80016e0:	68b9      	ldr	r1, [r7, #8]
 80016e2:	6978      	ldr	r0, [r7, #20]
 80016e4:	f7ff ff90 	bl	8001608 <NVIC_EncodePriority>
 80016e8:	4602      	mov	r2, r0
 80016ea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80016ee:	4611      	mov	r1, r2
 80016f0:	4618      	mov	r0, r3
 80016f2:	f7ff ff5f 	bl	80015b4 <__NVIC_SetPriority>
 80016f6:	bf00      	nop
 80016f8:	3718      	adds	r7, #24
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bd80      	pop	{r7, pc}

080016fe <HAL_NVIC_EnableIRQ>:
 80016fe:	b580      	push	{r7, lr}
 8001700:	b082      	sub	sp, #8
 8001702:	af00      	add	r7, sp, #0
 8001704:	4603      	mov	r3, r0
 8001706:	71fb      	strb	r3, [r7, #7]
 8001708:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800170c:	4618      	mov	r0, r3
 800170e:	f7ff ff35 	bl	800157c <__NVIC_EnableIRQ>
 8001712:	bf00      	nop
 8001714:	3708      	adds	r7, #8
 8001716:	46bd      	mov	sp, r7
 8001718:	bd80      	pop	{r7, pc}

0800171a <HAL_SYSTICK_Config>:
 800171a:	b580      	push	{r7, lr}
 800171c:	b082      	sub	sp, #8
 800171e:	af00      	add	r7, sp, #0
 8001720:	6078      	str	r0, [r7, #4]
 8001722:	6878      	ldr	r0, [r7, #4]
 8001724:	f7ff ffa2 	bl	800166c <SysTick_Config>
 8001728:	4603      	mov	r3, r0
 800172a:	4618      	mov	r0, r3
 800172c:	3708      	adds	r7, #8
 800172e:	46bd      	mov	sp, r7
 8001730:	bd80      	pop	{r7, pc}
	...

08001734 <HAL_GPIO_Init>:
 8001734:	b480      	push	{r7}
 8001736:	b08b      	sub	sp, #44	; 0x2c
 8001738:	af00      	add	r7, sp, #0
 800173a:	6078      	str	r0, [r7, #4]
 800173c:	6039      	str	r1, [r7, #0]
 800173e:	2300      	movs	r3, #0
 8001740:	627b      	str	r3, [r7, #36]	; 0x24
 8001742:	2300      	movs	r3, #0
 8001744:	623b      	str	r3, [r7, #32]
 8001746:	e161      	b.n	8001a0c <HAL_GPIO_Init+0x2d8>
 8001748:	2201      	movs	r2, #1
 800174a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800174c:	fa02 f303 	lsl.w	r3, r2, r3
 8001750:	61fb      	str	r3, [r7, #28]
 8001752:	683b      	ldr	r3, [r7, #0]
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	69fa      	ldr	r2, [r7, #28]
 8001758:	4013      	ands	r3, r2
 800175a:	61bb      	str	r3, [r7, #24]
 800175c:	69ba      	ldr	r2, [r7, #24]
 800175e:	69fb      	ldr	r3, [r7, #28]
 8001760:	429a      	cmp	r2, r3
 8001762:	f040 8150 	bne.w	8001a06 <HAL_GPIO_Init+0x2d2>
 8001766:	683b      	ldr	r3, [r7, #0]
 8001768:	685b      	ldr	r3, [r3, #4]
 800176a:	4a97      	ldr	r2, [pc, #604]	; (80019c8 <HAL_GPIO_Init+0x294>)
 800176c:	4293      	cmp	r3, r2
 800176e:	d05e      	beq.n	800182e <HAL_GPIO_Init+0xfa>
 8001770:	4a95      	ldr	r2, [pc, #596]	; (80019c8 <HAL_GPIO_Init+0x294>)
 8001772:	4293      	cmp	r3, r2
 8001774:	d875      	bhi.n	8001862 <HAL_GPIO_Init+0x12e>
 8001776:	4a95      	ldr	r2, [pc, #596]	; (80019cc <HAL_GPIO_Init+0x298>)
 8001778:	4293      	cmp	r3, r2
 800177a:	d058      	beq.n	800182e <HAL_GPIO_Init+0xfa>
 800177c:	4a93      	ldr	r2, [pc, #588]	; (80019cc <HAL_GPIO_Init+0x298>)
 800177e:	4293      	cmp	r3, r2
 8001780:	d86f      	bhi.n	8001862 <HAL_GPIO_Init+0x12e>
 8001782:	4a93      	ldr	r2, [pc, #588]	; (80019d0 <HAL_GPIO_Init+0x29c>)
 8001784:	4293      	cmp	r3, r2
 8001786:	d052      	beq.n	800182e <HAL_GPIO_Init+0xfa>
 8001788:	4a91      	ldr	r2, [pc, #580]	; (80019d0 <HAL_GPIO_Init+0x29c>)
 800178a:	4293      	cmp	r3, r2
 800178c:	d869      	bhi.n	8001862 <HAL_GPIO_Init+0x12e>
 800178e:	4a91      	ldr	r2, [pc, #580]	; (80019d4 <HAL_GPIO_Init+0x2a0>)
 8001790:	4293      	cmp	r3, r2
 8001792:	d04c      	beq.n	800182e <HAL_GPIO_Init+0xfa>
 8001794:	4a8f      	ldr	r2, [pc, #572]	; (80019d4 <HAL_GPIO_Init+0x2a0>)
 8001796:	4293      	cmp	r3, r2
 8001798:	d863      	bhi.n	8001862 <HAL_GPIO_Init+0x12e>
 800179a:	4a8f      	ldr	r2, [pc, #572]	; (80019d8 <HAL_GPIO_Init+0x2a4>)
 800179c:	4293      	cmp	r3, r2
 800179e:	d046      	beq.n	800182e <HAL_GPIO_Init+0xfa>
 80017a0:	4a8d      	ldr	r2, [pc, #564]	; (80019d8 <HAL_GPIO_Init+0x2a4>)
 80017a2:	4293      	cmp	r3, r2
 80017a4:	d85d      	bhi.n	8001862 <HAL_GPIO_Init+0x12e>
 80017a6:	2b12      	cmp	r3, #18
 80017a8:	d82a      	bhi.n	8001800 <HAL_GPIO_Init+0xcc>
 80017aa:	2b12      	cmp	r3, #18
 80017ac:	d859      	bhi.n	8001862 <HAL_GPIO_Init+0x12e>
 80017ae:	a201      	add	r2, pc, #4	; (adr r2, 80017b4 <HAL_GPIO_Init+0x80>)
 80017b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80017b4:	0800182f 	.word	0x0800182f
 80017b8:	08001809 	.word	0x08001809
 80017bc:	0800181b 	.word	0x0800181b
 80017c0:	0800185d 	.word	0x0800185d
 80017c4:	08001863 	.word	0x08001863
 80017c8:	08001863 	.word	0x08001863
 80017cc:	08001863 	.word	0x08001863
 80017d0:	08001863 	.word	0x08001863
 80017d4:	08001863 	.word	0x08001863
 80017d8:	08001863 	.word	0x08001863
 80017dc:	08001863 	.word	0x08001863
 80017e0:	08001863 	.word	0x08001863
 80017e4:	08001863 	.word	0x08001863
 80017e8:	08001863 	.word	0x08001863
 80017ec:	08001863 	.word	0x08001863
 80017f0:	08001863 	.word	0x08001863
 80017f4:	08001863 	.word	0x08001863
 80017f8:	08001811 	.word	0x08001811
 80017fc:	08001825 	.word	0x08001825
 8001800:	4a76      	ldr	r2, [pc, #472]	; (80019dc <HAL_GPIO_Init+0x2a8>)
 8001802:	4293      	cmp	r3, r2
 8001804:	d013      	beq.n	800182e <HAL_GPIO_Init+0xfa>
 8001806:	e02c      	b.n	8001862 <HAL_GPIO_Init+0x12e>
 8001808:	683b      	ldr	r3, [r7, #0]
 800180a:	68db      	ldr	r3, [r3, #12]
 800180c:	623b      	str	r3, [r7, #32]
 800180e:	e029      	b.n	8001864 <HAL_GPIO_Init+0x130>
 8001810:	683b      	ldr	r3, [r7, #0]
 8001812:	68db      	ldr	r3, [r3, #12]
 8001814:	3304      	adds	r3, #4
 8001816:	623b      	str	r3, [r7, #32]
 8001818:	e024      	b.n	8001864 <HAL_GPIO_Init+0x130>
 800181a:	683b      	ldr	r3, [r7, #0]
 800181c:	68db      	ldr	r3, [r3, #12]
 800181e:	3308      	adds	r3, #8
 8001820:	623b      	str	r3, [r7, #32]
 8001822:	e01f      	b.n	8001864 <HAL_GPIO_Init+0x130>
 8001824:	683b      	ldr	r3, [r7, #0]
 8001826:	68db      	ldr	r3, [r3, #12]
 8001828:	330c      	adds	r3, #12
 800182a:	623b      	str	r3, [r7, #32]
 800182c:	e01a      	b.n	8001864 <HAL_GPIO_Init+0x130>
 800182e:	683b      	ldr	r3, [r7, #0]
 8001830:	689b      	ldr	r3, [r3, #8]
 8001832:	2b00      	cmp	r3, #0
 8001834:	d102      	bne.n	800183c <HAL_GPIO_Init+0x108>
 8001836:	2304      	movs	r3, #4
 8001838:	623b      	str	r3, [r7, #32]
 800183a:	e013      	b.n	8001864 <HAL_GPIO_Init+0x130>
 800183c:	683b      	ldr	r3, [r7, #0]
 800183e:	689b      	ldr	r3, [r3, #8]
 8001840:	2b01      	cmp	r3, #1
 8001842:	d105      	bne.n	8001850 <HAL_GPIO_Init+0x11c>
 8001844:	2308      	movs	r3, #8
 8001846:	623b      	str	r3, [r7, #32]
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	69fa      	ldr	r2, [r7, #28]
 800184c:	611a      	str	r2, [r3, #16]
 800184e:	e009      	b.n	8001864 <HAL_GPIO_Init+0x130>
 8001850:	2308      	movs	r3, #8
 8001852:	623b      	str	r3, [r7, #32]
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	69fa      	ldr	r2, [r7, #28]
 8001858:	615a      	str	r2, [r3, #20]
 800185a:	e003      	b.n	8001864 <HAL_GPIO_Init+0x130>
 800185c:	2300      	movs	r3, #0
 800185e:	623b      	str	r3, [r7, #32]
 8001860:	e000      	b.n	8001864 <HAL_GPIO_Init+0x130>
 8001862:	bf00      	nop
 8001864:	69bb      	ldr	r3, [r7, #24]
 8001866:	2bff      	cmp	r3, #255	; 0xff
 8001868:	d801      	bhi.n	800186e <HAL_GPIO_Init+0x13a>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	e001      	b.n	8001872 <HAL_GPIO_Init+0x13e>
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	3304      	adds	r3, #4
 8001872:	617b      	str	r3, [r7, #20]
 8001874:	69bb      	ldr	r3, [r7, #24]
 8001876:	2bff      	cmp	r3, #255	; 0xff
 8001878:	d802      	bhi.n	8001880 <HAL_GPIO_Init+0x14c>
 800187a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800187c:	009b      	lsls	r3, r3, #2
 800187e:	e002      	b.n	8001886 <HAL_GPIO_Init+0x152>
 8001880:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001882:	3b08      	subs	r3, #8
 8001884:	009b      	lsls	r3, r3, #2
 8001886:	613b      	str	r3, [r7, #16]
 8001888:	697b      	ldr	r3, [r7, #20]
 800188a:	681a      	ldr	r2, [r3, #0]
 800188c:	210f      	movs	r1, #15
 800188e:	693b      	ldr	r3, [r7, #16]
 8001890:	fa01 f303 	lsl.w	r3, r1, r3
 8001894:	43db      	mvns	r3, r3
 8001896:	401a      	ands	r2, r3
 8001898:	6a39      	ldr	r1, [r7, #32]
 800189a:	693b      	ldr	r3, [r7, #16]
 800189c:	fa01 f303 	lsl.w	r3, r1, r3
 80018a0:	431a      	orrs	r2, r3
 80018a2:	697b      	ldr	r3, [r7, #20]
 80018a4:	601a      	str	r2, [r3, #0]
 80018a6:	683b      	ldr	r3, [r7, #0]
 80018a8:	685b      	ldr	r3, [r3, #4]
 80018aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	f000 80a9 	beq.w	8001a06 <HAL_GPIO_Init+0x2d2>
 80018b4:	4b4a      	ldr	r3, [pc, #296]	; (80019e0 <HAL_GPIO_Init+0x2ac>)
 80018b6:	699b      	ldr	r3, [r3, #24]
 80018b8:	4a49      	ldr	r2, [pc, #292]	; (80019e0 <HAL_GPIO_Init+0x2ac>)
 80018ba:	f043 0301 	orr.w	r3, r3, #1
 80018be:	6193      	str	r3, [r2, #24]
 80018c0:	4b47      	ldr	r3, [pc, #284]	; (80019e0 <HAL_GPIO_Init+0x2ac>)
 80018c2:	699b      	ldr	r3, [r3, #24]
 80018c4:	f003 0301 	and.w	r3, r3, #1
 80018c8:	60bb      	str	r3, [r7, #8]
 80018ca:	68bb      	ldr	r3, [r7, #8]
 80018cc:	4a45      	ldr	r2, [pc, #276]	; (80019e4 <HAL_GPIO_Init+0x2b0>)
 80018ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018d0:	089b      	lsrs	r3, r3, #2
 80018d2:	3302      	adds	r3, #2
 80018d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80018d8:	60fb      	str	r3, [r7, #12]
 80018da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018dc:	f003 0303 	and.w	r3, r3, #3
 80018e0:	009b      	lsls	r3, r3, #2
 80018e2:	220f      	movs	r2, #15
 80018e4:	fa02 f303 	lsl.w	r3, r2, r3
 80018e8:	43db      	mvns	r3, r3
 80018ea:	68fa      	ldr	r2, [r7, #12]
 80018ec:	4013      	ands	r3, r2
 80018ee:	60fb      	str	r3, [r7, #12]
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	4a3d      	ldr	r2, [pc, #244]	; (80019e8 <HAL_GPIO_Init+0x2b4>)
 80018f4:	4293      	cmp	r3, r2
 80018f6:	d00d      	beq.n	8001914 <HAL_GPIO_Init+0x1e0>
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	4a3c      	ldr	r2, [pc, #240]	; (80019ec <HAL_GPIO_Init+0x2b8>)
 80018fc:	4293      	cmp	r3, r2
 80018fe:	d007      	beq.n	8001910 <HAL_GPIO_Init+0x1dc>
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	4a3b      	ldr	r2, [pc, #236]	; (80019f0 <HAL_GPIO_Init+0x2bc>)
 8001904:	4293      	cmp	r3, r2
 8001906:	d101      	bne.n	800190c <HAL_GPIO_Init+0x1d8>
 8001908:	2302      	movs	r3, #2
 800190a:	e004      	b.n	8001916 <HAL_GPIO_Init+0x1e2>
 800190c:	2303      	movs	r3, #3
 800190e:	e002      	b.n	8001916 <HAL_GPIO_Init+0x1e2>
 8001910:	2301      	movs	r3, #1
 8001912:	e000      	b.n	8001916 <HAL_GPIO_Init+0x1e2>
 8001914:	2300      	movs	r3, #0
 8001916:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001918:	f002 0203 	and.w	r2, r2, #3
 800191c:	0092      	lsls	r2, r2, #2
 800191e:	4093      	lsls	r3, r2
 8001920:	68fa      	ldr	r2, [r7, #12]
 8001922:	4313      	orrs	r3, r2
 8001924:	60fb      	str	r3, [r7, #12]
 8001926:	492f      	ldr	r1, [pc, #188]	; (80019e4 <HAL_GPIO_Init+0x2b0>)
 8001928:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800192a:	089b      	lsrs	r3, r3, #2
 800192c:	3302      	adds	r3, #2
 800192e:	68fa      	ldr	r2, [r7, #12]
 8001930:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001934:	683b      	ldr	r3, [r7, #0]
 8001936:	685b      	ldr	r3, [r3, #4]
 8001938:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800193c:	2b00      	cmp	r3, #0
 800193e:	d006      	beq.n	800194e <HAL_GPIO_Init+0x21a>
 8001940:	4b2c      	ldr	r3, [pc, #176]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001942:	689a      	ldr	r2, [r3, #8]
 8001944:	492b      	ldr	r1, [pc, #172]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001946:	69bb      	ldr	r3, [r7, #24]
 8001948:	4313      	orrs	r3, r2
 800194a:	608b      	str	r3, [r1, #8]
 800194c:	e006      	b.n	800195c <HAL_GPIO_Init+0x228>
 800194e:	4b29      	ldr	r3, [pc, #164]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001950:	689a      	ldr	r2, [r3, #8]
 8001952:	69bb      	ldr	r3, [r7, #24]
 8001954:	43db      	mvns	r3, r3
 8001956:	4927      	ldr	r1, [pc, #156]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001958:	4013      	ands	r3, r2
 800195a:	608b      	str	r3, [r1, #8]
 800195c:	683b      	ldr	r3, [r7, #0]
 800195e:	685b      	ldr	r3, [r3, #4]
 8001960:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001964:	2b00      	cmp	r3, #0
 8001966:	d006      	beq.n	8001976 <HAL_GPIO_Init+0x242>
 8001968:	4b22      	ldr	r3, [pc, #136]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 800196a:	68da      	ldr	r2, [r3, #12]
 800196c:	4921      	ldr	r1, [pc, #132]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 800196e:	69bb      	ldr	r3, [r7, #24]
 8001970:	4313      	orrs	r3, r2
 8001972:	60cb      	str	r3, [r1, #12]
 8001974:	e006      	b.n	8001984 <HAL_GPIO_Init+0x250>
 8001976:	4b1f      	ldr	r3, [pc, #124]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001978:	68da      	ldr	r2, [r3, #12]
 800197a:	69bb      	ldr	r3, [r7, #24]
 800197c:	43db      	mvns	r3, r3
 800197e:	491d      	ldr	r1, [pc, #116]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001980:	4013      	ands	r3, r2
 8001982:	60cb      	str	r3, [r1, #12]
 8001984:	683b      	ldr	r3, [r7, #0]
 8001986:	685b      	ldr	r3, [r3, #4]
 8001988:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800198c:	2b00      	cmp	r3, #0
 800198e:	d006      	beq.n	800199e <HAL_GPIO_Init+0x26a>
 8001990:	4b18      	ldr	r3, [pc, #96]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001992:	685a      	ldr	r2, [r3, #4]
 8001994:	4917      	ldr	r1, [pc, #92]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 8001996:	69bb      	ldr	r3, [r7, #24]
 8001998:	4313      	orrs	r3, r2
 800199a:	604b      	str	r3, [r1, #4]
 800199c:	e006      	b.n	80019ac <HAL_GPIO_Init+0x278>
 800199e:	4b15      	ldr	r3, [pc, #84]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 80019a0:	685a      	ldr	r2, [r3, #4]
 80019a2:	69bb      	ldr	r3, [r7, #24]
 80019a4:	43db      	mvns	r3, r3
 80019a6:	4913      	ldr	r1, [pc, #76]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 80019a8:	4013      	ands	r3, r2
 80019aa:	604b      	str	r3, [r1, #4]
 80019ac:	683b      	ldr	r3, [r7, #0]
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019b4:	2b00      	cmp	r3, #0
 80019b6:	d01f      	beq.n	80019f8 <HAL_GPIO_Init+0x2c4>
 80019b8:	4b0e      	ldr	r3, [pc, #56]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 80019ba:	681a      	ldr	r2, [r3, #0]
 80019bc:	490d      	ldr	r1, [pc, #52]	; (80019f4 <HAL_GPIO_Init+0x2c0>)
 80019be:	69bb      	ldr	r3, [r7, #24]
 80019c0:	4313      	orrs	r3, r2
 80019c2:	600b      	str	r3, [r1, #0]
 80019c4:	e01f      	b.n	8001a06 <HAL_GPIO_Init+0x2d2>
 80019c6:	bf00      	nop
 80019c8:	10320000 	.word	0x10320000
 80019cc:	10310000 	.word	0x10310000
 80019d0:	10220000 	.word	0x10220000
 80019d4:	10210000 	.word	0x10210000
 80019d8:	10120000 	.word	0x10120000
 80019dc:	10110000 	.word	0x10110000
 80019e0:	40021000 	.word	0x40021000
 80019e4:	40010000 	.word	0x40010000
 80019e8:	40010800 	.word	0x40010800
 80019ec:	40010c00 	.word	0x40010c00
 80019f0:	40011000 	.word	0x40011000
 80019f4:	40010400 	.word	0x40010400
 80019f8:	4b0b      	ldr	r3, [pc, #44]	; (8001a28 <HAL_GPIO_Init+0x2f4>)
 80019fa:	681a      	ldr	r2, [r3, #0]
 80019fc:	69bb      	ldr	r3, [r7, #24]
 80019fe:	43db      	mvns	r3, r3
 8001a00:	4909      	ldr	r1, [pc, #36]	; (8001a28 <HAL_GPIO_Init+0x2f4>)
 8001a02:	4013      	ands	r3, r2
 8001a04:	600b      	str	r3, [r1, #0]
 8001a06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a08:	3301      	adds	r3, #1
 8001a0a:	627b      	str	r3, [r7, #36]	; 0x24
 8001a0c:	683b      	ldr	r3, [r7, #0]
 8001a0e:	681a      	ldr	r2, [r3, #0]
 8001a10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a12:	fa22 f303 	lsr.w	r3, r2, r3
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	f47f ae96 	bne.w	8001748 <HAL_GPIO_Init+0x14>
 8001a1c:	bf00      	nop
 8001a1e:	bf00      	nop
 8001a20:	372c      	adds	r7, #44	; 0x2c
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bc80      	pop	{r7}
 8001a26:	4770      	bx	lr
 8001a28:	40010400 	.word	0x40010400

08001a2c <HAL_GPIO_ReadPin>:
 8001a2c:	b480      	push	{r7}
 8001a2e:	b085      	sub	sp, #20
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	6078      	str	r0, [r7, #4]
 8001a34:	460b      	mov	r3, r1
 8001a36:	807b      	strh	r3, [r7, #2]
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	689a      	ldr	r2, [r3, #8]
 8001a3c:	887b      	ldrh	r3, [r7, #2]
 8001a3e:	4013      	ands	r3, r2
 8001a40:	2b00      	cmp	r3, #0
 8001a42:	d002      	beq.n	8001a4a <HAL_GPIO_ReadPin+0x1e>
 8001a44:	2301      	movs	r3, #1
 8001a46:	73fb      	strb	r3, [r7, #15]
 8001a48:	e001      	b.n	8001a4e <HAL_GPIO_ReadPin+0x22>
 8001a4a:	2300      	movs	r3, #0
 8001a4c:	73fb      	strb	r3, [r7, #15]
 8001a4e:	7bfb      	ldrb	r3, [r7, #15]
 8001a50:	4618      	mov	r0, r3
 8001a52:	3714      	adds	r7, #20
 8001a54:	46bd      	mov	sp, r7
 8001a56:	bc80      	pop	{r7}
 8001a58:	4770      	bx	lr

08001a5a <HAL_GPIO_WritePin>:
 8001a5a:	b480      	push	{r7}
 8001a5c:	b083      	sub	sp, #12
 8001a5e:	af00      	add	r7, sp, #0
 8001a60:	6078      	str	r0, [r7, #4]
 8001a62:	460b      	mov	r3, r1
 8001a64:	807b      	strh	r3, [r7, #2]
 8001a66:	4613      	mov	r3, r2
 8001a68:	707b      	strb	r3, [r7, #1]
 8001a6a:	787b      	ldrb	r3, [r7, #1]
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d003      	beq.n	8001a78 <HAL_GPIO_WritePin+0x1e>
 8001a70:	887a      	ldrh	r2, [r7, #2]
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	611a      	str	r2, [r3, #16]
 8001a76:	e003      	b.n	8001a80 <HAL_GPIO_WritePin+0x26>
 8001a78:	887b      	ldrh	r3, [r7, #2]
 8001a7a:	041a      	lsls	r2, r3, #16
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	611a      	str	r2, [r3, #16]
 8001a80:	bf00      	nop
 8001a82:	370c      	adds	r7, #12
 8001a84:	46bd      	mov	sp, r7
 8001a86:	bc80      	pop	{r7}
 8001a88:	4770      	bx	lr

08001a8a <HAL_GPIO_TogglePin>:
 8001a8a:	b480      	push	{r7}
 8001a8c:	b085      	sub	sp, #20
 8001a8e:	af00      	add	r7, sp, #0
 8001a90:	6078      	str	r0, [r7, #4]
 8001a92:	460b      	mov	r3, r1
 8001a94:	807b      	strh	r3, [r7, #2]
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	68db      	ldr	r3, [r3, #12]
 8001a9a:	60fb      	str	r3, [r7, #12]
 8001a9c:	887a      	ldrh	r2, [r7, #2]
 8001a9e:	68fb      	ldr	r3, [r7, #12]
 8001aa0:	4013      	ands	r3, r2
 8001aa2:	041a      	lsls	r2, r3, #16
 8001aa4:	68fb      	ldr	r3, [r7, #12]
 8001aa6:	43d9      	mvns	r1, r3
 8001aa8:	887b      	ldrh	r3, [r7, #2]
 8001aaa:	400b      	ands	r3, r1
 8001aac:	431a      	orrs	r2, r3
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	611a      	str	r2, [r3, #16]
 8001ab2:	bf00      	nop
 8001ab4:	3714      	adds	r7, #20
 8001ab6:	46bd      	mov	sp, r7
 8001ab8:	bc80      	pop	{r7}
 8001aba:	4770      	bx	lr

08001abc <HAL_RCC_OscConfig>:
 8001abc:	b580      	push	{r7, lr}
 8001abe:	b086      	sub	sp, #24
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	6078      	str	r0, [r7, #4]
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	d101      	bne.n	8001ace <HAL_RCC_OscConfig+0x12>
 8001aca:	2301      	movs	r3, #1
 8001acc:	e272      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	f003 0301 	and.w	r3, r3, #1
 8001ad6:	2b00      	cmp	r3, #0
 8001ad8:	f000 8087 	beq.w	8001bea <HAL_RCC_OscConfig+0x12e>
 8001adc:	4b92      	ldr	r3, [pc, #584]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001ade:	685b      	ldr	r3, [r3, #4]
 8001ae0:	f003 030c 	and.w	r3, r3, #12
 8001ae4:	2b04      	cmp	r3, #4
 8001ae6:	d00c      	beq.n	8001b02 <HAL_RCC_OscConfig+0x46>
 8001ae8:	4b8f      	ldr	r3, [pc, #572]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001aea:	685b      	ldr	r3, [r3, #4]
 8001aec:	f003 030c 	and.w	r3, r3, #12
 8001af0:	2b08      	cmp	r3, #8
 8001af2:	d112      	bne.n	8001b1a <HAL_RCC_OscConfig+0x5e>
 8001af4:	4b8c      	ldr	r3, [pc, #560]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001af6:	685b      	ldr	r3, [r3, #4]
 8001af8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001afc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b00:	d10b      	bne.n	8001b1a <HAL_RCC_OscConfig+0x5e>
 8001b02:	4b89      	ldr	r3, [pc, #548]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b04:	681b      	ldr	r3, [r3, #0]
 8001b06:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d06c      	beq.n	8001be8 <HAL_RCC_OscConfig+0x12c>
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	685b      	ldr	r3, [r3, #4]
 8001b12:	2b00      	cmp	r3, #0
 8001b14:	d168      	bne.n	8001be8 <HAL_RCC_OscConfig+0x12c>
 8001b16:	2301      	movs	r3, #1
 8001b18:	e24c      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	685b      	ldr	r3, [r3, #4]
 8001b1e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b22:	d106      	bne.n	8001b32 <HAL_RCC_OscConfig+0x76>
 8001b24:	4b80      	ldr	r3, [pc, #512]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	4a7f      	ldr	r2, [pc, #508]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b2a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b2e:	6013      	str	r3, [r2, #0]
 8001b30:	e02e      	b.n	8001b90 <HAL_RCC_OscConfig+0xd4>
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	685b      	ldr	r3, [r3, #4]
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	d10c      	bne.n	8001b54 <HAL_RCC_OscConfig+0x98>
 8001b3a:	4b7b      	ldr	r3, [pc, #492]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	4a7a      	ldr	r2, [pc, #488]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b40:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001b44:	6013      	str	r3, [r2, #0]
 8001b46:	4b78      	ldr	r3, [pc, #480]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	4a77      	ldr	r2, [pc, #476]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b4c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001b50:	6013      	str	r3, [r2, #0]
 8001b52:	e01d      	b.n	8001b90 <HAL_RCC_OscConfig+0xd4>
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	685b      	ldr	r3, [r3, #4]
 8001b58:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001b5c:	d10c      	bne.n	8001b78 <HAL_RCC_OscConfig+0xbc>
 8001b5e:	4b72      	ldr	r3, [pc, #456]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	4a71      	ldr	r2, [pc, #452]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b64:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001b68:	6013      	str	r3, [r2, #0]
 8001b6a:	4b6f      	ldr	r3, [pc, #444]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	4a6e      	ldr	r2, [pc, #440]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b70:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b74:	6013      	str	r3, [r2, #0]
 8001b76:	e00b      	b.n	8001b90 <HAL_RCC_OscConfig+0xd4>
 8001b78:	4b6b      	ldr	r3, [pc, #428]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	4a6a      	ldr	r2, [pc, #424]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b7e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001b82:	6013      	str	r3, [r2, #0]
 8001b84:	4b68      	ldr	r3, [pc, #416]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	4a67      	ldr	r2, [pc, #412]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001b8a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001b8e:	6013      	str	r3, [r2, #0]
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	685b      	ldr	r3, [r3, #4]
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	d013      	beq.n	8001bc0 <HAL_RCC_OscConfig+0x104>
 8001b98:	f7ff fc90 	bl	80014bc <HAL_GetTick>
 8001b9c:	6138      	str	r0, [r7, #16]
 8001b9e:	e008      	b.n	8001bb2 <HAL_RCC_OscConfig+0xf6>
 8001ba0:	f7ff fc8c 	bl	80014bc <HAL_GetTick>
 8001ba4:	4602      	mov	r2, r0
 8001ba6:	693b      	ldr	r3, [r7, #16]
 8001ba8:	1ad3      	subs	r3, r2, r3
 8001baa:	2b64      	cmp	r3, #100	; 0x64
 8001bac:	d901      	bls.n	8001bb2 <HAL_RCC_OscConfig+0xf6>
 8001bae:	2303      	movs	r3, #3
 8001bb0:	e200      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001bb2:	4b5d      	ldr	r3, [pc, #372]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001bba:	2b00      	cmp	r3, #0
 8001bbc:	d0f0      	beq.n	8001ba0 <HAL_RCC_OscConfig+0xe4>
 8001bbe:	e014      	b.n	8001bea <HAL_RCC_OscConfig+0x12e>
 8001bc0:	f7ff fc7c 	bl	80014bc <HAL_GetTick>
 8001bc4:	6138      	str	r0, [r7, #16]
 8001bc6:	e008      	b.n	8001bda <HAL_RCC_OscConfig+0x11e>
 8001bc8:	f7ff fc78 	bl	80014bc <HAL_GetTick>
 8001bcc:	4602      	mov	r2, r0
 8001bce:	693b      	ldr	r3, [r7, #16]
 8001bd0:	1ad3      	subs	r3, r2, r3
 8001bd2:	2b64      	cmp	r3, #100	; 0x64
 8001bd4:	d901      	bls.n	8001bda <HAL_RCC_OscConfig+0x11e>
 8001bd6:	2303      	movs	r3, #3
 8001bd8:	e1ec      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001bda:	4b53      	ldr	r3, [pc, #332]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d1f0      	bne.n	8001bc8 <HAL_RCC_OscConfig+0x10c>
 8001be6:	e000      	b.n	8001bea <HAL_RCC_OscConfig+0x12e>
 8001be8:	bf00      	nop
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	f003 0302 	and.w	r3, r3, #2
 8001bf2:	2b00      	cmp	r3, #0
 8001bf4:	d063      	beq.n	8001cbe <HAL_RCC_OscConfig+0x202>
 8001bf6:	4b4c      	ldr	r3, [pc, #304]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001bf8:	685b      	ldr	r3, [r3, #4]
 8001bfa:	f003 030c 	and.w	r3, r3, #12
 8001bfe:	2b00      	cmp	r3, #0
 8001c00:	d00b      	beq.n	8001c1a <HAL_RCC_OscConfig+0x15e>
 8001c02:	4b49      	ldr	r3, [pc, #292]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c04:	685b      	ldr	r3, [r3, #4]
 8001c06:	f003 030c 	and.w	r3, r3, #12
 8001c0a:	2b08      	cmp	r3, #8
 8001c0c:	d11c      	bne.n	8001c48 <HAL_RCC_OscConfig+0x18c>
 8001c0e:	4b46      	ldr	r3, [pc, #280]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c10:	685b      	ldr	r3, [r3, #4]
 8001c12:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d116      	bne.n	8001c48 <HAL_RCC_OscConfig+0x18c>
 8001c1a:	4b43      	ldr	r3, [pc, #268]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	f003 0302 	and.w	r3, r3, #2
 8001c22:	2b00      	cmp	r3, #0
 8001c24:	d005      	beq.n	8001c32 <HAL_RCC_OscConfig+0x176>
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	691b      	ldr	r3, [r3, #16]
 8001c2a:	2b01      	cmp	r3, #1
 8001c2c:	d001      	beq.n	8001c32 <HAL_RCC_OscConfig+0x176>
 8001c2e:	2301      	movs	r3, #1
 8001c30:	e1c0      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001c32:	4b3d      	ldr	r3, [pc, #244]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	695b      	ldr	r3, [r3, #20]
 8001c3e:	00db      	lsls	r3, r3, #3
 8001c40:	4939      	ldr	r1, [pc, #228]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c42:	4313      	orrs	r3, r2
 8001c44:	600b      	str	r3, [r1, #0]
 8001c46:	e03a      	b.n	8001cbe <HAL_RCC_OscConfig+0x202>
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	691b      	ldr	r3, [r3, #16]
 8001c4c:	2b00      	cmp	r3, #0
 8001c4e:	d020      	beq.n	8001c92 <HAL_RCC_OscConfig+0x1d6>
 8001c50:	4b36      	ldr	r3, [pc, #216]	; (8001d2c <HAL_RCC_OscConfig+0x270>)
 8001c52:	2201      	movs	r2, #1
 8001c54:	601a      	str	r2, [r3, #0]
 8001c56:	f7ff fc31 	bl	80014bc <HAL_GetTick>
 8001c5a:	6138      	str	r0, [r7, #16]
 8001c5c:	e008      	b.n	8001c70 <HAL_RCC_OscConfig+0x1b4>
 8001c5e:	f7ff fc2d 	bl	80014bc <HAL_GetTick>
 8001c62:	4602      	mov	r2, r0
 8001c64:	693b      	ldr	r3, [r7, #16]
 8001c66:	1ad3      	subs	r3, r2, r3
 8001c68:	2b02      	cmp	r3, #2
 8001c6a:	d901      	bls.n	8001c70 <HAL_RCC_OscConfig+0x1b4>
 8001c6c:	2303      	movs	r3, #3
 8001c6e:	e1a1      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001c70:	4b2d      	ldr	r3, [pc, #180]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	f003 0302 	and.w	r3, r3, #2
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	d0f0      	beq.n	8001c5e <HAL_RCC_OscConfig+0x1a2>
 8001c7c:	4b2a      	ldr	r3, [pc, #168]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	695b      	ldr	r3, [r3, #20]
 8001c88:	00db      	lsls	r3, r3, #3
 8001c8a:	4927      	ldr	r1, [pc, #156]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001c8c:	4313      	orrs	r3, r2
 8001c8e:	600b      	str	r3, [r1, #0]
 8001c90:	e015      	b.n	8001cbe <HAL_RCC_OscConfig+0x202>
 8001c92:	4b26      	ldr	r3, [pc, #152]	; (8001d2c <HAL_RCC_OscConfig+0x270>)
 8001c94:	2200      	movs	r2, #0
 8001c96:	601a      	str	r2, [r3, #0]
 8001c98:	f7ff fc10 	bl	80014bc <HAL_GetTick>
 8001c9c:	6138      	str	r0, [r7, #16]
 8001c9e:	e008      	b.n	8001cb2 <HAL_RCC_OscConfig+0x1f6>
 8001ca0:	f7ff fc0c 	bl	80014bc <HAL_GetTick>
 8001ca4:	4602      	mov	r2, r0
 8001ca6:	693b      	ldr	r3, [r7, #16]
 8001ca8:	1ad3      	subs	r3, r2, r3
 8001caa:	2b02      	cmp	r3, #2
 8001cac:	d901      	bls.n	8001cb2 <HAL_RCC_OscConfig+0x1f6>
 8001cae:	2303      	movs	r3, #3
 8001cb0:	e180      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001cb2:	4b1d      	ldr	r3, [pc, #116]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	f003 0302 	and.w	r3, r3, #2
 8001cba:	2b00      	cmp	r3, #0
 8001cbc:	d1f0      	bne.n	8001ca0 <HAL_RCC_OscConfig+0x1e4>
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	681b      	ldr	r3, [r3, #0]
 8001cc2:	f003 0308 	and.w	r3, r3, #8
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d03a      	beq.n	8001d40 <HAL_RCC_OscConfig+0x284>
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	699b      	ldr	r3, [r3, #24]
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d019      	beq.n	8001d06 <HAL_RCC_OscConfig+0x24a>
 8001cd2:	4b17      	ldr	r3, [pc, #92]	; (8001d30 <HAL_RCC_OscConfig+0x274>)
 8001cd4:	2201      	movs	r2, #1
 8001cd6:	601a      	str	r2, [r3, #0]
 8001cd8:	f7ff fbf0 	bl	80014bc <HAL_GetTick>
 8001cdc:	6138      	str	r0, [r7, #16]
 8001cde:	e008      	b.n	8001cf2 <HAL_RCC_OscConfig+0x236>
 8001ce0:	f7ff fbec 	bl	80014bc <HAL_GetTick>
 8001ce4:	4602      	mov	r2, r0
 8001ce6:	693b      	ldr	r3, [r7, #16]
 8001ce8:	1ad3      	subs	r3, r2, r3
 8001cea:	2b02      	cmp	r3, #2
 8001cec:	d901      	bls.n	8001cf2 <HAL_RCC_OscConfig+0x236>
 8001cee:	2303      	movs	r3, #3
 8001cf0:	e160      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001cf2:	4b0d      	ldr	r3, [pc, #52]	; (8001d28 <HAL_RCC_OscConfig+0x26c>)
 8001cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cf6:	f003 0302 	and.w	r3, r3, #2
 8001cfa:	2b00      	cmp	r3, #0
 8001cfc:	d0f0      	beq.n	8001ce0 <HAL_RCC_OscConfig+0x224>
 8001cfe:	2001      	movs	r0, #1
 8001d00:	f000 fa9c 	bl	800223c <RCC_Delay>
 8001d04:	e01c      	b.n	8001d40 <HAL_RCC_OscConfig+0x284>
 8001d06:	4b0a      	ldr	r3, [pc, #40]	; (8001d30 <HAL_RCC_OscConfig+0x274>)
 8001d08:	2200      	movs	r2, #0
 8001d0a:	601a      	str	r2, [r3, #0]
 8001d0c:	f7ff fbd6 	bl	80014bc <HAL_GetTick>
 8001d10:	6138      	str	r0, [r7, #16]
 8001d12:	e00f      	b.n	8001d34 <HAL_RCC_OscConfig+0x278>
 8001d14:	f7ff fbd2 	bl	80014bc <HAL_GetTick>
 8001d18:	4602      	mov	r2, r0
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	1ad3      	subs	r3, r2, r3
 8001d1e:	2b02      	cmp	r3, #2
 8001d20:	d908      	bls.n	8001d34 <HAL_RCC_OscConfig+0x278>
 8001d22:	2303      	movs	r3, #3
 8001d24:	e146      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001d26:	bf00      	nop
 8001d28:	40021000 	.word	0x40021000
 8001d2c:	42420000 	.word	0x42420000
 8001d30:	42420480 	.word	0x42420480
 8001d34:	4b92      	ldr	r3, [pc, #584]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001d36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d38:	f003 0302 	and.w	r3, r3, #2
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	d1e9      	bne.n	8001d14 <HAL_RCC_OscConfig+0x258>
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	f003 0304 	and.w	r3, r3, #4
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	f000 80a6 	beq.w	8001e9a <HAL_RCC_OscConfig+0x3de>
 8001d4e:	2300      	movs	r3, #0
 8001d50:	75fb      	strb	r3, [r7, #23]
 8001d52:	4b8b      	ldr	r3, [pc, #556]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001d54:	69db      	ldr	r3, [r3, #28]
 8001d56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d10d      	bne.n	8001d7a <HAL_RCC_OscConfig+0x2be>
 8001d5e:	4b88      	ldr	r3, [pc, #544]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001d60:	69db      	ldr	r3, [r3, #28]
 8001d62:	4a87      	ldr	r2, [pc, #540]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001d64:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001d68:	61d3      	str	r3, [r2, #28]
 8001d6a:	4b85      	ldr	r3, [pc, #532]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001d6c:	69db      	ldr	r3, [r3, #28]
 8001d6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d72:	60bb      	str	r3, [r7, #8]
 8001d74:	68bb      	ldr	r3, [r7, #8]
 8001d76:	2301      	movs	r3, #1
 8001d78:	75fb      	strb	r3, [r7, #23]
 8001d7a:	4b82      	ldr	r3, [pc, #520]	; (8001f84 <HAL_RCC_OscConfig+0x4c8>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d118      	bne.n	8001db8 <HAL_RCC_OscConfig+0x2fc>
 8001d86:	4b7f      	ldr	r3, [pc, #508]	; (8001f84 <HAL_RCC_OscConfig+0x4c8>)
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	4a7e      	ldr	r2, [pc, #504]	; (8001f84 <HAL_RCC_OscConfig+0x4c8>)
 8001d8c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d90:	6013      	str	r3, [r2, #0]
 8001d92:	f7ff fb93 	bl	80014bc <HAL_GetTick>
 8001d96:	6138      	str	r0, [r7, #16]
 8001d98:	e008      	b.n	8001dac <HAL_RCC_OscConfig+0x2f0>
 8001d9a:	f7ff fb8f 	bl	80014bc <HAL_GetTick>
 8001d9e:	4602      	mov	r2, r0
 8001da0:	693b      	ldr	r3, [r7, #16]
 8001da2:	1ad3      	subs	r3, r2, r3
 8001da4:	2b64      	cmp	r3, #100	; 0x64
 8001da6:	d901      	bls.n	8001dac <HAL_RCC_OscConfig+0x2f0>
 8001da8:	2303      	movs	r3, #3
 8001daa:	e103      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001dac:	4b75      	ldr	r3, [pc, #468]	; (8001f84 <HAL_RCC_OscConfig+0x4c8>)
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d0f0      	beq.n	8001d9a <HAL_RCC_OscConfig+0x2de>
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	68db      	ldr	r3, [r3, #12]
 8001dbc:	2b01      	cmp	r3, #1
 8001dbe:	d106      	bne.n	8001dce <HAL_RCC_OscConfig+0x312>
 8001dc0:	4b6f      	ldr	r3, [pc, #444]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001dc2:	6a1b      	ldr	r3, [r3, #32]
 8001dc4:	4a6e      	ldr	r2, [pc, #440]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001dc6:	f043 0301 	orr.w	r3, r3, #1
 8001dca:	6213      	str	r3, [r2, #32]
 8001dcc:	e02d      	b.n	8001e2a <HAL_RCC_OscConfig+0x36e>
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	68db      	ldr	r3, [r3, #12]
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d10c      	bne.n	8001df0 <HAL_RCC_OscConfig+0x334>
 8001dd6:	4b6a      	ldr	r3, [pc, #424]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001dd8:	6a1b      	ldr	r3, [r3, #32]
 8001dda:	4a69      	ldr	r2, [pc, #420]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001ddc:	f023 0301 	bic.w	r3, r3, #1
 8001de0:	6213      	str	r3, [r2, #32]
 8001de2:	4b67      	ldr	r3, [pc, #412]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001de4:	6a1b      	ldr	r3, [r3, #32]
 8001de6:	4a66      	ldr	r2, [pc, #408]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001de8:	f023 0304 	bic.w	r3, r3, #4
 8001dec:	6213      	str	r3, [r2, #32]
 8001dee:	e01c      	b.n	8001e2a <HAL_RCC_OscConfig+0x36e>
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	68db      	ldr	r3, [r3, #12]
 8001df4:	2b05      	cmp	r3, #5
 8001df6:	d10c      	bne.n	8001e12 <HAL_RCC_OscConfig+0x356>
 8001df8:	4b61      	ldr	r3, [pc, #388]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001dfa:	6a1b      	ldr	r3, [r3, #32]
 8001dfc:	4a60      	ldr	r2, [pc, #384]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001dfe:	f043 0304 	orr.w	r3, r3, #4
 8001e02:	6213      	str	r3, [r2, #32]
 8001e04:	4b5e      	ldr	r3, [pc, #376]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e06:	6a1b      	ldr	r3, [r3, #32]
 8001e08:	4a5d      	ldr	r2, [pc, #372]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e0a:	f043 0301 	orr.w	r3, r3, #1
 8001e0e:	6213      	str	r3, [r2, #32]
 8001e10:	e00b      	b.n	8001e2a <HAL_RCC_OscConfig+0x36e>
 8001e12:	4b5b      	ldr	r3, [pc, #364]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e14:	6a1b      	ldr	r3, [r3, #32]
 8001e16:	4a5a      	ldr	r2, [pc, #360]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e18:	f023 0301 	bic.w	r3, r3, #1
 8001e1c:	6213      	str	r3, [r2, #32]
 8001e1e:	4b58      	ldr	r3, [pc, #352]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e20:	6a1b      	ldr	r3, [r3, #32]
 8001e22:	4a57      	ldr	r2, [pc, #348]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e24:	f023 0304 	bic.w	r3, r3, #4
 8001e28:	6213      	str	r3, [r2, #32]
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	68db      	ldr	r3, [r3, #12]
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	d015      	beq.n	8001e5e <HAL_RCC_OscConfig+0x3a2>
 8001e32:	f7ff fb43 	bl	80014bc <HAL_GetTick>
 8001e36:	6138      	str	r0, [r7, #16]
 8001e38:	e00a      	b.n	8001e50 <HAL_RCC_OscConfig+0x394>
 8001e3a:	f7ff fb3f 	bl	80014bc <HAL_GetTick>
 8001e3e:	4602      	mov	r2, r0
 8001e40:	693b      	ldr	r3, [r7, #16]
 8001e42:	1ad3      	subs	r3, r2, r3
 8001e44:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e48:	4293      	cmp	r3, r2
 8001e4a:	d901      	bls.n	8001e50 <HAL_RCC_OscConfig+0x394>
 8001e4c:	2303      	movs	r3, #3
 8001e4e:	e0b1      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001e50:	4b4b      	ldr	r3, [pc, #300]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e52:	6a1b      	ldr	r3, [r3, #32]
 8001e54:	f003 0302 	and.w	r3, r3, #2
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d0ee      	beq.n	8001e3a <HAL_RCC_OscConfig+0x37e>
 8001e5c:	e014      	b.n	8001e88 <HAL_RCC_OscConfig+0x3cc>
 8001e5e:	f7ff fb2d 	bl	80014bc <HAL_GetTick>
 8001e62:	6138      	str	r0, [r7, #16]
 8001e64:	e00a      	b.n	8001e7c <HAL_RCC_OscConfig+0x3c0>
 8001e66:	f7ff fb29 	bl	80014bc <HAL_GetTick>
 8001e6a:	4602      	mov	r2, r0
 8001e6c:	693b      	ldr	r3, [r7, #16]
 8001e6e:	1ad3      	subs	r3, r2, r3
 8001e70:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e74:	4293      	cmp	r3, r2
 8001e76:	d901      	bls.n	8001e7c <HAL_RCC_OscConfig+0x3c0>
 8001e78:	2303      	movs	r3, #3
 8001e7a:	e09b      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001e7c:	4b40      	ldr	r3, [pc, #256]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e7e:	6a1b      	ldr	r3, [r3, #32]
 8001e80:	f003 0302 	and.w	r3, r3, #2
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d1ee      	bne.n	8001e66 <HAL_RCC_OscConfig+0x3aa>
 8001e88:	7dfb      	ldrb	r3, [r7, #23]
 8001e8a:	2b01      	cmp	r3, #1
 8001e8c:	d105      	bne.n	8001e9a <HAL_RCC_OscConfig+0x3de>
 8001e8e:	4b3c      	ldr	r3, [pc, #240]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e90:	69db      	ldr	r3, [r3, #28]
 8001e92:	4a3b      	ldr	r2, [pc, #236]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001e94:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001e98:	61d3      	str	r3, [r2, #28]
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	69db      	ldr	r3, [r3, #28]
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	f000 8087 	beq.w	8001fb2 <HAL_RCC_OscConfig+0x4f6>
 8001ea4:	4b36      	ldr	r3, [pc, #216]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001ea6:	685b      	ldr	r3, [r3, #4]
 8001ea8:	f003 030c 	and.w	r3, r3, #12
 8001eac:	2b08      	cmp	r3, #8
 8001eae:	d061      	beq.n	8001f74 <HAL_RCC_OscConfig+0x4b8>
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	69db      	ldr	r3, [r3, #28]
 8001eb4:	2b02      	cmp	r3, #2
 8001eb6:	d146      	bne.n	8001f46 <HAL_RCC_OscConfig+0x48a>
 8001eb8:	4b33      	ldr	r3, [pc, #204]	; (8001f88 <HAL_RCC_OscConfig+0x4cc>)
 8001eba:	2200      	movs	r2, #0
 8001ebc:	601a      	str	r2, [r3, #0]
 8001ebe:	f7ff fafd 	bl	80014bc <HAL_GetTick>
 8001ec2:	6138      	str	r0, [r7, #16]
 8001ec4:	e008      	b.n	8001ed8 <HAL_RCC_OscConfig+0x41c>
 8001ec6:	f7ff faf9 	bl	80014bc <HAL_GetTick>
 8001eca:	4602      	mov	r2, r0
 8001ecc:	693b      	ldr	r3, [r7, #16]
 8001ece:	1ad3      	subs	r3, r2, r3
 8001ed0:	2b02      	cmp	r3, #2
 8001ed2:	d901      	bls.n	8001ed8 <HAL_RCC_OscConfig+0x41c>
 8001ed4:	2303      	movs	r3, #3
 8001ed6:	e06d      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001ed8:	4b29      	ldr	r3, [pc, #164]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d1f0      	bne.n	8001ec6 <HAL_RCC_OscConfig+0x40a>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	6a1b      	ldr	r3, [r3, #32]
 8001ee8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001eec:	d108      	bne.n	8001f00 <HAL_RCC_OscConfig+0x444>
 8001eee:	4b24      	ldr	r3, [pc, #144]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001ef0:	685b      	ldr	r3, [r3, #4]
 8001ef2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	689b      	ldr	r3, [r3, #8]
 8001efa:	4921      	ldr	r1, [pc, #132]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001efc:	4313      	orrs	r3, r2
 8001efe:	604b      	str	r3, [r1, #4]
 8001f00:	4b1f      	ldr	r3, [pc, #124]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001f02:	685b      	ldr	r3, [r3, #4]
 8001f04:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	6a19      	ldr	r1, [r3, #32]
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f10:	430b      	orrs	r3, r1
 8001f12:	491b      	ldr	r1, [pc, #108]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001f14:	4313      	orrs	r3, r2
 8001f16:	604b      	str	r3, [r1, #4]
 8001f18:	4b1b      	ldr	r3, [pc, #108]	; (8001f88 <HAL_RCC_OscConfig+0x4cc>)
 8001f1a:	2201      	movs	r2, #1
 8001f1c:	601a      	str	r2, [r3, #0]
 8001f1e:	f7ff facd 	bl	80014bc <HAL_GetTick>
 8001f22:	6138      	str	r0, [r7, #16]
 8001f24:	e008      	b.n	8001f38 <HAL_RCC_OscConfig+0x47c>
 8001f26:	f7ff fac9 	bl	80014bc <HAL_GetTick>
 8001f2a:	4602      	mov	r2, r0
 8001f2c:	693b      	ldr	r3, [r7, #16]
 8001f2e:	1ad3      	subs	r3, r2, r3
 8001f30:	2b02      	cmp	r3, #2
 8001f32:	d901      	bls.n	8001f38 <HAL_RCC_OscConfig+0x47c>
 8001f34:	2303      	movs	r3, #3
 8001f36:	e03d      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001f38:	4b11      	ldr	r3, [pc, #68]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001f40:	2b00      	cmp	r3, #0
 8001f42:	d0f0      	beq.n	8001f26 <HAL_RCC_OscConfig+0x46a>
 8001f44:	e035      	b.n	8001fb2 <HAL_RCC_OscConfig+0x4f6>
 8001f46:	4b10      	ldr	r3, [pc, #64]	; (8001f88 <HAL_RCC_OscConfig+0x4cc>)
 8001f48:	2200      	movs	r2, #0
 8001f4a:	601a      	str	r2, [r3, #0]
 8001f4c:	f7ff fab6 	bl	80014bc <HAL_GetTick>
 8001f50:	6138      	str	r0, [r7, #16]
 8001f52:	e008      	b.n	8001f66 <HAL_RCC_OscConfig+0x4aa>
 8001f54:	f7ff fab2 	bl	80014bc <HAL_GetTick>
 8001f58:	4602      	mov	r2, r0
 8001f5a:	693b      	ldr	r3, [r7, #16]
 8001f5c:	1ad3      	subs	r3, r2, r3
 8001f5e:	2b02      	cmp	r3, #2
 8001f60:	d901      	bls.n	8001f66 <HAL_RCC_OscConfig+0x4aa>
 8001f62:	2303      	movs	r3, #3
 8001f64:	e026      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001f66:	4b06      	ldr	r3, [pc, #24]	; (8001f80 <HAL_RCC_OscConfig+0x4c4>)
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d1f0      	bne.n	8001f54 <HAL_RCC_OscConfig+0x498>
 8001f72:	e01e      	b.n	8001fb2 <HAL_RCC_OscConfig+0x4f6>
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	69db      	ldr	r3, [r3, #28]
 8001f78:	2b01      	cmp	r3, #1
 8001f7a:	d107      	bne.n	8001f8c <HAL_RCC_OscConfig+0x4d0>
 8001f7c:	2301      	movs	r3, #1
 8001f7e:	e019      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001f80:	40021000 	.word	0x40021000
 8001f84:	40007000 	.word	0x40007000
 8001f88:	42420060 	.word	0x42420060
 8001f8c:	4b0b      	ldr	r3, [pc, #44]	; (8001fbc <HAL_RCC_OscConfig+0x500>)
 8001f8e:	685b      	ldr	r3, [r3, #4]
 8001f90:	60fb      	str	r3, [r7, #12]
 8001f92:	68fb      	ldr	r3, [r7, #12]
 8001f94:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	6a1b      	ldr	r3, [r3, #32]
 8001f9c:	429a      	cmp	r2, r3
 8001f9e:	d106      	bne.n	8001fae <HAL_RCC_OscConfig+0x4f2>
 8001fa0:	68fb      	ldr	r3, [r7, #12]
 8001fa2:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001faa:	429a      	cmp	r2, r3
 8001fac:	d001      	beq.n	8001fb2 <HAL_RCC_OscConfig+0x4f6>
 8001fae:	2301      	movs	r3, #1
 8001fb0:	e000      	b.n	8001fb4 <HAL_RCC_OscConfig+0x4f8>
 8001fb2:	2300      	movs	r3, #0
 8001fb4:	4618      	mov	r0, r3
 8001fb6:	3718      	adds	r7, #24
 8001fb8:	46bd      	mov	sp, r7
 8001fba:	bd80      	pop	{r7, pc}
 8001fbc:	40021000 	.word	0x40021000

08001fc0 <HAL_RCC_ClockConfig>:
 8001fc0:	b580      	push	{r7, lr}
 8001fc2:	b084      	sub	sp, #16
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	6078      	str	r0, [r7, #4]
 8001fc8:	6039      	str	r1, [r7, #0]
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	2b00      	cmp	r3, #0
 8001fce:	d101      	bne.n	8001fd4 <HAL_RCC_ClockConfig+0x14>
 8001fd0:	2301      	movs	r3, #1
 8001fd2:	e0d0      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 8001fd4:	4b6a      	ldr	r3, [pc, #424]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	f003 0307 	and.w	r3, r3, #7
 8001fdc:	683a      	ldr	r2, [r7, #0]
 8001fde:	429a      	cmp	r2, r3
 8001fe0:	d910      	bls.n	8002004 <HAL_RCC_ClockConfig+0x44>
 8001fe2:	4b67      	ldr	r3, [pc, #412]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	f023 0207 	bic.w	r2, r3, #7
 8001fea:	4965      	ldr	r1, [pc, #404]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 8001fec:	683b      	ldr	r3, [r7, #0]
 8001fee:	4313      	orrs	r3, r2
 8001ff0:	600b      	str	r3, [r1, #0]
 8001ff2:	4b63      	ldr	r3, [pc, #396]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	f003 0307 	and.w	r3, r3, #7
 8001ffa:	683a      	ldr	r2, [r7, #0]
 8001ffc:	429a      	cmp	r2, r3
 8001ffe:	d001      	beq.n	8002004 <HAL_RCC_ClockConfig+0x44>
 8002000:	2301      	movs	r3, #1
 8002002:	e0b8      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f003 0302 	and.w	r3, r3, #2
 800200c:	2b00      	cmp	r3, #0
 800200e:	d020      	beq.n	8002052 <HAL_RCC_ClockConfig+0x92>
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	f003 0304 	and.w	r3, r3, #4
 8002018:	2b00      	cmp	r3, #0
 800201a:	d005      	beq.n	8002028 <HAL_RCC_ClockConfig+0x68>
 800201c:	4b59      	ldr	r3, [pc, #356]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800201e:	685b      	ldr	r3, [r3, #4]
 8002020:	4a58      	ldr	r2, [pc, #352]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002022:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002026:	6053      	str	r3, [r2, #4]
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	f003 0308 	and.w	r3, r3, #8
 8002030:	2b00      	cmp	r3, #0
 8002032:	d005      	beq.n	8002040 <HAL_RCC_ClockConfig+0x80>
 8002034:	4b53      	ldr	r3, [pc, #332]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002036:	685b      	ldr	r3, [r3, #4]
 8002038:	4a52      	ldr	r2, [pc, #328]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800203a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800203e:	6053      	str	r3, [r2, #4]
 8002040:	4b50      	ldr	r3, [pc, #320]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002042:	685b      	ldr	r3, [r3, #4]
 8002044:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	689b      	ldr	r3, [r3, #8]
 800204c:	494d      	ldr	r1, [pc, #308]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800204e:	4313      	orrs	r3, r2
 8002050:	604b      	str	r3, [r1, #4]
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	f003 0301 	and.w	r3, r3, #1
 800205a:	2b00      	cmp	r3, #0
 800205c:	d040      	beq.n	80020e0 <HAL_RCC_ClockConfig+0x120>
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	685b      	ldr	r3, [r3, #4]
 8002062:	2b01      	cmp	r3, #1
 8002064:	d107      	bne.n	8002076 <HAL_RCC_ClockConfig+0xb6>
 8002066:	4b47      	ldr	r3, [pc, #284]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800206e:	2b00      	cmp	r3, #0
 8002070:	d115      	bne.n	800209e <HAL_RCC_ClockConfig+0xde>
 8002072:	2301      	movs	r3, #1
 8002074:	e07f      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	685b      	ldr	r3, [r3, #4]
 800207a:	2b02      	cmp	r3, #2
 800207c:	d107      	bne.n	800208e <HAL_RCC_ClockConfig+0xce>
 800207e:	4b41      	ldr	r3, [pc, #260]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002086:	2b00      	cmp	r3, #0
 8002088:	d109      	bne.n	800209e <HAL_RCC_ClockConfig+0xde>
 800208a:	2301      	movs	r3, #1
 800208c:	e073      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 800208e:	4b3d      	ldr	r3, [pc, #244]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	f003 0302 	and.w	r3, r3, #2
 8002096:	2b00      	cmp	r3, #0
 8002098:	d101      	bne.n	800209e <HAL_RCC_ClockConfig+0xde>
 800209a:	2301      	movs	r3, #1
 800209c:	e06b      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 800209e:	4b39      	ldr	r3, [pc, #228]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 80020a0:	685b      	ldr	r3, [r3, #4]
 80020a2:	f023 0203 	bic.w	r2, r3, #3
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	685b      	ldr	r3, [r3, #4]
 80020aa:	4936      	ldr	r1, [pc, #216]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 80020ac:	4313      	orrs	r3, r2
 80020ae:	604b      	str	r3, [r1, #4]
 80020b0:	f7ff fa04 	bl	80014bc <HAL_GetTick>
 80020b4:	60f8      	str	r0, [r7, #12]
 80020b6:	e00a      	b.n	80020ce <HAL_RCC_ClockConfig+0x10e>
 80020b8:	f7ff fa00 	bl	80014bc <HAL_GetTick>
 80020bc:	4602      	mov	r2, r0
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	1ad3      	subs	r3, r2, r3
 80020c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80020c6:	4293      	cmp	r3, r2
 80020c8:	d901      	bls.n	80020ce <HAL_RCC_ClockConfig+0x10e>
 80020ca:	2303      	movs	r3, #3
 80020cc:	e053      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 80020ce:	4b2d      	ldr	r3, [pc, #180]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 80020d0:	685b      	ldr	r3, [r3, #4]
 80020d2:	f003 020c 	and.w	r2, r3, #12
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	685b      	ldr	r3, [r3, #4]
 80020da:	009b      	lsls	r3, r3, #2
 80020dc:	429a      	cmp	r2, r3
 80020de:	d1eb      	bne.n	80020b8 <HAL_RCC_ClockConfig+0xf8>
 80020e0:	4b27      	ldr	r3, [pc, #156]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	f003 0307 	and.w	r3, r3, #7
 80020e8:	683a      	ldr	r2, [r7, #0]
 80020ea:	429a      	cmp	r2, r3
 80020ec:	d210      	bcs.n	8002110 <HAL_RCC_ClockConfig+0x150>
 80020ee:	4b24      	ldr	r3, [pc, #144]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 80020f0:	681b      	ldr	r3, [r3, #0]
 80020f2:	f023 0207 	bic.w	r2, r3, #7
 80020f6:	4922      	ldr	r1, [pc, #136]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 80020f8:	683b      	ldr	r3, [r7, #0]
 80020fa:	4313      	orrs	r3, r2
 80020fc:	600b      	str	r3, [r1, #0]
 80020fe:	4b20      	ldr	r3, [pc, #128]	; (8002180 <HAL_RCC_ClockConfig+0x1c0>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	f003 0307 	and.w	r3, r3, #7
 8002106:	683a      	ldr	r2, [r7, #0]
 8002108:	429a      	cmp	r2, r3
 800210a:	d001      	beq.n	8002110 <HAL_RCC_ClockConfig+0x150>
 800210c:	2301      	movs	r3, #1
 800210e:	e032      	b.n	8002176 <HAL_RCC_ClockConfig+0x1b6>
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	f003 0304 	and.w	r3, r3, #4
 8002118:	2b00      	cmp	r3, #0
 800211a:	d008      	beq.n	800212e <HAL_RCC_ClockConfig+0x16e>
 800211c:	4b19      	ldr	r3, [pc, #100]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800211e:	685b      	ldr	r3, [r3, #4]
 8002120:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	68db      	ldr	r3, [r3, #12]
 8002128:	4916      	ldr	r1, [pc, #88]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800212a:	4313      	orrs	r3, r2
 800212c:	604b      	str	r3, [r1, #4]
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	f003 0308 	and.w	r3, r3, #8
 8002136:	2b00      	cmp	r3, #0
 8002138:	d009      	beq.n	800214e <HAL_RCC_ClockConfig+0x18e>
 800213a:	4b12      	ldr	r3, [pc, #72]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800213c:	685b      	ldr	r3, [r3, #4]
 800213e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	691b      	ldr	r3, [r3, #16]
 8002146:	00db      	lsls	r3, r3, #3
 8002148:	490e      	ldr	r1, [pc, #56]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 800214a:	4313      	orrs	r3, r2
 800214c:	604b      	str	r3, [r1, #4]
 800214e:	f000 f821 	bl	8002194 <HAL_RCC_GetSysClockFreq>
 8002152:	4602      	mov	r2, r0
 8002154:	4b0b      	ldr	r3, [pc, #44]	; (8002184 <HAL_RCC_ClockConfig+0x1c4>)
 8002156:	685b      	ldr	r3, [r3, #4]
 8002158:	091b      	lsrs	r3, r3, #4
 800215a:	f003 030f 	and.w	r3, r3, #15
 800215e:	490a      	ldr	r1, [pc, #40]	; (8002188 <HAL_RCC_ClockConfig+0x1c8>)
 8002160:	5ccb      	ldrb	r3, [r1, r3]
 8002162:	fa22 f303 	lsr.w	r3, r2, r3
 8002166:	4a09      	ldr	r2, [pc, #36]	; (800218c <HAL_RCC_ClockConfig+0x1cc>)
 8002168:	6013      	str	r3, [r2, #0]
 800216a:	4b09      	ldr	r3, [pc, #36]	; (8002190 <HAL_RCC_ClockConfig+0x1d0>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	4618      	mov	r0, r3
 8002170:	f7ff f962 	bl	8001438 <HAL_InitTick>
 8002174:	2300      	movs	r3, #0
 8002176:	4618      	mov	r0, r3
 8002178:	3710      	adds	r7, #16
 800217a:	46bd      	mov	sp, r7
 800217c:	bd80      	pop	{r7, pc}
 800217e:	bf00      	nop
 8002180:	40022000 	.word	0x40022000
 8002184:	40021000 	.word	0x40021000
 8002188:	08002aac 	.word	0x08002aac
 800218c:	20000000 	.word	0x20000000
 8002190:	2000000c 	.word	0x2000000c

08002194 <HAL_RCC_GetSysClockFreq>:
 8002194:	b480      	push	{r7}
 8002196:	b087      	sub	sp, #28
 8002198:	af00      	add	r7, sp, #0
 800219a:	2300      	movs	r3, #0
 800219c:	60fb      	str	r3, [r7, #12]
 800219e:	2300      	movs	r3, #0
 80021a0:	60bb      	str	r3, [r7, #8]
 80021a2:	2300      	movs	r3, #0
 80021a4:	617b      	str	r3, [r7, #20]
 80021a6:	2300      	movs	r3, #0
 80021a8:	607b      	str	r3, [r7, #4]
 80021aa:	2300      	movs	r3, #0
 80021ac:	613b      	str	r3, [r7, #16]
 80021ae:	4b1e      	ldr	r3, [pc, #120]	; (8002228 <HAL_RCC_GetSysClockFreq+0x94>)
 80021b0:	685b      	ldr	r3, [r3, #4]
 80021b2:	60fb      	str	r3, [r7, #12]
 80021b4:	68fb      	ldr	r3, [r7, #12]
 80021b6:	f003 030c 	and.w	r3, r3, #12
 80021ba:	2b04      	cmp	r3, #4
 80021bc:	d002      	beq.n	80021c4 <HAL_RCC_GetSysClockFreq+0x30>
 80021be:	2b08      	cmp	r3, #8
 80021c0:	d003      	beq.n	80021ca <HAL_RCC_GetSysClockFreq+0x36>
 80021c2:	e027      	b.n	8002214 <HAL_RCC_GetSysClockFreq+0x80>
 80021c4:	4b19      	ldr	r3, [pc, #100]	; (800222c <HAL_RCC_GetSysClockFreq+0x98>)
 80021c6:	613b      	str	r3, [r7, #16]
 80021c8:	e027      	b.n	800221a <HAL_RCC_GetSysClockFreq+0x86>
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	0c9b      	lsrs	r3, r3, #18
 80021ce:	f003 030f 	and.w	r3, r3, #15
 80021d2:	4a17      	ldr	r2, [pc, #92]	; (8002230 <HAL_RCC_GetSysClockFreq+0x9c>)
 80021d4:	5cd3      	ldrb	r3, [r2, r3]
 80021d6:	607b      	str	r3, [r7, #4]
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d010      	beq.n	8002204 <HAL_RCC_GetSysClockFreq+0x70>
 80021e2:	4b11      	ldr	r3, [pc, #68]	; (8002228 <HAL_RCC_GetSysClockFreq+0x94>)
 80021e4:	685b      	ldr	r3, [r3, #4]
 80021e6:	0c5b      	lsrs	r3, r3, #17
 80021e8:	f003 0301 	and.w	r3, r3, #1
 80021ec:	4a11      	ldr	r2, [pc, #68]	; (8002234 <HAL_RCC_GetSysClockFreq+0xa0>)
 80021ee:	5cd3      	ldrb	r3, [r2, r3]
 80021f0:	60bb      	str	r3, [r7, #8]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	4a0d      	ldr	r2, [pc, #52]	; (800222c <HAL_RCC_GetSysClockFreq+0x98>)
 80021f6:	fb03 f202 	mul.w	r2, r3, r2
 80021fa:	68bb      	ldr	r3, [r7, #8]
 80021fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8002200:	617b      	str	r3, [r7, #20]
 8002202:	e004      	b.n	800220e <HAL_RCC_GetSysClockFreq+0x7a>
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	4a0c      	ldr	r2, [pc, #48]	; (8002238 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002208:	fb02 f303 	mul.w	r3, r2, r3
 800220c:	617b      	str	r3, [r7, #20]
 800220e:	697b      	ldr	r3, [r7, #20]
 8002210:	613b      	str	r3, [r7, #16]
 8002212:	e002      	b.n	800221a <HAL_RCC_GetSysClockFreq+0x86>
 8002214:	4b05      	ldr	r3, [pc, #20]	; (800222c <HAL_RCC_GetSysClockFreq+0x98>)
 8002216:	613b      	str	r3, [r7, #16]
 8002218:	bf00      	nop
 800221a:	693b      	ldr	r3, [r7, #16]
 800221c:	4618      	mov	r0, r3
 800221e:	371c      	adds	r7, #28
 8002220:	46bd      	mov	sp, r7
 8002222:	bc80      	pop	{r7}
 8002224:	4770      	bx	lr
 8002226:	bf00      	nop
 8002228:	40021000 	.word	0x40021000
 800222c:	007a1200 	.word	0x007a1200
 8002230:	08002abc 	.word	0x08002abc
 8002234:	08002acc 	.word	0x08002acc
 8002238:	003d0900 	.word	0x003d0900

0800223c <RCC_Delay>:
 800223c:	b480      	push	{r7}
 800223e:	b085      	sub	sp, #20
 8002240:	af00      	add	r7, sp, #0
 8002242:	6078      	str	r0, [r7, #4]
 8002244:	4b0a      	ldr	r3, [pc, #40]	; (8002270 <RCC_Delay+0x34>)
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	4a0a      	ldr	r2, [pc, #40]	; (8002274 <RCC_Delay+0x38>)
 800224a:	fba2 2303 	umull	r2, r3, r2, r3
 800224e:	0a5b      	lsrs	r3, r3, #9
 8002250:	687a      	ldr	r2, [r7, #4]
 8002252:	fb02 f303 	mul.w	r3, r2, r3
 8002256:	60fb      	str	r3, [r7, #12]
 8002258:	bf00      	nop
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	1e5a      	subs	r2, r3, #1
 800225e:	60fa      	str	r2, [r7, #12]
 8002260:	2b00      	cmp	r3, #0
 8002262:	d1f9      	bne.n	8002258 <RCC_Delay+0x1c>
 8002264:	bf00      	nop
 8002266:	bf00      	nop
 8002268:	3714      	adds	r7, #20
 800226a:	46bd      	mov	sp, r7
 800226c:	bc80      	pop	{r7}
 800226e:	4770      	bx	lr
 8002270:	20000000 	.word	0x20000000
 8002274:	10624dd3 	.word	0x10624dd3

08002278 <HAL_TIM_Base_Init>:
 8002278:	b580      	push	{r7, lr}
 800227a:	b082      	sub	sp, #8
 800227c:	af00      	add	r7, sp, #0
 800227e:	6078      	str	r0, [r7, #4]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	2b00      	cmp	r3, #0
 8002284:	d101      	bne.n	800228a <HAL_TIM_Base_Init+0x12>
 8002286:	2301      	movs	r3, #1
 8002288:	e041      	b.n	800230e <HAL_TIM_Base_Init+0x96>
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002290:	b2db      	uxtb	r3, r3
 8002292:	2b00      	cmp	r3, #0
 8002294:	d106      	bne.n	80022a4 <HAL_TIM_Base_Init+0x2c>
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	2200      	movs	r2, #0
 800229a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800229e:	6878      	ldr	r0, [r7, #4]
 80022a0:	f7fe fc56 	bl	8000b50 <HAL_TIM_Base_MspInit>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	2202      	movs	r2, #2
 80022a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681a      	ldr	r2, [r3, #0]
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	3304      	adds	r3, #4
 80022b4:	4619      	mov	r1, r3
 80022b6:	4610      	mov	r0, r2
 80022b8:	f000 fa56 	bl	8002768 <TIM_Base_SetConfig>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	2201      	movs	r2, #1
 80022c0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2201      	movs	r2, #1
 80022c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	2201      	movs	r2, #1
 80022d0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	2201      	movs	r2, #1
 80022d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	2201      	movs	r2, #1
 80022e0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	2201      	movs	r2, #1
 80022e8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	2201      	movs	r2, #1
 80022f0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	2201      	movs	r2, #1
 80022f8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	2201      	movs	r2, #1
 8002300:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	2201      	movs	r2, #1
 8002308:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800230c:	2300      	movs	r3, #0
 800230e:	4618      	mov	r0, r3
 8002310:	3708      	adds	r7, #8
 8002312:	46bd      	mov	sp, r7
 8002314:	bd80      	pop	{r7, pc}
	...

08002318 <HAL_TIM_Base_Start_IT>:
 8002318:	b480      	push	{r7}
 800231a:	b085      	sub	sp, #20
 800231c:	af00      	add	r7, sp, #0
 800231e:	6078      	str	r0, [r7, #4]
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002326:	b2db      	uxtb	r3, r3
 8002328:	2b01      	cmp	r3, #1
 800232a:	d001      	beq.n	8002330 <HAL_TIM_Base_Start_IT+0x18>
 800232c:	2301      	movs	r3, #1
 800232e:	e035      	b.n	800239c <HAL_TIM_Base_Start_IT+0x84>
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	2202      	movs	r2, #2
 8002334:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	68da      	ldr	r2, [r3, #12]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f042 0201 	orr.w	r2, r2, #1
 8002346:	60da      	str	r2, [r3, #12]
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	4a16      	ldr	r2, [pc, #88]	; (80023a8 <HAL_TIM_Base_Start_IT+0x90>)
 800234e:	4293      	cmp	r3, r2
 8002350:	d009      	beq.n	8002366 <HAL_TIM_Base_Start_IT+0x4e>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800235a:	d004      	beq.n	8002366 <HAL_TIM_Base_Start_IT+0x4e>
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	4a12      	ldr	r2, [pc, #72]	; (80023ac <HAL_TIM_Base_Start_IT+0x94>)
 8002362:	4293      	cmp	r3, r2
 8002364:	d111      	bne.n	800238a <HAL_TIM_Base_Start_IT+0x72>
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	689b      	ldr	r3, [r3, #8]
 800236c:	f003 0307 	and.w	r3, r3, #7
 8002370:	60fb      	str	r3, [r7, #12]
 8002372:	68fb      	ldr	r3, [r7, #12]
 8002374:	2b06      	cmp	r3, #6
 8002376:	d010      	beq.n	800239a <HAL_TIM_Base_Start_IT+0x82>
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	681a      	ldr	r2, [r3, #0]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	f042 0201 	orr.w	r2, r2, #1
 8002386:	601a      	str	r2, [r3, #0]
 8002388:	e007      	b.n	800239a <HAL_TIM_Base_Start_IT+0x82>
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	681b      	ldr	r3, [r3, #0]
 800238e:	681a      	ldr	r2, [r3, #0]
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	f042 0201 	orr.w	r2, r2, #1
 8002398:	601a      	str	r2, [r3, #0]
 800239a:	2300      	movs	r3, #0
 800239c:	4618      	mov	r0, r3
 800239e:	3714      	adds	r7, #20
 80023a0:	46bd      	mov	sp, r7
 80023a2:	bc80      	pop	{r7}
 80023a4:	4770      	bx	lr
 80023a6:	bf00      	nop
 80023a8:	40012c00 	.word	0x40012c00
 80023ac:	40000400 	.word	0x40000400

080023b0 <HAL_TIM_IRQHandler>:
 80023b0:	b580      	push	{r7, lr}
 80023b2:	b084      	sub	sp, #16
 80023b4:	af00      	add	r7, sp, #0
 80023b6:	6078      	str	r0, [r7, #4]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	68db      	ldr	r3, [r3, #12]
 80023be:	60fb      	str	r3, [r7, #12]
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	691b      	ldr	r3, [r3, #16]
 80023c6:	60bb      	str	r3, [r7, #8]
 80023c8:	68bb      	ldr	r3, [r7, #8]
 80023ca:	f003 0302 	and.w	r3, r3, #2
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d020      	beq.n	8002414 <HAL_TIM_IRQHandler+0x64>
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	f003 0302 	and.w	r3, r3, #2
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d01b      	beq.n	8002414 <HAL_TIM_IRQHandler+0x64>
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	f06f 0202 	mvn.w	r2, #2
 80023e4:	611a      	str	r2, [r3, #16]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	2201      	movs	r2, #1
 80023ea:	771a      	strb	r2, [r3, #28]
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	699b      	ldr	r3, [r3, #24]
 80023f2:	f003 0303 	and.w	r3, r3, #3
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	d003      	beq.n	8002402 <HAL_TIM_IRQHandler+0x52>
 80023fa:	6878      	ldr	r0, [r7, #4]
 80023fc:	f000 f998 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
 8002400:	e005      	b.n	800240e <HAL_TIM_IRQHandler+0x5e>
 8002402:	6878      	ldr	r0, [r7, #4]
 8002404:	f000 f98b 	bl	800271e <HAL_TIM_OC_DelayElapsedCallback>
 8002408:	6878      	ldr	r0, [r7, #4]
 800240a:	f000 f99a 	bl	8002742 <HAL_TIM_PWM_PulseFinishedCallback>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	2200      	movs	r2, #0
 8002412:	771a      	strb	r2, [r3, #28]
 8002414:	68bb      	ldr	r3, [r7, #8]
 8002416:	f003 0304 	and.w	r3, r3, #4
 800241a:	2b00      	cmp	r3, #0
 800241c:	d020      	beq.n	8002460 <HAL_TIM_IRQHandler+0xb0>
 800241e:	68fb      	ldr	r3, [r7, #12]
 8002420:	f003 0304 	and.w	r3, r3, #4
 8002424:	2b00      	cmp	r3, #0
 8002426:	d01b      	beq.n	8002460 <HAL_TIM_IRQHandler+0xb0>
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	f06f 0204 	mvn.w	r2, #4
 8002430:	611a      	str	r2, [r3, #16]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	2202      	movs	r2, #2
 8002436:	771a      	strb	r2, [r3, #28]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	699b      	ldr	r3, [r3, #24]
 800243e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002442:	2b00      	cmp	r3, #0
 8002444:	d003      	beq.n	800244e <HAL_TIM_IRQHandler+0x9e>
 8002446:	6878      	ldr	r0, [r7, #4]
 8002448:	f000 f972 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
 800244c:	e005      	b.n	800245a <HAL_TIM_IRQHandler+0xaa>
 800244e:	6878      	ldr	r0, [r7, #4]
 8002450:	f000 f965 	bl	800271e <HAL_TIM_OC_DelayElapsedCallback>
 8002454:	6878      	ldr	r0, [r7, #4]
 8002456:	f000 f974 	bl	8002742 <HAL_TIM_PWM_PulseFinishedCallback>
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	2200      	movs	r2, #0
 800245e:	771a      	strb	r2, [r3, #28]
 8002460:	68bb      	ldr	r3, [r7, #8]
 8002462:	f003 0308 	and.w	r3, r3, #8
 8002466:	2b00      	cmp	r3, #0
 8002468:	d020      	beq.n	80024ac <HAL_TIM_IRQHandler+0xfc>
 800246a:	68fb      	ldr	r3, [r7, #12]
 800246c:	f003 0308 	and.w	r3, r3, #8
 8002470:	2b00      	cmp	r3, #0
 8002472:	d01b      	beq.n	80024ac <HAL_TIM_IRQHandler+0xfc>
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	f06f 0208 	mvn.w	r2, #8
 800247c:	611a      	str	r2, [r3, #16]
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	2204      	movs	r2, #4
 8002482:	771a      	strb	r2, [r3, #28]
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	681b      	ldr	r3, [r3, #0]
 8002488:	69db      	ldr	r3, [r3, #28]
 800248a:	f003 0303 	and.w	r3, r3, #3
 800248e:	2b00      	cmp	r3, #0
 8002490:	d003      	beq.n	800249a <HAL_TIM_IRQHandler+0xea>
 8002492:	6878      	ldr	r0, [r7, #4]
 8002494:	f000 f94c 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
 8002498:	e005      	b.n	80024a6 <HAL_TIM_IRQHandler+0xf6>
 800249a:	6878      	ldr	r0, [r7, #4]
 800249c:	f000 f93f 	bl	800271e <HAL_TIM_OC_DelayElapsedCallback>
 80024a0:	6878      	ldr	r0, [r7, #4]
 80024a2:	f000 f94e 	bl	8002742 <HAL_TIM_PWM_PulseFinishedCallback>
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	2200      	movs	r2, #0
 80024aa:	771a      	strb	r2, [r3, #28]
 80024ac:	68bb      	ldr	r3, [r7, #8]
 80024ae:	f003 0310 	and.w	r3, r3, #16
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d020      	beq.n	80024f8 <HAL_TIM_IRQHandler+0x148>
 80024b6:	68fb      	ldr	r3, [r7, #12]
 80024b8:	f003 0310 	and.w	r3, r3, #16
 80024bc:	2b00      	cmp	r3, #0
 80024be:	d01b      	beq.n	80024f8 <HAL_TIM_IRQHandler+0x148>
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	f06f 0210 	mvn.w	r2, #16
 80024c8:	611a      	str	r2, [r3, #16]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	2208      	movs	r2, #8
 80024ce:	771a      	strb	r2, [r3, #28]
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	69db      	ldr	r3, [r3, #28]
 80024d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80024da:	2b00      	cmp	r3, #0
 80024dc:	d003      	beq.n	80024e6 <HAL_TIM_IRQHandler+0x136>
 80024de:	6878      	ldr	r0, [r7, #4]
 80024e0:	f000 f926 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
 80024e4:	e005      	b.n	80024f2 <HAL_TIM_IRQHandler+0x142>
 80024e6:	6878      	ldr	r0, [r7, #4]
 80024e8:	f000 f919 	bl	800271e <HAL_TIM_OC_DelayElapsedCallback>
 80024ec:	6878      	ldr	r0, [r7, #4]
 80024ee:	f000 f928 	bl	8002742 <HAL_TIM_PWM_PulseFinishedCallback>
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	2200      	movs	r2, #0
 80024f6:	771a      	strb	r2, [r3, #28]
 80024f8:	68bb      	ldr	r3, [r7, #8]
 80024fa:	f003 0301 	and.w	r3, r3, #1
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d00c      	beq.n	800251c <HAL_TIM_IRQHandler+0x16c>
 8002502:	68fb      	ldr	r3, [r7, #12]
 8002504:	f003 0301 	and.w	r3, r3, #1
 8002508:	2b00      	cmp	r3, #0
 800250a:	d007      	beq.n	800251c <HAL_TIM_IRQHandler+0x16c>
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	f06f 0201 	mvn.w	r2, #1
 8002514:	611a      	str	r2, [r3, #16]
 8002516:	6878      	ldr	r0, [r7, #4]
 8002518:	f7fe fad2 	bl	8000ac0 <HAL_TIM_PeriodElapsedCallback>
 800251c:	68bb      	ldr	r3, [r7, #8]
 800251e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002522:	2b00      	cmp	r3, #0
 8002524:	d00c      	beq.n	8002540 <HAL_TIM_IRQHandler+0x190>
 8002526:	68fb      	ldr	r3, [r7, #12]
 8002528:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800252c:	2b00      	cmp	r3, #0
 800252e:	d007      	beq.n	8002540 <HAL_TIM_IRQHandler+0x190>
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002538:	611a      	str	r2, [r3, #16]
 800253a:	6878      	ldr	r0, [r7, #4]
 800253c:	f000 fa6f 	bl	8002a1e <HAL_TIMEx_BreakCallback>
 8002540:	68bb      	ldr	r3, [r7, #8]
 8002542:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002546:	2b00      	cmp	r3, #0
 8002548:	d00c      	beq.n	8002564 <HAL_TIM_IRQHandler+0x1b4>
 800254a:	68fb      	ldr	r3, [r7, #12]
 800254c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002550:	2b00      	cmp	r3, #0
 8002552:	d007      	beq.n	8002564 <HAL_TIM_IRQHandler+0x1b4>
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800255c:	611a      	str	r2, [r3, #16]
 800255e:	6878      	ldr	r0, [r7, #4]
 8002560:	f000 f8f8 	bl	8002754 <HAL_TIM_TriggerCallback>
 8002564:	68bb      	ldr	r3, [r7, #8]
 8002566:	f003 0320 	and.w	r3, r3, #32
 800256a:	2b00      	cmp	r3, #0
 800256c:	d00c      	beq.n	8002588 <HAL_TIM_IRQHandler+0x1d8>
 800256e:	68fb      	ldr	r3, [r7, #12]
 8002570:	f003 0320 	and.w	r3, r3, #32
 8002574:	2b00      	cmp	r3, #0
 8002576:	d007      	beq.n	8002588 <HAL_TIM_IRQHandler+0x1d8>
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	f06f 0220 	mvn.w	r2, #32
 8002580:	611a      	str	r2, [r3, #16]
 8002582:	6878      	ldr	r0, [r7, #4]
 8002584:	f000 fa42 	bl	8002a0c <HAL_TIMEx_CommutCallback>
 8002588:	bf00      	nop
 800258a:	3710      	adds	r7, #16
 800258c:	46bd      	mov	sp, r7
 800258e:	bd80      	pop	{r7, pc}

08002590 <HAL_TIM_ConfigClockSource>:
 8002590:	b580      	push	{r7, lr}
 8002592:	b084      	sub	sp, #16
 8002594:	af00      	add	r7, sp, #0
 8002596:	6078      	str	r0, [r7, #4]
 8002598:	6039      	str	r1, [r7, #0]
 800259a:	2300      	movs	r3, #0
 800259c:	73fb      	strb	r3, [r7, #15]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80025a4:	2b01      	cmp	r3, #1
 80025a6:	d101      	bne.n	80025ac <HAL_TIM_ConfigClockSource+0x1c>
 80025a8:	2302      	movs	r3, #2
 80025aa:	e0b4      	b.n	8002716 <HAL_TIM_ConfigClockSource+0x186>
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	2201      	movs	r2, #1
 80025b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	2202      	movs	r2, #2
 80025b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	689b      	ldr	r3, [r3, #8]
 80025c2:	60bb      	str	r3, [r7, #8]
 80025c4:	68bb      	ldr	r3, [r7, #8]
 80025c6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80025ca:	60bb      	str	r3, [r7, #8]
 80025cc:	68bb      	ldr	r3, [r7, #8]
 80025ce:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80025d2:	60bb      	str	r3, [r7, #8]
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	68ba      	ldr	r2, [r7, #8]
 80025da:	609a      	str	r2, [r3, #8]
 80025dc:	683b      	ldr	r3, [r7, #0]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80025e4:	d03e      	beq.n	8002664 <HAL_TIM_ConfigClockSource+0xd4>
 80025e6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80025ea:	f200 8087 	bhi.w	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 80025ee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80025f2:	f000 8086 	beq.w	8002702 <HAL_TIM_ConfigClockSource+0x172>
 80025f6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80025fa:	d87f      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 80025fc:	2b70      	cmp	r3, #112	; 0x70
 80025fe:	d01a      	beq.n	8002636 <HAL_TIM_ConfigClockSource+0xa6>
 8002600:	2b70      	cmp	r3, #112	; 0x70
 8002602:	d87b      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 8002604:	2b60      	cmp	r3, #96	; 0x60
 8002606:	d050      	beq.n	80026aa <HAL_TIM_ConfigClockSource+0x11a>
 8002608:	2b60      	cmp	r3, #96	; 0x60
 800260a:	d877      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 800260c:	2b50      	cmp	r3, #80	; 0x50
 800260e:	d03c      	beq.n	800268a <HAL_TIM_ConfigClockSource+0xfa>
 8002610:	2b50      	cmp	r3, #80	; 0x50
 8002612:	d873      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 8002614:	2b40      	cmp	r3, #64	; 0x40
 8002616:	d058      	beq.n	80026ca <HAL_TIM_ConfigClockSource+0x13a>
 8002618:	2b40      	cmp	r3, #64	; 0x40
 800261a:	d86f      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 800261c:	2b30      	cmp	r3, #48	; 0x30
 800261e:	d064      	beq.n	80026ea <HAL_TIM_ConfigClockSource+0x15a>
 8002620:	2b30      	cmp	r3, #48	; 0x30
 8002622:	d86b      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 8002624:	2b20      	cmp	r3, #32
 8002626:	d060      	beq.n	80026ea <HAL_TIM_ConfigClockSource+0x15a>
 8002628:	2b20      	cmp	r3, #32
 800262a:	d867      	bhi.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 800262c:	2b00      	cmp	r3, #0
 800262e:	d05c      	beq.n	80026ea <HAL_TIM_ConfigClockSource+0x15a>
 8002630:	2b10      	cmp	r3, #16
 8002632:	d05a      	beq.n	80026ea <HAL_TIM_ConfigClockSource+0x15a>
 8002634:	e062      	b.n	80026fc <HAL_TIM_ConfigClockSource+0x16c>
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	6818      	ldr	r0, [r3, #0]
 800263a:	683b      	ldr	r3, [r7, #0]
 800263c:	6899      	ldr	r1, [r3, #8]
 800263e:	683b      	ldr	r3, [r7, #0]
 8002640:	685a      	ldr	r2, [r3, #4]
 8002642:	683b      	ldr	r3, [r7, #0]
 8002644:	68db      	ldr	r3, [r3, #12]
 8002646:	f000 f96a 	bl	800291e <TIM_ETR_SetConfig>
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	689b      	ldr	r3, [r3, #8]
 8002650:	60bb      	str	r3, [r7, #8]
 8002652:	68bb      	ldr	r3, [r7, #8]
 8002654:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002658:	60bb      	str	r3, [r7, #8]
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	68ba      	ldr	r2, [r7, #8]
 8002660:	609a      	str	r2, [r3, #8]
 8002662:	e04f      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	6818      	ldr	r0, [r3, #0]
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	6899      	ldr	r1, [r3, #8]
 800266c:	683b      	ldr	r3, [r7, #0]
 800266e:	685a      	ldr	r2, [r3, #4]
 8002670:	683b      	ldr	r3, [r7, #0]
 8002672:	68db      	ldr	r3, [r3, #12]
 8002674:	f000 f953 	bl	800291e <TIM_ETR_SetConfig>
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	681b      	ldr	r3, [r3, #0]
 800267c:	689a      	ldr	r2, [r3, #8]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002686:	609a      	str	r2, [r3, #8]
 8002688:	e03c      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	6818      	ldr	r0, [r3, #0]
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	6859      	ldr	r1, [r3, #4]
 8002692:	683b      	ldr	r3, [r7, #0]
 8002694:	68db      	ldr	r3, [r3, #12]
 8002696:	461a      	mov	r2, r3
 8002698:	f000 f8ca 	bl	8002830 <TIM_TI1_ConfigInputStage>
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	2150      	movs	r1, #80	; 0x50
 80026a2:	4618      	mov	r0, r3
 80026a4:	f000 f921 	bl	80028ea <TIM_ITRx_SetConfig>
 80026a8:	e02c      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	6818      	ldr	r0, [r3, #0]
 80026ae:	683b      	ldr	r3, [r7, #0]
 80026b0:	6859      	ldr	r1, [r3, #4]
 80026b2:	683b      	ldr	r3, [r7, #0]
 80026b4:	68db      	ldr	r3, [r3, #12]
 80026b6:	461a      	mov	r2, r3
 80026b8:	f000 f8e8 	bl	800288c <TIM_TI2_ConfigInputStage>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	2160      	movs	r1, #96	; 0x60
 80026c2:	4618      	mov	r0, r3
 80026c4:	f000 f911 	bl	80028ea <TIM_ITRx_SetConfig>
 80026c8:	e01c      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	6818      	ldr	r0, [r3, #0]
 80026ce:	683b      	ldr	r3, [r7, #0]
 80026d0:	6859      	ldr	r1, [r3, #4]
 80026d2:	683b      	ldr	r3, [r7, #0]
 80026d4:	68db      	ldr	r3, [r3, #12]
 80026d6:	461a      	mov	r2, r3
 80026d8:	f000 f8aa 	bl	8002830 <TIM_TI1_ConfigInputStage>
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	2140      	movs	r1, #64	; 0x40
 80026e2:	4618      	mov	r0, r3
 80026e4:	f000 f901 	bl	80028ea <TIM_ITRx_SetConfig>
 80026e8:	e00c      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681a      	ldr	r2, [r3, #0]
 80026ee:	683b      	ldr	r3, [r7, #0]
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	4619      	mov	r1, r3
 80026f4:	4610      	mov	r0, r2
 80026f6:	f000 f8f8 	bl	80028ea <TIM_ITRx_SetConfig>
 80026fa:	e003      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 80026fc:	2301      	movs	r3, #1
 80026fe:	73fb      	strb	r3, [r7, #15]
 8002700:	e000      	b.n	8002704 <HAL_TIM_ConfigClockSource+0x174>
 8002702:	bf00      	nop
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	2201      	movs	r2, #1
 8002708:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	2200      	movs	r2, #0
 8002710:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002714:	7bfb      	ldrb	r3, [r7, #15]
 8002716:	4618      	mov	r0, r3
 8002718:	3710      	adds	r7, #16
 800271a:	46bd      	mov	sp, r7
 800271c:	bd80      	pop	{r7, pc}

0800271e <HAL_TIM_OC_DelayElapsedCallback>:
 800271e:	b480      	push	{r7}
 8002720:	b083      	sub	sp, #12
 8002722:	af00      	add	r7, sp, #0
 8002724:	6078      	str	r0, [r7, #4]
 8002726:	bf00      	nop
 8002728:	370c      	adds	r7, #12
 800272a:	46bd      	mov	sp, r7
 800272c:	bc80      	pop	{r7}
 800272e:	4770      	bx	lr

08002730 <HAL_TIM_IC_CaptureCallback>:
 8002730:	b480      	push	{r7}
 8002732:	b083      	sub	sp, #12
 8002734:	af00      	add	r7, sp, #0
 8002736:	6078      	str	r0, [r7, #4]
 8002738:	bf00      	nop
 800273a:	370c      	adds	r7, #12
 800273c:	46bd      	mov	sp, r7
 800273e:	bc80      	pop	{r7}
 8002740:	4770      	bx	lr

08002742 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002742:	b480      	push	{r7}
 8002744:	b083      	sub	sp, #12
 8002746:	af00      	add	r7, sp, #0
 8002748:	6078      	str	r0, [r7, #4]
 800274a:	bf00      	nop
 800274c:	370c      	adds	r7, #12
 800274e:	46bd      	mov	sp, r7
 8002750:	bc80      	pop	{r7}
 8002752:	4770      	bx	lr

08002754 <HAL_TIM_TriggerCallback>:
 8002754:	b480      	push	{r7}
 8002756:	b083      	sub	sp, #12
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
 800275c:	bf00      	nop
 800275e:	370c      	adds	r7, #12
 8002760:	46bd      	mov	sp, r7
 8002762:	bc80      	pop	{r7}
 8002764:	4770      	bx	lr
	...

08002768 <TIM_Base_SetConfig>:
 8002768:	b480      	push	{r7}
 800276a:	b085      	sub	sp, #20
 800276c:	af00      	add	r7, sp, #0
 800276e:	6078      	str	r0, [r7, #4]
 8002770:	6039      	str	r1, [r7, #0]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	60fb      	str	r3, [r7, #12]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	4a2b      	ldr	r2, [pc, #172]	; (8002828 <TIM_Base_SetConfig+0xc0>)
 800277c:	4293      	cmp	r3, r2
 800277e:	d007      	beq.n	8002790 <TIM_Base_SetConfig+0x28>
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002786:	d003      	beq.n	8002790 <TIM_Base_SetConfig+0x28>
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	4a28      	ldr	r2, [pc, #160]	; (800282c <TIM_Base_SetConfig+0xc4>)
 800278c:	4293      	cmp	r3, r2
 800278e:	d108      	bne.n	80027a2 <TIM_Base_SetConfig+0x3a>
 8002790:	68fb      	ldr	r3, [r7, #12]
 8002792:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002796:	60fb      	str	r3, [r7, #12]
 8002798:	683b      	ldr	r3, [r7, #0]
 800279a:	685b      	ldr	r3, [r3, #4]
 800279c:	68fa      	ldr	r2, [r7, #12]
 800279e:	4313      	orrs	r3, r2
 80027a0:	60fb      	str	r3, [r7, #12]
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	4a20      	ldr	r2, [pc, #128]	; (8002828 <TIM_Base_SetConfig+0xc0>)
 80027a6:	4293      	cmp	r3, r2
 80027a8:	d007      	beq.n	80027ba <TIM_Base_SetConfig+0x52>
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027b0:	d003      	beq.n	80027ba <TIM_Base_SetConfig+0x52>
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	4a1d      	ldr	r2, [pc, #116]	; (800282c <TIM_Base_SetConfig+0xc4>)
 80027b6:	4293      	cmp	r3, r2
 80027b8:	d108      	bne.n	80027cc <TIM_Base_SetConfig+0x64>
 80027ba:	68fb      	ldr	r3, [r7, #12]
 80027bc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80027c0:	60fb      	str	r3, [r7, #12]
 80027c2:	683b      	ldr	r3, [r7, #0]
 80027c4:	68db      	ldr	r3, [r3, #12]
 80027c6:	68fa      	ldr	r2, [r7, #12]
 80027c8:	4313      	orrs	r3, r2
 80027ca:	60fb      	str	r3, [r7, #12]
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80027d2:	683b      	ldr	r3, [r7, #0]
 80027d4:	695b      	ldr	r3, [r3, #20]
 80027d6:	4313      	orrs	r3, r2
 80027d8:	60fb      	str	r3, [r7, #12]
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	68fa      	ldr	r2, [r7, #12]
 80027de:	601a      	str	r2, [r3, #0]
 80027e0:	683b      	ldr	r3, [r7, #0]
 80027e2:	689a      	ldr	r2, [r3, #8]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	62da      	str	r2, [r3, #44]	; 0x2c
 80027e8:	683b      	ldr	r3, [r7, #0]
 80027ea:	681a      	ldr	r2, [r3, #0]
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	629a      	str	r2, [r3, #40]	; 0x28
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	4a0d      	ldr	r2, [pc, #52]	; (8002828 <TIM_Base_SetConfig+0xc0>)
 80027f4:	4293      	cmp	r3, r2
 80027f6:	d103      	bne.n	8002800 <TIM_Base_SetConfig+0x98>
 80027f8:	683b      	ldr	r3, [r7, #0]
 80027fa:	691a      	ldr	r2, [r3, #16]
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	631a      	str	r2, [r3, #48]	; 0x30
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	2201      	movs	r2, #1
 8002804:	615a      	str	r2, [r3, #20]
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	691b      	ldr	r3, [r3, #16]
 800280a:	f003 0301 	and.w	r3, r3, #1
 800280e:	2b00      	cmp	r3, #0
 8002810:	d005      	beq.n	800281e <TIM_Base_SetConfig+0xb6>
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	691b      	ldr	r3, [r3, #16]
 8002816:	f023 0201 	bic.w	r2, r3, #1
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	611a      	str	r2, [r3, #16]
 800281e:	bf00      	nop
 8002820:	3714      	adds	r7, #20
 8002822:	46bd      	mov	sp, r7
 8002824:	bc80      	pop	{r7}
 8002826:	4770      	bx	lr
 8002828:	40012c00 	.word	0x40012c00
 800282c:	40000400 	.word	0x40000400

08002830 <TIM_TI1_ConfigInputStage>:
 8002830:	b480      	push	{r7}
 8002832:	b087      	sub	sp, #28
 8002834:	af00      	add	r7, sp, #0
 8002836:	60f8      	str	r0, [r7, #12]
 8002838:	60b9      	str	r1, [r7, #8]
 800283a:	607a      	str	r2, [r7, #4]
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	6a1b      	ldr	r3, [r3, #32]
 8002840:	617b      	str	r3, [r7, #20]
 8002842:	68fb      	ldr	r3, [r7, #12]
 8002844:	6a1b      	ldr	r3, [r3, #32]
 8002846:	f023 0201 	bic.w	r2, r3, #1
 800284a:	68fb      	ldr	r3, [r7, #12]
 800284c:	621a      	str	r2, [r3, #32]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	699b      	ldr	r3, [r3, #24]
 8002852:	613b      	str	r3, [r7, #16]
 8002854:	693b      	ldr	r3, [r7, #16]
 8002856:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800285a:	613b      	str	r3, [r7, #16]
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	011b      	lsls	r3, r3, #4
 8002860:	693a      	ldr	r2, [r7, #16]
 8002862:	4313      	orrs	r3, r2
 8002864:	613b      	str	r3, [r7, #16]
 8002866:	697b      	ldr	r3, [r7, #20]
 8002868:	f023 030a 	bic.w	r3, r3, #10
 800286c:	617b      	str	r3, [r7, #20]
 800286e:	697a      	ldr	r2, [r7, #20]
 8002870:	68bb      	ldr	r3, [r7, #8]
 8002872:	4313      	orrs	r3, r2
 8002874:	617b      	str	r3, [r7, #20]
 8002876:	68fb      	ldr	r3, [r7, #12]
 8002878:	693a      	ldr	r2, [r7, #16]
 800287a:	619a      	str	r2, [r3, #24]
 800287c:	68fb      	ldr	r3, [r7, #12]
 800287e:	697a      	ldr	r2, [r7, #20]
 8002880:	621a      	str	r2, [r3, #32]
 8002882:	bf00      	nop
 8002884:	371c      	adds	r7, #28
 8002886:	46bd      	mov	sp, r7
 8002888:	bc80      	pop	{r7}
 800288a:	4770      	bx	lr

0800288c <TIM_TI2_ConfigInputStage>:
 800288c:	b480      	push	{r7}
 800288e:	b087      	sub	sp, #28
 8002890:	af00      	add	r7, sp, #0
 8002892:	60f8      	str	r0, [r7, #12]
 8002894:	60b9      	str	r1, [r7, #8]
 8002896:	607a      	str	r2, [r7, #4]
 8002898:	68fb      	ldr	r3, [r7, #12]
 800289a:	6a1b      	ldr	r3, [r3, #32]
 800289c:	617b      	str	r3, [r7, #20]
 800289e:	68fb      	ldr	r3, [r7, #12]
 80028a0:	6a1b      	ldr	r3, [r3, #32]
 80028a2:	f023 0210 	bic.w	r2, r3, #16
 80028a6:	68fb      	ldr	r3, [r7, #12]
 80028a8:	621a      	str	r2, [r3, #32]
 80028aa:	68fb      	ldr	r3, [r7, #12]
 80028ac:	699b      	ldr	r3, [r3, #24]
 80028ae:	613b      	str	r3, [r7, #16]
 80028b0:	693b      	ldr	r3, [r7, #16]
 80028b2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80028b6:	613b      	str	r3, [r7, #16]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	031b      	lsls	r3, r3, #12
 80028bc:	693a      	ldr	r2, [r7, #16]
 80028be:	4313      	orrs	r3, r2
 80028c0:	613b      	str	r3, [r7, #16]
 80028c2:	697b      	ldr	r3, [r7, #20]
 80028c4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80028c8:	617b      	str	r3, [r7, #20]
 80028ca:	68bb      	ldr	r3, [r7, #8]
 80028cc:	011b      	lsls	r3, r3, #4
 80028ce:	697a      	ldr	r2, [r7, #20]
 80028d0:	4313      	orrs	r3, r2
 80028d2:	617b      	str	r3, [r7, #20]
 80028d4:	68fb      	ldr	r3, [r7, #12]
 80028d6:	693a      	ldr	r2, [r7, #16]
 80028d8:	619a      	str	r2, [r3, #24]
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	697a      	ldr	r2, [r7, #20]
 80028de:	621a      	str	r2, [r3, #32]
 80028e0:	bf00      	nop
 80028e2:	371c      	adds	r7, #28
 80028e4:	46bd      	mov	sp, r7
 80028e6:	bc80      	pop	{r7}
 80028e8:	4770      	bx	lr

080028ea <TIM_ITRx_SetConfig>:
 80028ea:	b480      	push	{r7}
 80028ec:	b085      	sub	sp, #20
 80028ee:	af00      	add	r7, sp, #0
 80028f0:	6078      	str	r0, [r7, #4]
 80028f2:	6039      	str	r1, [r7, #0]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	689b      	ldr	r3, [r3, #8]
 80028f8:	60fb      	str	r3, [r7, #12]
 80028fa:	68fb      	ldr	r3, [r7, #12]
 80028fc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002900:	60fb      	str	r3, [r7, #12]
 8002902:	683a      	ldr	r2, [r7, #0]
 8002904:	68fb      	ldr	r3, [r7, #12]
 8002906:	4313      	orrs	r3, r2
 8002908:	f043 0307 	orr.w	r3, r3, #7
 800290c:	60fb      	str	r3, [r7, #12]
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	68fa      	ldr	r2, [r7, #12]
 8002912:	609a      	str	r2, [r3, #8]
 8002914:	bf00      	nop
 8002916:	3714      	adds	r7, #20
 8002918:	46bd      	mov	sp, r7
 800291a:	bc80      	pop	{r7}
 800291c:	4770      	bx	lr

0800291e <TIM_ETR_SetConfig>:
 800291e:	b480      	push	{r7}
 8002920:	b087      	sub	sp, #28
 8002922:	af00      	add	r7, sp, #0
 8002924:	60f8      	str	r0, [r7, #12]
 8002926:	60b9      	str	r1, [r7, #8]
 8002928:	607a      	str	r2, [r7, #4]
 800292a:	603b      	str	r3, [r7, #0]
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	689b      	ldr	r3, [r3, #8]
 8002930:	617b      	str	r3, [r7, #20]
 8002932:	697b      	ldr	r3, [r7, #20]
 8002934:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002938:	617b      	str	r3, [r7, #20]
 800293a:	683b      	ldr	r3, [r7, #0]
 800293c:	021a      	lsls	r2, r3, #8
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	431a      	orrs	r2, r3
 8002942:	68bb      	ldr	r3, [r7, #8]
 8002944:	4313      	orrs	r3, r2
 8002946:	697a      	ldr	r2, [r7, #20]
 8002948:	4313      	orrs	r3, r2
 800294a:	617b      	str	r3, [r7, #20]
 800294c:	68fb      	ldr	r3, [r7, #12]
 800294e:	697a      	ldr	r2, [r7, #20]
 8002950:	609a      	str	r2, [r3, #8]
 8002952:	bf00      	nop
 8002954:	371c      	adds	r7, #28
 8002956:	46bd      	mov	sp, r7
 8002958:	bc80      	pop	{r7}
 800295a:	4770      	bx	lr

0800295c <HAL_TIMEx_MasterConfigSynchronization>:
 800295c:	b480      	push	{r7}
 800295e:	b085      	sub	sp, #20
 8002960:	af00      	add	r7, sp, #0
 8002962:	6078      	str	r0, [r7, #4]
 8002964:	6039      	str	r1, [r7, #0]
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800296c:	2b01      	cmp	r3, #1
 800296e:	d101      	bne.n	8002974 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002970:	2302      	movs	r3, #2
 8002972:	e041      	b.n	80029f8 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	2201      	movs	r2, #1
 8002978:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	2202      	movs	r2, #2
 8002980:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	685b      	ldr	r3, [r3, #4]
 800298a:	60fb      	str	r3, [r7, #12]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	689b      	ldr	r3, [r3, #8]
 8002992:	60bb      	str	r3, [r7, #8]
 8002994:	68fb      	ldr	r3, [r7, #12]
 8002996:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800299a:	60fb      	str	r3, [r7, #12]
 800299c:	683b      	ldr	r3, [r7, #0]
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	68fa      	ldr	r2, [r7, #12]
 80029a2:	4313      	orrs	r3, r2
 80029a4:	60fb      	str	r3, [r7, #12]
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	68fa      	ldr	r2, [r7, #12]
 80029ac:	605a      	str	r2, [r3, #4]
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	4a14      	ldr	r2, [pc, #80]	; (8002a04 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 80029b4:	4293      	cmp	r3, r2
 80029b6:	d009      	beq.n	80029cc <HAL_TIMEx_MasterConfigSynchronization+0x70>
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80029c0:	d004      	beq.n	80029cc <HAL_TIMEx_MasterConfigSynchronization+0x70>
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	4a10      	ldr	r2, [pc, #64]	; (8002a08 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 80029c8:	4293      	cmp	r3, r2
 80029ca:	d10c      	bne.n	80029e6 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 80029cc:	68bb      	ldr	r3, [r7, #8]
 80029ce:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80029d2:	60bb      	str	r3, [r7, #8]
 80029d4:	683b      	ldr	r3, [r7, #0]
 80029d6:	685b      	ldr	r3, [r3, #4]
 80029d8:	68ba      	ldr	r2, [r7, #8]
 80029da:	4313      	orrs	r3, r2
 80029dc:	60bb      	str	r3, [r7, #8]
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	68ba      	ldr	r2, [r7, #8]
 80029e4:	609a      	str	r2, [r3, #8]
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	2201      	movs	r2, #1
 80029ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	2200      	movs	r2, #0
 80029f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029f6:	2300      	movs	r3, #0
 80029f8:	4618      	mov	r0, r3
 80029fa:	3714      	adds	r7, #20
 80029fc:	46bd      	mov	sp, r7
 80029fe:	bc80      	pop	{r7}
 8002a00:	4770      	bx	lr
 8002a02:	bf00      	nop
 8002a04:	40012c00 	.word	0x40012c00
 8002a08:	40000400 	.word	0x40000400

08002a0c <HAL_TIMEx_CommutCallback>:
 8002a0c:	b480      	push	{r7}
 8002a0e:	b083      	sub	sp, #12
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	6078      	str	r0, [r7, #4]
 8002a14:	bf00      	nop
 8002a16:	370c      	adds	r7, #12
 8002a18:	46bd      	mov	sp, r7
 8002a1a:	bc80      	pop	{r7}
 8002a1c:	4770      	bx	lr

08002a1e <HAL_TIMEx_BreakCallback>:
 8002a1e:	b480      	push	{r7}
 8002a20:	b083      	sub	sp, #12
 8002a22:	af00      	add	r7, sp, #0
 8002a24:	6078      	str	r0, [r7, #4]
 8002a26:	bf00      	nop
 8002a28:	370c      	adds	r7, #12
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bc80      	pop	{r7}
 8002a2e:	4770      	bx	lr

08002a30 <memset>:
 8002a30:	4603      	mov	r3, r0
 8002a32:	4402      	add	r2, r0
 8002a34:	4293      	cmp	r3, r2
 8002a36:	d100      	bne.n	8002a3a <memset+0xa>
 8002a38:	4770      	bx	lr
 8002a3a:	f803 1b01 	strb.w	r1, [r3], #1
 8002a3e:	e7f9      	b.n	8002a34 <memset+0x4>

08002a40 <__libc_init_array>:
 8002a40:	b570      	push	{r4, r5, r6, lr}
 8002a42:	2600      	movs	r6, #0
 8002a44:	4d0c      	ldr	r5, [pc, #48]	; (8002a78 <__libc_init_array+0x38>)
 8002a46:	4c0d      	ldr	r4, [pc, #52]	; (8002a7c <__libc_init_array+0x3c>)
 8002a48:	1b64      	subs	r4, r4, r5
 8002a4a:	10a4      	asrs	r4, r4, #2
 8002a4c:	42a6      	cmp	r6, r4
 8002a4e:	d109      	bne.n	8002a64 <__libc_init_array+0x24>
 8002a50:	f000 f81a 	bl	8002a88 <_init>
 8002a54:	2600      	movs	r6, #0
 8002a56:	4d0a      	ldr	r5, [pc, #40]	; (8002a80 <__libc_init_array+0x40>)
 8002a58:	4c0a      	ldr	r4, [pc, #40]	; (8002a84 <__libc_init_array+0x44>)
 8002a5a:	1b64      	subs	r4, r4, r5
 8002a5c:	10a4      	asrs	r4, r4, #2
 8002a5e:	42a6      	cmp	r6, r4
 8002a60:	d105      	bne.n	8002a6e <__libc_init_array+0x2e>
 8002a62:	bd70      	pop	{r4, r5, r6, pc}
 8002a64:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a68:	4798      	blx	r3
 8002a6a:	3601      	adds	r6, #1
 8002a6c:	e7ee      	b.n	8002a4c <__libc_init_array+0xc>
 8002a6e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a72:	4798      	blx	r3
 8002a74:	3601      	adds	r6, #1
 8002a76:	e7f2      	b.n	8002a5e <__libc_init_array+0x1e>
 8002a78:	08002ad0 	.word	0x08002ad0
 8002a7c:	08002ad0 	.word	0x08002ad0
 8002a80:	08002ad0 	.word	0x08002ad0
 8002a84:	08002ad4 	.word	0x08002ad4

08002a88 <_init>:
 8002a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a8a:	bf00      	nop
 8002a8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002a8e:	bc08      	pop	{r3}
 8002a90:	469e      	mov	lr, r3
 8002a92:	4770      	bx	lr

08002a94 <_fini>:
 8002a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a96:	bf00      	nop
 8002a98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002a9a:	bc08      	pop	{r3}
 8002a9c:	469e      	mov	lr, r3
 8002a9e:	4770      	bx	lr
